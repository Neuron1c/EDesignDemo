   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.comm	_record,50,1
  28                             		.comm	_mem,50,1
  29                             		.comm	_display_string,50,1
  30                             		.comm	_voltage,1,1
  31                             		.comm	_current1,1,1
  32                             		.comm	_current2,1,1
  33                             		.comm	_date,6,1
  34                             		.comm	_scrollFlag,1,1
  35                             		.comm	_tempFlag,1,1
  36                             		.comm	_secFlag,1,1
  37                             		.comm	_scrollCount,2,2
  38                             		.comm	_timerFlag,2,2
  39                             		.global	_R_TAU0_Create
  41                             	_R_TAU0_Create:
  42                             	.LFB0:
  43                             		.file 1 "../src/r_cg_timer.c"
   1:../src/r_cg_timer.c **** /**************************************************************************************************
   2:../src/r_cg_timer.c **** * DISCLAIMER
   3:../src/r_cg_timer.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/r_cg_timer.c **** * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is pr
   5:../src/r_cg_timer.c **** * applicable laws, including copyright laws. 
   6:../src/r_cg_timer.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIESREGARDING THIS SOFTWARE, WHETHER
   7:../src/r_cg_timer.c **** * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULA
   8:../src/r_cg_timer.c **** * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED N
   9:../src/r_cg_timer.c **** * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  10:../src/r_cg_timer.c **** * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, E
  11:../src/r_cg_timer.c **** * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/r_cg_timer.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/r_cg_timer.c **** * of this software. By using this software, you agree to the additional terms and conditions found 
  14:../src/r_cg_timer.c **** * following link:
  15:../src/r_cg_timer.c **** * http://www.renesas.com/disclaimer
  16:../src/r_cg_timer.c **** *
  17:../src/r_cg_timer.c **** * Copyright (C) 2011, 2015 Renesas Electronics Corporation. All rights reserved.
  18:../src/r_cg_timer.c **** ***************************************************************************************************
  19:../src/r_cg_timer.c **** 
  20:../src/r_cg_timer.c **** /**************************************************************************************************
  21:../src/r_cg_timer.c **** * File Name    : r_cg_timer.c
  22:../src/r_cg_timer.c **** * Version      : CodeGenerator for RL78/G13 V2.03.02.01 [15 May 2015]
  23:../src/r_cg_timer.c **** * Device(s)    : R5F100LE
  24:../src/r_cg_timer.c **** * Tool-Chain   : GCCRL78
  25:../src/r_cg_timer.c **** * Description  : This file implements device driver for TAU module.
  26:../src/r_cg_timer.c **** * Creation Date: 2017/05/08
  27:../src/r_cg_timer.c **** ***************************************************************************************************
  28:../src/r_cg_timer.c **** 
  29:../src/r_cg_timer.c **** /**************************************************************************************************
  30:../src/r_cg_timer.c **** Includes
  31:../src/r_cg_timer.c **** ***************************************************************************************************
  32:../src/r_cg_timer.c **** #include "r_cg_macrodriver.h"
  33:../src/r_cg_timer.c **** #include "r_cg_timer.h"
  34:../src/r_cg_timer.c **** /* Start user code for include. Do not edit comment generated here */
  35:../src/r_cg_timer.c **** /* End user code. Do not edit comment generated here */
  36:../src/r_cg_timer.c **** #include "r_cg_userdefine.h"
  37:../src/r_cg_timer.c **** 
  38:../src/r_cg_timer.c **** /**************************************************************************************************
  39:../src/r_cg_timer.c **** Global variables and functions
  40:../src/r_cg_timer.c **** ***************************************************************************************************
  41:../src/r_cg_timer.c **** /* Start user code for global. Do not edit comment generated here */
  42:../src/r_cg_timer.c **** /* End user code. Do not edit comment generated here */
  43:../src/r_cg_timer.c **** 
  44:../src/r_cg_timer.c **** /**************************************************************************************************
  45:../src/r_cg_timer.c **** * Function Name: R_TAU0_Create
  46:../src/r_cg_timer.c **** * Description  : This function initializes the TAU0 module.
  47:../src/r_cg_timer.c **** * Arguments    : None
  48:../src/r_cg_timer.c **** * Return Value : None
  49:../src/r_cg_timer.c **** ***************************************************************************************************
  50:../src/r_cg_timer.c **** void R_TAU0_Create(void)
  51:../src/r_cg_timer.c **** {
  44                             		.loc 1 51 0
  45                             		; start of function
  46                             		; push 6: r16 r18 r20
  47                             		; locals: 52 bytes
  48 0000 61 EF                   		sel	rb2
  49 0002 C1                      		push	ax ; r16
  50                             	.LCFI0:
  51 0003 C3                      		push	bc ; r18
  52                             	.LCFI1:
  53 0004 C5                      		push	de ; r20
  54                             	.LCFI2:
  55 0005 61 CF                   		sel	rb0
  56 0007 20 34                   		subw	sp, #52
  57                             	.LCFI3:
  52:../src/r_cg_timer.c ****     TAU0EN = 1U;    /* supplies input clock */
  58                             		.loc 1 52 0
  59 0009 C9 F0 F0 00             		movw	r8, #240
  60 000d AD F0                   		movw	ax, r8
  61 000f BD F2                   		movw	r10, ax
  62 0011 FA F2                   		movw	hl, r10
  63 0013 8B                      		mov	a, [hl]
  64 0014 98 31                   		mov	[sp+49], a
  65 0016 6C 01                   		or	a, #1
  66 0018 98 30                   		mov	[sp+48], a
  67 001a AD F0                   		movw	ax, r8
  68 001c BD F4                   		movw	r12, ax
  69 001e DA F4                   		movw	bc, r12
  70 0020 88 30                   		mov	a, [sp+48]
  71 0022 48 00 00                		mov	[bc], a
  53:../src/r_cg_timer.c ****     TPS0 = _0004_TAU_CKM0_FCLK_4 | _0000_TAU_CKM1_FCLK_0 | _0000_TAU_CKM2_FCLK_1 | _0000_TAU_CKM3_F
  72                             		.loc 1 53 0
  73 0025 C9 F0 B6 01             		movw	r8, #438
  74 0029 AD F0                   		movw	ax, r8
  75 002b BD F2                   		movw	r10, ax
  76 002d DA F2                   		movw	bc, r10
  77 002f 30 04 00                		movw	ax, #4
  78 0032 78 00 00                		movw	[bc], ax
  54:../src/r_cg_timer.c ****     /* Stop all channels */
  55:../src/r_cg_timer.c ****     TT0 = _0001_TAU_CH0_STOP_TRG_ON | _0002_TAU_CH1_STOP_TRG_ON | _0004_TAU_CH2_STOP_TRG_ON |
  79                             		.loc 1 55 0
  80 0035 C9 F0 B4 01             		movw	r8, #436
  81 0039 AD F0                   		movw	ax, r8
  82 003b BD F4                   		movw	r12, ax
  83 003d DA F4                   		movw	bc, r12
  84 003f 30 FF 0A                		movw	ax, #2815
  85 0042 78 00 00                		movw	[bc], ax
  56:../src/r_cg_timer.c ****           _0008_TAU_CH3_STOP_TRG_ON | _0010_TAU_CH4_STOP_TRG_ON | _0020_TAU_CH5_STOP_TRG_ON |
  57:../src/r_cg_timer.c ****           _0040_TAU_CH6_STOP_TRG_ON | _0080_TAU_CH7_STOP_TRG_ON | _0200_TAU_CH1_H8_STOP_TRG_ON |
  58:../src/r_cg_timer.c ****           _0800_TAU_CH3_H8_STOP_TRG_ON;
  59:../src/r_cg_timer.c ****     /* Mask channel 0 interrupt */
  60:../src/r_cg_timer.c ****     TMMK00 = 1U;    /* disable INTTM00 interrupt */
  86                             		.loc 1 60 0
  87 0045 C9 F0 E6 FF             		movw	r8, #-26
  88 0049 AD F0                   		movw	ax, r8
  89 004b BD F2                   		movw	r10, ax
  90 004d FA F2                   		movw	hl, r10
  91 004f 8B                      		mov	a, [hl]
  92 0050 98 2F                   		mov	[sp+47], a
  93 0052 6C 10                   		or	a, #16
  94 0054 98 2E                   		mov	[sp+46], a
  95 0056 AD F0                   		movw	ax, r8
  96 0058 BD F4                   		movw	r12, ax
  97 005a DA F4                   		movw	bc, r12
  98 005c 88 2E                   		mov	a, [sp+46]
  99 005e 48 00 00                		mov	[bc], a
  61:../src/r_cg_timer.c ****     TMIF00 = 0U;    /* clear INTTM00 interrupt flag */
 100                             		.loc 1 61 0
 101 0061 C9 F0 E2 FF             		movw	r8, #-30
 102 0065 AD F0                   		movw	ax, r8
 103 0067 BD F2                   		movw	r10, ax
 104 0069 FA F2                   		movw	hl, r10
 105 006b 8B                      		mov	a, [hl]
 106 006c 98 2D                   		mov	[sp+45], a
 107 006e 5C EF                   		and	a, #-17
 108 0070 98 2C                   		mov	[sp+44], a
 109 0072 AD F0                   		movw	ax, r8
 110 0074 BD F4                   		movw	r12, ax
 111 0076 DA F4                   		movw	bc, r12
 112 0078 88 2C                   		mov	a, [sp+44]
 113 007a 48 00 00                		mov	[bc], a
  62:../src/r_cg_timer.c ****     /* Mask channel 1 interrupt */
  63:../src/r_cg_timer.c ****     TMMK01 = 1U;    /* disable INTTM01 interrupt */
 114                             		.loc 1 63 0
 115 007d C9 F0 E6 FF             		movw	r8, #-26
 116 0081 AD F0                   		movw	ax, r8
 117 0083 BD F2                   		movw	r10, ax
 118 0085 FA F2                   		movw	hl, r10
 119 0087 8B                      		mov	a, [hl]
 120 0088 98 2B                   		mov	[sp+43], a
 121 008a 6C 20                   		or	a, #32
 122 008c 98 2A                   		mov	[sp+42], a
 123 008e AD F0                   		movw	ax, r8
 124 0090 BD F4                   		movw	r12, ax
 125 0092 DA F4                   		movw	bc, r12
 126 0094 88 2A                   		mov	a, [sp+42]
 127 0096 48 00 00                		mov	[bc], a
  64:../src/r_cg_timer.c ****     TMIF01 = 0U;    /* clear INTTM01 interrupt flag */
 128                             		.loc 1 64 0
 129 0099 C9 F0 E2 FF             		movw	r8, #-30
 130 009d AD F0                   		movw	ax, r8
 131 009f BD F2                   		movw	r10, ax
 132 00a1 FA F2                   		movw	hl, r10
 133 00a3 8B                      		mov	a, [hl]
 134 00a4 98 29                   		mov	[sp+41], a
 135 00a6 5C DF                   		and	a, #-33
 136 00a8 98 28                   		mov	[sp+40], a
 137 00aa AD F0                   		movw	ax, r8
 138 00ac BD F4                   		movw	r12, ax
 139 00ae DA F4                   		movw	bc, r12
 140 00b0 88 28                   		mov	a, [sp+40]
 141 00b2 48 00 00                		mov	[bc], a
  65:../src/r_cg_timer.c ****     /* Mask channel 1 higher 8 bits interrupt */
  66:../src/r_cg_timer.c ****     TMMK01H = 1U;    /* disable INTTM01H interrupt */
 142                             		.loc 1 66 0
 143 00b5 C9 F0 E5 FF             		movw	r8, #-27
 144 00b9 AD F0                   		movw	ax, r8
 145 00bb BD F2                   		movw	r10, ax
 146 00bd FA F2                   		movw	hl, r10
 147 00bf 8B                      		mov	a, [hl]
 148 00c0 98 27                   		mov	[sp+39], a
 149 00c2 6C 80                   		or	a, #-128
 150 00c4 98 26                   		mov	[sp+38], a
 151 00c6 AD F0                   		movw	ax, r8
 152 00c8 BD F4                   		movw	r12, ax
 153 00ca DA F4                   		movw	bc, r12
 154 00cc 88 26                   		mov	a, [sp+38]
 155 00ce 48 00 00                		mov	[bc], a
  67:../src/r_cg_timer.c ****     TMIF01H = 0U;    /* clear INTTM01H interrupt flag */
 156                             		.loc 1 67 0
 157 00d1 C9 F0 E1 FF             		movw	r8, #-31
 158 00d5 AD F0                   		movw	ax, r8
 159 00d7 BD F2                   		movw	r10, ax
 160 00d9 FA F2                   		movw	hl, r10
 161 00db 8B                      		mov	a, [hl]
 162 00dc 98 25                   		mov	[sp+37], a
 163 00de 5C 7F                   		and	a, #127
 164 00e0 98 24                   		mov	[sp+36], a
 165 00e2 AD F0                   		movw	ax, r8
 166 00e4 BD F4                   		movw	r12, ax
 167 00e6 DA F4                   		movw	bc, r12
 168 00e8 88 24                   		mov	a, [sp+36]
 169 00ea 48 00 00                		mov	[bc], a
  68:../src/r_cg_timer.c ****     /* Mask channel 2 interrupt */
  69:../src/r_cg_timer.c ****     TMMK02 = 1U;    /* disable INTTM02 interrupt */
 170                             		.loc 1 69 0
 171 00ed C9 F0 E6 FF             		movw	r8, #-26
 172 00f1 AD F0                   		movw	ax, r8
 173 00f3 BD F2                   		movw	r10, ax
 174 00f5 FA F2                   		movw	hl, r10
 175 00f7 8B                      		mov	a, [hl]
 176 00f8 98 23                   		mov	[sp+35], a
 177 00fa 6C 40                   		or	a, #64
 178 00fc 98 22                   		mov	[sp+34], a
 179 00fe AD F0                   		movw	ax, r8
 180 0100 BD F4                   		movw	r12, ax
 181 0102 DA F4                   		movw	bc, r12
 182 0104 88 22                   		mov	a, [sp+34]
 183 0106 48 00 00                		mov	[bc], a
  70:../src/r_cg_timer.c ****     TMIF02 = 0U;    /* clear INTTM02 interrupt flag */
 184                             		.loc 1 70 0
 185 0109 C9 F0 E2 FF             		movw	r8, #-30
 186 010d AD F0                   		movw	ax, r8
 187 010f BD F2                   		movw	r10, ax
 188 0111 FA F2                   		movw	hl, r10
 189 0113 8B                      		mov	a, [hl]
 190 0114 98 21                   		mov	[sp+33], a
 191 0116 5C BF                   		and	a, #-65
 192 0118 98 20                   		mov	[sp+32], a
 193 011a AD F0                   		movw	ax, r8
 194 011c BD F4                   		movw	r12, ax
 195 011e DA F4                   		movw	bc, r12
 196 0120 88 20                   		mov	a, [sp+32]
 197 0122 48 00 00                		mov	[bc], a
  71:../src/r_cg_timer.c ****     /* Mask channel 3 interrupt */
  72:../src/r_cg_timer.c ****     TMMK03 = 1U;    /* disable INTTM03 interrupt */
 198                             		.loc 1 72 0
 199 0125 C9 F0 E6 FF             		movw	r8, #-26
 200 0129 AD F0                   		movw	ax, r8
 201 012b BD F2                   		movw	r10, ax
 202 012d FA F2                   		movw	hl, r10
 203 012f 8B                      		mov	a, [hl]
 204 0130 98 1F                   		mov	[sp+31], a
 205 0132 6C 80                   		or	a, #-128
 206 0134 98 1E                   		mov	[sp+30], a
 207 0136 AD F0                   		movw	ax, r8
 208 0138 BD F4                   		movw	r12, ax
 209 013a DA F4                   		movw	bc, r12
 210 013c 88 1E                   		mov	a, [sp+30]
 211 013e 48 00 00                		mov	[bc], a
  73:../src/r_cg_timer.c ****     TMIF03 = 0U;    /* clear INTTM03 interrupt flag */
 212                             		.loc 1 73 0
 213 0141 C9 F0 E2 FF             		movw	r8, #-30
 214 0145 AD F0                   		movw	ax, r8
 215 0147 BD F2                   		movw	r10, ax
 216 0149 FA F2                   		movw	hl, r10
 217 014b 8B                      		mov	a, [hl]
 218 014c 98 1D                   		mov	[sp+29], a
 219 014e 5C 7F                   		and	a, #127
 220 0150 98 1C                   		mov	[sp+28], a
 221 0152 AD F0                   		movw	ax, r8
 222 0154 BD F4                   		movw	r12, ax
 223 0156 DA F4                   		movw	bc, r12
 224 0158 88 1C                   		mov	a, [sp+28]
 225 015a 48 00 00                		mov	[bc], a
  74:../src/r_cg_timer.c ****     /* Mask channel 3 higher 8 bits interrupt */
  75:../src/r_cg_timer.c ****     TMMK03H = 1U;    /* disable INTTM03H interrupt */
 226                             		.loc 1 75 0
 227 015d C9 F0 E6 FF             		movw	r8, #-26
 228 0161 AD F0                   		movw	ax, r8
 229 0163 BD F2                   		movw	r10, ax
 230 0165 FA F2                   		movw	hl, r10
 231 0167 8B                      		mov	a, [hl]
 232 0168 98 1B                   		mov	[sp+27], a
 233 016a 6C 04                   		or	a, #4
 234 016c 98 1A                   		mov	[sp+26], a
 235 016e AD F0                   		movw	ax, r8
 236 0170 BD F4                   		movw	r12, ax
 237 0172 DA F4                   		movw	bc, r12
 238 0174 88 1A                   		mov	a, [sp+26]
 239 0176 48 00 00                		mov	[bc], a
  76:../src/r_cg_timer.c ****     TMIF03H = 0U;    /* clear INTTM03H interrupt flag */
 240                             		.loc 1 76 0
 241 0179 C9 F0 E2 FF             		movw	r8, #-30
 242 017d AD F0                   		movw	ax, r8
 243 017f BD F2                   		movw	r10, ax
 244 0181 FA F2                   		movw	hl, r10
 245 0183 8B                      		mov	a, [hl]
 246 0184 98 19                   		mov	[sp+25], a
 247 0186 5C FB                   		and	a, #-5
 248 0188 98 18                   		mov	[sp+24], a
 249 018a AD F0                   		movw	ax, r8
 250 018c BD F4                   		movw	r12, ax
 251 018e DA F4                   		movw	bc, r12
 252 0190 88 18                   		mov	a, [sp+24]
 253 0192 48 00 00                		mov	[bc], a
  77:../src/r_cg_timer.c ****     /* Mask channel 4 interrupt */
  78:../src/r_cg_timer.c ****     TMMK04 = 1U;    /* disable INTTM04 interrupt */
 254                             		.loc 1 78 0
 255 0195 C9 F0 E7 FF             		movw	r8, #-25
 256 0199 AD F0                   		movw	ax, r8
 257 019b BD F2                   		movw	r10, ax
 258 019d FA F2                   		movw	hl, r10
 259 019f 8B                      		mov	a, [hl]
 260 01a0 98 17                   		mov	[sp+23], a
 261 01a2 6C 80                   		or	a, #-128
 262 01a4 98 16                   		mov	[sp+22], a
 263 01a6 AD F0                   		movw	ax, r8
 264 01a8 BD F4                   		movw	r12, ax
 265 01aa DA F4                   		movw	bc, r12
 266 01ac 88 16                   		mov	a, [sp+22]
 267 01ae 48 00 00                		mov	[bc], a
  79:../src/r_cg_timer.c ****     TMIF04 = 0U;    /* clear INTTM04 interrupt flag */
 268                             		.loc 1 79 0
 269 01b1 C9 F0 E3 FF             		movw	r8, #-29
 270 01b5 AD F0                   		movw	ax, r8
 271 01b7 BD F2                   		movw	r10, ax
 272 01b9 FA F2                   		movw	hl, r10
 273 01bb 8B                      		mov	a, [hl]
 274 01bc 98 15                   		mov	[sp+21], a
 275 01be 5C 7F                   		and	a, #127
 276 01c0 98 14                   		mov	[sp+20], a
 277 01c2 AD F0                   		movw	ax, r8
 278 01c4 BD F4                   		movw	r12, ax
 279 01c6 DA F4                   		movw	bc, r12
 280 01c8 88 14                   		mov	a, [sp+20]
 281 01ca 48 00 00                		mov	[bc], a
  80:../src/r_cg_timer.c ****     /* Mask channel 5 interrupt */
  81:../src/r_cg_timer.c ****     TMMK05 = 1U;    /* disable INTTM05 interrupt */
 282                             		.loc 1 81 0
 283 01cd C9 F0 D4 FF             		movw	r8, #-44
 284 01d1 AD F0                   		movw	ax, r8
 285 01d3 BD F2                   		movw	r10, ax
 286 01d5 FA F2                   		movw	hl, r10
 287 01d7 8B                      		mov	a, [hl]
 288 01d8 98 13                   		mov	[sp+19], a
 289 01da 6C 01                   		or	a, #1
 290 01dc 98 12                   		mov	[sp+18], a
 291 01de AD F0                   		movw	ax, r8
 292 01e0 BD F4                   		movw	r12, ax
 293 01e2 DA F4                   		movw	bc, r12
 294 01e4 88 12                   		mov	a, [sp+18]
 295 01e6 48 00 00                		mov	[bc], a
  82:../src/r_cg_timer.c ****     TMIF05 = 0U;    /* clear INTTM05 interrupt flag */
 296                             		.loc 1 82 0
 297 01e9 C9 F0 D0 FF             		movw	r8, #-48
 298 01ed AD F0                   		movw	ax, r8
 299 01ef BD F2                   		movw	r10, ax
 300 01f1 FA F2                   		movw	hl, r10
 301 01f3 8B                      		mov	a, [hl]
 302 01f4 98 11                   		mov	[sp+17], a
 303 01f6 5C FE                   		and	a, #-2
 304 01f8 98 10                   		mov	[sp+16], a
 305 01fa AD F0                   		movw	ax, r8
 306 01fc BD F4                   		movw	r12, ax
 307 01fe DA F4                   		movw	bc, r12
 308 0200 88 10                   		mov	a, [sp+16]
 309 0202 48 00 00                		mov	[bc], a
  83:../src/r_cg_timer.c ****     /* Mask channel 6 interrupt */
  84:../src/r_cg_timer.c ****     TMMK06 = 1U;    /* disable INTTM06 interrupt */
 310                             		.loc 1 84 0
 311 0205 C9 F0 D4 FF             		movw	r8, #-44
 312 0209 AD F0                   		movw	ax, r8
 313 020b BD F2                   		movw	r10, ax
 314 020d FA F2                   		movw	hl, r10
 315 020f 8B                      		mov	a, [hl]
 316 0210 98 0F                   		mov	[sp+15], a
 317 0212 6C 02                   		or	a, #2
 318 0214 98 0E                   		mov	[sp+14], a
 319 0216 AD F0                   		movw	ax, r8
 320 0218 BD F4                   		movw	r12, ax
 321 021a DA F4                   		movw	bc, r12
 322 021c 88 0E                   		mov	a, [sp+14]
 323 021e 48 00 00                		mov	[bc], a
  85:../src/r_cg_timer.c ****     TMIF06 = 0U;    /* clear INTTM06 interrupt flag */
 324                             		.loc 1 85 0
 325 0221 C9 F0 D0 FF             		movw	r8, #-48
 326 0225 AD F0                   		movw	ax, r8
 327 0227 BD F2                   		movw	r10, ax
 328 0229 FA F2                   		movw	hl, r10
 329 022b 8B                      		mov	a, [hl]
 330 022c 98 0D                   		mov	[sp+13], a
 331 022e 5C FD                   		and	a, #-3
 332 0230 98 0C                   		mov	[sp+12], a
 333 0232 AD F0                   		movw	ax, r8
 334 0234 BD F4                   		movw	r12, ax
 335 0236 DA F4                   		movw	bc, r12
 336 0238 88 0C                   		mov	a, [sp+12]
 337 023a 48 00 00                		mov	[bc], a
  86:../src/r_cg_timer.c ****     /* Mask channel 7 interrupt */
  87:../src/r_cg_timer.c ****     TMMK07 = 1U;    /* disable INTTM07 interrupt */
 338                             		.loc 1 87 0
 339 023d C9 F0 D4 FF             		movw	r8, #-44
 340 0241 AD F0                   		movw	ax, r8
 341 0243 BD F2                   		movw	r10, ax
 342 0245 FA F2                   		movw	hl, r10
 343 0247 8B                      		mov	a, [hl]
 344 0248 98 0B                   		mov	[sp+11], a
 345 024a 6C 04                   		or	a, #4
 346 024c 98 0A                   		mov	[sp+10], a
 347 024e AD F0                   		movw	ax, r8
 348 0250 BD F4                   		movw	r12, ax
 349 0252 DA F4                   		movw	bc, r12
 350 0254 88 0A                   		mov	a, [sp+10]
 351 0256 48 00 00                		mov	[bc], a
  88:../src/r_cg_timer.c ****     TMIF07 = 0U;    /* clear INTTM07 interrupt flag */
 352                             		.loc 1 88 0
 353 0259 C9 F0 D0 FF             		movw	r8, #-48
 354 025d AD F0                   		movw	ax, r8
 355 025f BD F2                   		movw	r10, ax
 356 0261 FA F2                   		movw	hl, r10
 357 0263 8B                      		mov	a, [hl]
 358 0264 98 09                   		mov	[sp+9], a
 359 0266 5C FB                   		and	a, #-5
 360 0268 98 08                   		mov	[sp+8], a
 361 026a AD F0                   		movw	ax, r8
 362 026c BD F4                   		movw	r12, ax
 363 026e DA F4                   		movw	bc, r12
 364 0270 88 08                   		mov	a, [sp+8]
 365 0272 48 00 00                		mov	[bc], a
  89:../src/r_cg_timer.c ****     /* Set INTTM00 high priority */
  90:../src/r_cg_timer.c ****     TMPR100 = 0U;
 366                             		.loc 1 90 0
 367 0275 C9 F0 EE FF             		movw	r8, #-18
 368 0279 AD F0                   		movw	ax, r8
 369 027b BD F2                   		movw	r10, ax
 370 027d FA F2                   		movw	hl, r10
 371 027f 8B                      		mov	a, [hl]
 372 0280 98 07                   		mov	[sp+7], a
 373 0282 5C EF                   		and	a, #-17
 374 0284 98 06                   		mov	[sp+6], a
 375 0286 AD F0                   		movw	ax, r8
 376 0288 BD F4                   		movw	r12, ax
 377 028a DA F4                   		movw	bc, r12
 378 028c 88 06                   		mov	a, [sp+6]
 379 028e 48 00 00                		mov	[bc], a
  91:../src/r_cg_timer.c ****     TMPR000 = 0U;
 380                             		.loc 1 91 0
 381 0291 C9 F0 EA FF             		movw	r8, #-22
 382 0295 AD F0                   		movw	ax, r8
 383 0297 BD F2                   		movw	r10, ax
 384 0299 FA F2                   		movw	hl, r10
 385 029b 8B                      		mov	a, [hl]
 386 029c 98 05                   		mov	[sp+5], a
 387 029e 5C EF                   		and	a, #-17
 388 02a0 98 04                   		mov	[sp+4], a
 389 02a2 AD F0                   		movw	ax, r8
 390 02a4 BD F4                   		movw	r12, ax
 391 02a6 DA F4                   		movw	bc, r12
 392 02a8 88 04                   		mov	a, [sp+4]
 393 02aa 48 00 00                		mov	[bc], a
  92:../src/r_cg_timer.c ****     /* Set INTTM01 low priority */
  93:../src/r_cg_timer.c ****     TMPR101 = 1U;
 394                             		.loc 1 93 0
 395 02ad C9 F0 EE FF             		movw	r8, #-18
 396 02b1 AD F0                   		movw	ax, r8
 397 02b3 BD F2                   		movw	r10, ax
 398 02b5 FA F2                   		movw	hl, r10
 399 02b7 8B                      		mov	a, [hl]
 400 02b8 98 03                   		mov	[sp+3], a
 401 02ba 6C 20                   		or	a, #32
 402 02bc 98 02                   		mov	[sp+2], a
 403 02be AD F0                   		movw	ax, r8
 404 02c0 BD F4                   		movw	r12, ax
 405 02c2 DA F4                   		movw	bc, r12
 406 02c4 88 02                   		mov	a, [sp+2]
 407 02c6 48 00 00                		mov	[bc], a
  94:../src/r_cg_timer.c ****     TMPR001 = 1U;
 408                             		.loc 1 94 0
 409 02c9 C9 F0 EA FF             		movw	r8, #-22
 410 02cd AD F0                   		movw	ax, r8
 411 02cf BD F2                   		movw	r10, ax
 412 02d1 FA F2                   		movw	hl, r10
 413 02d3 8B                      		mov	a, [hl]
 414 02d4 98 01                   		mov	[sp+1], a
 415 02d6 6C 20                   		or	a, #32
 416 02d8 98 00                   		mov	[sp], a
 417 02da AD F0                   		movw	ax, r8
 418 02dc BD F4                   		movw	r12, ax
 419 02de DA F4                   		movw	bc, r12
 420 02e0 88 00                   		mov	a, [sp]
 421 02e2 48 00 00                		mov	[bc], a
  95:../src/r_cg_timer.c ****     /* Channel 0 used as interval timer */
  96:../src/r_cg_timer.c ****     TMR00 = _0000_TAU_CLOCK_SELECT_CKM0 | _0000_TAU_CLOCK_MODE_CKS | _0000_TAU_COMBINATION_SLAVE |
 422                             		.loc 1 96 0
 423 02e5 C9 F0 90 01             		movw	r8, #400
 424 02e9 AD F0                   		movw	ax, r8
 425 02eb BD F2                   		movw	r10, ax
 426 02ed DA F2                   		movw	bc, r10
 427 02ef F6                      		clrw	ax
 428 02f0 78 00 00                		movw	[bc], ax
  97:../src/r_cg_timer.c ****             _0000_TAU_TRIGGER_SOFTWARE | _0000_TAU_MODE_INTERVAL_TIMER | _0000_TAU_START_INT_UNUSED
  98:../src/r_cg_timer.c ****     TDR00 = _F9FF_TAU_TDR00_VALUE;
 429                             		.loc 1 98 0
 430 02f3 C9 F0 18 FF             		movw	r8, #-232
 431 02f7 AD F0                   		movw	ax, r8
 432 02f9 BD F4                   		movw	r12, ax
 433 02fb DA F4                   		movw	bc, r12
 434 02fd 30 FF F9                		movw	ax, #-1537
 435 0300 78 00 00                		movw	[bc], ax
  99:../src/r_cg_timer.c ****     TO0 &= ~_0001_TAU_CH0_OUTPUT_VALUE_1;
 436                             		.loc 1 99 0
 437 0303 30 B8 01                		movw	ax, #440
 438 0306 B8 32                   		movw	[sp+50], ax
 439 0308 C9 F0 B8 01             		movw	r8, #440
 440 030c AD F0                   		movw	ax, r8
 441 030e BD F2                   		movw	r10, ax
 442 0310 FA F2                   		movw	hl, r10
 443 0312 AB                      		movw	ax, [hl]
 444 0313 BD F0                   		movw	r8, ax
 445 0315 8D F0                   		mov	a, r8
 446 0317 5C FE                   		and	a, #-2
 447 0319 9D EC                   		mov	r20, a
 448 031b 8D F1                   		mov	a, r9
 449 031d 5C FF                   		and	a, #-1
 450 031f 9D ED                   		mov	r21, a
 451 0321 A8 32                   		movw	ax, [sp+50]
 452 0323 BD F4                   		movw	r12, ax
 453 0325 DA F4                   		movw	bc, r12
 454 0327 AD EC                   		movw	ax, r20
 455 0329 78 00 00                		movw	[bc], ax
 100:../src/r_cg_timer.c ****     TOE0 &= ~_0001_TAU_CH0_OUTPUT_ENABLE;
 456                             		.loc 1 100 0
 457 032c C9 EC BA 01             		movw	r20, #442
 458 0330 C9 F0 BA 01             		movw	r8, #442
 459 0334 AD F0                   		movw	ax, r8
 460 0336 BD F2                   		movw	r10, ax
 461 0338 FA F2                   		movw	hl, r10
 462 033a AB                      		movw	ax, [hl]
 463 033b BD F0                   		movw	r8, ax
 464 033d 8D F0                   		mov	a, r8
 465 033f 5C FE                   		and	a, #-2
 466 0341 9D EA                   		mov	r18, a
 467 0343 8D F1                   		mov	a, r9
 468 0345 5C FF                   		and	a, #-1
 469 0347 9D EB                   		mov	r19, a
 470 0349 DA EC                   		movw	bc, r20
 471 034b AD EA                   		movw	ax, r18
 472 034d 78 00 00                		movw	[bc], ax
 101:../src/r_cg_timer.c ****     /* Channel 1 used as external event counter */
 102:../src/r_cg_timer.c ****     TMR01 = _8000_TAU_CLOCK_SELECT_CKM1 | _1000_TAU_CLOCK_MODE_TIMN | _0000_TAU_16BITS_MODE |
 473                             		.loc 1 102 0
 474 0350 C9 F0 92 01             		movw	r8, #402
 475 0354 AD F0                   		movw	ax, r8
 476 0356 BD F4                   		movw	r12, ax
 477 0358 DA F4                   		movw	bc, r12
 478 035a 30 06 90                		movw	ax, #-28666
 479 035d 78 00 00                		movw	[bc], ax
 103:../src/r_cg_timer.c ****             _0000_TAU_TRIGGER_SOFTWARE | _0000_TAU_TIMN_EDGE_FALLING | _0006_TAU_MODE_EVENT_COUNT;
 104:../src/r_cg_timer.c ****     TDR01 = _0FFF_TAU_TDR01_VALUE;
 480                             		.loc 1 104 0
 481 0360 C9 F0 1A FF             		movw	r8, #-230
 482 0364 AD F0                   		movw	ax, r8
 483 0366 BD F2                   		movw	r10, ax
 484 0368 DA F2                   		movw	bc, r10
 485 036a 30 FF 0F                		movw	ax, #4095
 486 036d 78 00 00                		movw	[bc], ax
 105:../src/r_cg_timer.c ****     TOM0 &= ~_0002_TAU_CH1_OUTPUT_COMBIN;
 487                             		.loc 1 105 0
 488 0370 C9 EA BE 01             		movw	r18, #446
 489 0374 C9 F0 BE 01             		movw	r8, #446
 490 0378 AD F0                   		movw	ax, r8
 491 037a BD F4                   		movw	r12, ax
 492 037c FA F4                   		movw	hl, r12
 493 037e AB                      		movw	ax, [hl]
 494 037f BD F0                   		movw	r8, ax
 495 0381 8D F0                   		mov	a, r8
 496 0383 5C FD                   		and	a, #-3
 497 0385 9D E8                   		mov	r16, a
 498 0387 8D F1                   		mov	a, r9
 499 0389 5C FF                   		and	a, #-1
 500 038b 9D E9                   		mov	r17, a
 501 038d DA EA                   		movw	bc, r18
 502 038f AD E8                   		movw	ax, r16
 503 0391 78 00 00                		movw	[bc], ax
 106:../src/r_cg_timer.c ****     TOL0 &= ~_0002_TAU_CH1_OUTPUT_LEVEL_L;
 504                             		.loc 1 106 0
 505 0394 C9 E8 BC 01             		movw	r16, #444
 506 0398 C9 F0 BC 01             		movw	r8, #444
 507 039c AD F0                   		movw	ax, r8
 508 039e BD F2                   		movw	r10, ax
 509 03a0 FA F2                   		movw	hl, r10
 510 03a2 AB                      		movw	ax, [hl]
 511 03a3 BD F0                   		movw	r8, ax
 512 03a5 8D F0                   		mov	a, r8
 513 03a7 5C FD                   		and	a, #-3
 514 03a9 9D F6                   		mov	r14, a
 515 03ab 8D F1                   		mov	a, r9
 516 03ad 5C FF                   		and	a, #-1
 517 03af 9D F7                   		mov	r15, a
 518 03b1 DA E8                   		movw	bc, r16
 519 03b3 AD F6                   		movw	ax, r14
 520 03b5 78 00 00                		movw	[bc], ax
 107:../src/r_cg_timer.c ****     TO0 &= ~_0002_TAU_CH1_OUTPUT_VALUE_1;
 521                             		.loc 1 107 0
 522 03b8 C9 F6 B8 01             		movw	r14, #440
 523 03bc C9 F0 B8 01             		movw	r8, #440
 524 03c0 AD F0                   		movw	ax, r8
 525 03c2 BD F4                   		movw	r12, ax
 526 03c4 FA F4                   		movw	hl, r12
 527 03c6 AB                      		movw	ax, [hl]
 528 03c7 BD F0                   		movw	r8, ax
 529 03c9 8D F0                   		mov	a, r8
 530 03cb 5C FD                   		and	a, #-3
 531 03cd 9D F4                   		mov	r12, a
 532 03cf 8D F1                   		mov	a, r9
 533 03d1 5C FF                   		and	a, #-1
 534 03d3 9D F5                   		mov	r13, a
 535 03d5 AD F6                   		movw	ax, r14
 536 03d7 BD F0                   		movw	r8, ax
 537 03d9 DA F0                   		movw	bc, r8
 538 03db AD F4                   		movw	ax, r12
 539 03dd 78 00 00                		movw	[bc], ax
 108:../src/r_cg_timer.c ****     TOE0 &= ~_0002_TAU_CH1_OUTPUT_ENABLE;
 540                             		.loc 1 108 0
 541 03e0 C9 F4 BA 01             		movw	r12, #442
 542 03e4 C9 F0 BA 01             		movw	r8, #442
 543 03e8 AD F0                   		movw	ax, r8
 544 03ea BD F2                   		movw	r10, ax
 545 03ec FA F2                   		movw	hl, r10
 546 03ee AB                      		movw	ax, [hl]
 547 03ef BD F0                   		movw	r8, ax
 548 03f1 8D F0                   		mov	a, r8
 549 03f3 5C FD                   		and	a, #-3
 550 03f5 9D F2                   		mov	r10, a
 551 03f7 8D F1                   		mov	a, r9
 552 03f9 5C FF                   		and	a, #-1
 553 03fb 9D F3                   		mov	r11, a
 554 03fd AD F4                   		movw	ax, r12
 555 03ff BD F0                   		movw	r8, ax
 556 0401 DA F0                   		movw	bc, r8
 557 0403 AD F2                   		movw	ax, r10
 558 0405 78 00 00                		movw	[bc], ax
 109:../src/r_cg_timer.c ****     NFEN1 &= (uint8_t)~_02_TAU_CH1_NOISE_ON;    /* disable using noise filter of TI01 pin input sig
 559                             		.loc 1 109 0
 560 0408 C9 F2 71 00             		movw	r10, #113
 561 040c C9 F0 71 00             		movw	r8, #113
 562 0410 AD F0                   		movw	ax, r8
 563 0412 BD F4                   		movw	r12, ax
 564 0414 FA F4                   		movw	hl, r12
 565 0416 8B                      		mov	a, [hl]
 566 0417 9D F0                   		mov	r8, a
 567 0419 5A F0 FD                		and	r8, #-3
 568 041c AD F2                   		movw	ax, r10
 569 041e BD F4                   		movw	r12, ax
 570 0420 DA F4                   		movw	bc, r12
 571 0422 8D F0                   		mov	a, r8
 572 0424 48 00 00                		mov	[bc], a
 110:../src/r_cg_timer.c ****     /* Set TI01 pin */
 111:../src/r_cg_timer.c ****     PM1 |= 0x40U;
 573                             		.loc 1 111 0
 574 0427 C9 F2 21 FF             		movw	r10, #-223
 575 042b C9 F0 21 FF             		movw	r8, #-223
 576 042f AD F0                   		movw	ax, r8
 577 0431 BD F4                   		movw	r12, ax
 578 0433 FA F4                   		movw	hl, r12
 579 0435 8B                      		mov	a, [hl]
 580 0436 9D F0                   		mov	r8, a
 581 0438 6A F0 40                		or	r8, #64
 582 043b AD F2                   		movw	ax, r10
 583 043d BD F4                   		movw	r12, ax
 584 043f DA F4                   		movw	bc, r12
 585 0441 8D F0                   		mov	a, r8
 586 0443 48 00 00                		mov	[bc], a
 112:../src/r_cg_timer.c **** }
 587                             		.loc 1 112 0
 588 0446 10 34                   		addw	sp, #52
 589 0448 61 EF                   		sel	rb2
 590 044a C4                      		pop	de ; r20
 591 044b C2                      		pop	bc ; r18
 592 044c C0                      		pop	ax ; r16
 593 044d 61 CF                   		sel	rb0
 594 044f D7                      		ret
 595                             	.LFE0:
 597                             		.global	_R_TAU0_Channel0_Start
 599                             	_R_TAU0_Channel0_Start:
 600                             	.LFB1:
 113:../src/r_cg_timer.c **** 
 114:../src/r_cg_timer.c **** /**************************************************************************************************
 115:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel0_Start
 116:../src/r_cg_timer.c **** * Description  : This function starts TAU0 channel 0 counter.
 117:../src/r_cg_timer.c **** * Arguments    : None
 118:../src/r_cg_timer.c **** * Return Value : None
 119:../src/r_cg_timer.c **** ***************************************************************************************************
 120:../src/r_cg_timer.c **** void R_TAU0_Channel0_Start(void)
 121:../src/r_cg_timer.c **** {
 601                             		.loc 1 121 0
 122:../src/r_cg_timer.c ****     TMIF00 = 0U;    /* clear INTTM00 interrupt flag */
 602                             		.loc 1 122 0
 603 0450 C9 F2 E2 FF             		movw	r10, #-30
 604 0454 AD F2                   		movw	ax, r10
 605 0456 BD F0                   		movw	r8, ax
 606 0458 FA F0                   		movw	hl, r8
 607 045a 8B                      		mov	a, [hl]
 608 045b 9D F4                   		mov	r12, a
 609 045d 5A F4 EF                		and	r12, #-17
 610 0460 AD F2                   		movw	ax, r10
 611 0462 DA F0                   		movw	bc, r8
 612 0464 8D F4                   		mov	a, r12
 613 0466 48 00 00                		mov	[bc], a
 123:../src/r_cg_timer.c ****     TMMK00 = 0U;    /* enable INTTM00 interrupt */
 614                             		.loc 1 123 0
 615 0469 C9 F2 E6 FF             		movw	r10, #-26
 616 046d AD F2                   		movw	ax, r10
 617 046f BD F0                   		movw	r8, ax
 618 0471 FA F0                   		movw	hl, r8
 619 0473 8B                      		mov	a, [hl]
 620 0474 9D F4                   		mov	r12, a
 621 0476 5A F4 EF                		and	r12, #-17
 622 0479 AD F2                   		movw	ax, r10
 623 047b DA F0                   		movw	bc, r8
 624 047d 8D F4                   		mov	a, r12
 625 047f 48 00 00                		mov	[bc], a
 124:../src/r_cg_timer.c ****     TS0 |= _0001_TAU_CH0_START_TRG_ON;
 626                             		.loc 1 124 0
 627 0482 C9 F4 B2 01             		movw	r12, #434
 628 0486 C9 F2 B2 01             		movw	r10, #434
 629 048a AD F2                   		movw	ax, r10
 630 048c BD F0                   		movw	r8, ax
 631 048e FA F0                   		movw	hl, r8
 632 0490 AB                      		movw	ax, [hl]
 633 0491 BD F2                   		movw	r10, ax
 634 0493 8D F2                   		mov	a, r10
 635 0495 6C 01                   		or	a, #1
 636 0497 9D F0                   		mov	r8, a
 637 0499 8D F3                   		mov	a, r11
 638 049b 6C 00                   		or	a, #0
 639 049d 9D F1                   		mov	r9, a
 640 049f AD F4                   		movw	ax, r12
 641 04a1 BD F2                   		movw	r10, ax
 642 04a3 DA F2                   		movw	bc, r10
 643 04a5 AD F0                   		movw	ax, r8
 644 04a7 78 00 00                		movw	[bc], ax
 125:../src/r_cg_timer.c **** }
 645                             		.loc 1 125 0
 646 04aa D7                      		ret
 647                             	.LFE1:
 649                             		.global	_R_TAU0_Channel0_Stop
 651                             	_R_TAU0_Channel0_Stop:
 652                             	.LFB2:
 126:../src/r_cg_timer.c **** 
 127:../src/r_cg_timer.c **** /**************************************************************************************************
 128:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel0_Stop
 129:../src/r_cg_timer.c **** * Description  : This function stops TAU0 channel 0 counter.
 130:../src/r_cg_timer.c **** * Arguments    : None
 131:../src/r_cg_timer.c **** * Return Value : None
 132:../src/r_cg_timer.c **** ***************************************************************************************************
 133:../src/r_cg_timer.c **** void R_TAU0_Channel0_Stop(void)
 134:../src/r_cg_timer.c **** {
 653                             		.loc 1 134 0
 135:../src/r_cg_timer.c ****     TT0 |= _0001_TAU_CH0_STOP_TRG_ON;
 654                             		.loc 1 135 0
 655 04ab C9 F4 B4 01             		movw	r12, #436
 656 04af C9 F2 B4 01             		movw	r10, #436
 657 04b3 AD F2                   		movw	ax, r10
 658 04b5 BD F0                   		movw	r8, ax
 659 04b7 FA F0                   		movw	hl, r8
 660 04b9 AB                      		movw	ax, [hl]
 661 04ba BD F2                   		movw	r10, ax
 662 04bc 8D F2                   		mov	a, r10
 663 04be 6C 01                   		or	a, #1
 664 04c0 9D F0                   		mov	r8, a
 665 04c2 8D F3                   		mov	a, r11
 666 04c4 6C 00                   		or	a, #0
 667 04c6 9D F1                   		mov	r9, a
 668 04c8 AD F4                   		movw	ax, r12
 669 04ca BD F2                   		movw	r10, ax
 670 04cc DA F2                   		movw	bc, r10
 671 04ce AD F0                   		movw	ax, r8
 672 04d0 78 00 00                		movw	[bc], ax
 136:../src/r_cg_timer.c ****     /* Mask channel 0 interrupt */
 137:../src/r_cg_timer.c ****     TMMK00 = 1U;    /* disable INTTM00 interrupt */
 673                             		.loc 1 137 0
 674 04d3 C9 F0 E6 FF             		movw	r8, #-26
 675 04d7 AD F0                   		movw	ax, r8
 676 04d9 BD F4                   		movw	r12, ax
 677 04db FA F4                   		movw	hl, r12
 678 04dd 8B                      		mov	a, [hl]
 679 04de 9D F2                   		mov	r10, a
 680 04e0 6A F2 10                		or	r10, #16
 681 04e3 AD F0                   		movw	ax, r8
 682 04e5 DA F4                   		movw	bc, r12
 683 04e7 8D F2                   		mov	a, r10
 684 04e9 48 00 00                		mov	[bc], a
 138:../src/r_cg_timer.c ****     TMIF00 = 0U;    /* clear INTTM00 interrupt flag */
 685                             		.loc 1 138 0
 686 04ec C9 F0 E2 FF             		movw	r8, #-30
 687 04f0 AD F0                   		movw	ax, r8
 688 04f2 BD F4                   		movw	r12, ax
 689 04f4 FA F4                   		movw	hl, r12
 690 04f6 8B                      		mov	a, [hl]
 691 04f7 9D F2                   		mov	r10, a
 692 04f9 5A F2 EF                		and	r10, #-17
 693 04fc AD F0                   		movw	ax, r8
 694 04fe DA F4                   		movw	bc, r12
 695 0500 8D F2                   		mov	a, r10
 696 0502 48 00 00                		mov	[bc], a
 139:../src/r_cg_timer.c **** }
 697                             		.loc 1 139 0
 698 0505 D7                      		ret
 699                             	.LFE2:
 701                             		.global	_R_TAU0_Channel1_Start
 703                             	_R_TAU0_Channel1_Start:
 704                             	.LFB3:
 140:../src/r_cg_timer.c **** 
 141:../src/r_cg_timer.c **** /**************************************************************************************************
 142:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel1_Start
 143:../src/r_cg_timer.c **** * Description  : This function starts TAU0 channel 1 counter.
 144:../src/r_cg_timer.c **** * Arguments    : None
 145:../src/r_cg_timer.c **** * Return Value : None
 146:../src/r_cg_timer.c **** ***************************************************************************************************
 147:../src/r_cg_timer.c **** void R_TAU0_Channel1_Start(void)
 148:../src/r_cg_timer.c **** {
 705                             		.loc 1 148 0
 149:../src/r_cg_timer.c ****     TMIF01 = 0U;    /* clear INTTM01 interrupt flag */
 706                             		.loc 1 149 0
 707 0506 C9 F2 E2 FF             		movw	r10, #-30
 708 050a AD F2                   		movw	ax, r10
 709 050c BD F0                   		movw	r8, ax
 710 050e FA F0                   		movw	hl, r8
 711 0510 8B                      		mov	a, [hl]
 712 0511 9D F4                   		mov	r12, a
 713 0513 5A F4 DF                		and	r12, #-33
 714 0516 AD F2                   		movw	ax, r10
 715 0518 DA F0                   		movw	bc, r8
 716 051a 8D F4                   		mov	a, r12
 717 051c 48 00 00                		mov	[bc], a
 150:../src/r_cg_timer.c ****     TMMK01 = 0U;    /* enable INTTM01 interrupt */
 718                             		.loc 1 150 0
 719 051f C9 F2 E6 FF             		movw	r10, #-26
 720 0523 AD F2                   		movw	ax, r10
 721 0525 BD F0                   		movw	r8, ax
 722 0527 FA F0                   		movw	hl, r8
 723 0529 8B                      		mov	a, [hl]
 724 052a 9D F4                   		mov	r12, a
 725 052c 5A F4 DF                		and	r12, #-33
 726 052f AD F2                   		movw	ax, r10
 727 0531 DA F0                   		movw	bc, r8
 728 0533 8D F4                   		mov	a, r12
 729 0535 48 00 00                		mov	[bc], a
 151:../src/r_cg_timer.c ****     TS0 |= _0002_TAU_CH1_START_TRG_ON;
 730                             		.loc 1 151 0
 731 0538 C9 F4 B2 01             		movw	r12, #434
 732 053c C9 F2 B2 01             		movw	r10, #434
 733 0540 AD F2                   		movw	ax, r10
 734 0542 BD F0                   		movw	r8, ax
 735 0544 FA F0                   		movw	hl, r8
 736 0546 AB                      		movw	ax, [hl]
 737 0547 BD F2                   		movw	r10, ax
 738 0549 8D F2                   		mov	a, r10
 739 054b 6C 02                   		or	a, #2
 740 054d 9D F0                   		mov	r8, a
 741 054f 8D F3                   		mov	a, r11
 742 0551 6C 00                   		or	a, #0
 743 0553 9D F1                   		mov	r9, a
 744 0555 AD F4                   		movw	ax, r12
 745 0557 BD F2                   		movw	r10, ax
 746 0559 DA F2                   		movw	bc, r10
 747 055b AD F0                   		movw	ax, r8
 748 055d 78 00 00                		movw	[bc], ax
 152:../src/r_cg_timer.c **** }
 749                             		.loc 1 152 0
 750 0560 D7                      		ret
 751                             	.LFE3:
 753                             		.global	_R_TAU0_Channel1_Stop
 755                             	_R_TAU0_Channel1_Stop:
 756                             	.LFB4:
 153:../src/r_cg_timer.c **** 
 154:../src/r_cg_timer.c **** /**************************************************************************************************
 155:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel1_Stop
 156:../src/r_cg_timer.c **** * Description  : This function stops TAU0 channel 1 counter.
 157:../src/r_cg_timer.c **** * Arguments    : None
 158:../src/r_cg_timer.c **** * Return Value : None
 159:../src/r_cg_timer.c **** ***************************************************************************************************
 160:../src/r_cg_timer.c **** void R_TAU0_Channel1_Stop(void)
 161:../src/r_cg_timer.c **** {
 757                             		.loc 1 161 0
 162:../src/r_cg_timer.c ****     TT0 |= _0002_TAU_CH1_STOP_TRG_ON;
 758                             		.loc 1 162 0
 759 0561 C9 F4 B4 01             		movw	r12, #436
 760 0565 C9 F2 B4 01             		movw	r10, #436
 761 0569 AD F2                   		movw	ax, r10
 762 056b BD F0                   		movw	r8, ax
 763 056d FA F0                   		movw	hl, r8
 764 056f AB                      		movw	ax, [hl]
 765 0570 BD F2                   		movw	r10, ax
 766 0572 8D F2                   		mov	a, r10
 767 0574 6C 02                   		or	a, #2
 768 0576 9D F0                   		mov	r8, a
 769 0578 8D F3                   		mov	a, r11
 770 057a 6C 00                   		or	a, #0
 771 057c 9D F1                   		mov	r9, a
 772 057e AD F4                   		movw	ax, r12
 773 0580 BD F2                   		movw	r10, ax
 774 0582 DA F2                   		movw	bc, r10
 775 0584 AD F0                   		movw	ax, r8
 776 0586 78 00 00                		movw	[bc], ax
 163:../src/r_cg_timer.c ****     /* Mask channel 1 interrupt */
 164:../src/r_cg_timer.c ****     TMMK01 = 1U;    /* disable INTTM01 interrupt */
 777                             		.loc 1 164 0
 778 0589 C9 F0 E6 FF             		movw	r8, #-26
 779 058d AD F0                   		movw	ax, r8
 780 058f BD F4                   		movw	r12, ax
 781 0591 FA F4                   		movw	hl, r12
 782 0593 8B                      		mov	a, [hl]
 783 0594 9D F2                   		mov	r10, a
 784 0596 6A F2 20                		or	r10, #32
 785 0599 AD F0                   		movw	ax, r8
 786 059b DA F4                   		movw	bc, r12
 787 059d 8D F2                   		mov	a, r10
 788 059f 48 00 00                		mov	[bc], a
 165:../src/r_cg_timer.c ****     TMIF01 = 0U;    /* clear INTTM01 interrupt flag */
 789                             		.loc 1 165 0
 790 05a2 C9 F0 E2 FF             		movw	r8, #-30
 791 05a6 AD F0                   		movw	ax, r8
 792 05a8 BD F4                   		movw	r12, ax
 793 05aa FA F4                   		movw	hl, r12
 794 05ac 8B                      		mov	a, [hl]
 795 05ad 9D F2                   		mov	r10, a
 796 05af 5A F2 DF                		and	r10, #-33
 797 05b2 AD F0                   		movw	ax, r8
 798 05b4 DA F4                   		movw	bc, r12
 799 05b6 8D F2                   		mov	a, r10
 800 05b8 48 00 00                		mov	[bc], a
 166:../src/r_cg_timer.c **** }
 801                             		.loc 1 166 0
 802 05bb D7                      		ret
 803                             	.LFE4:
 879                             	.Letext0:
 880                             		.file 2 "../src/iodefine.h"
 881                             		.file 3 "../src/iodefine_ext.h"
 882                             		.file 4 "../src/r_cg_macrodriver.h"
 883                             		.file 5 "../src/globals.h"
