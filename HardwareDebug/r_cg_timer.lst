   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.comm	_record,50,1
  28                             		.comm	_mem,50,1
  29                             		.comm	_display_string,50,1
  30                             		.comm	_timerFlag,2,2
  31                             		.comm	_count,2,2
  32                             		.comm	_interval_timer_count,2,2
  33                             		.global	_R_TAU0_Create
  35                             	_R_TAU0_Create:
  36                             	.LFB0:
  37                             		.file 1 "../src/r_cg_timer.c"
   1:../src/r_cg_timer.c **** /**************************************************************************************************
   2:../src/r_cg_timer.c **** * DISCLAIMER
   3:../src/r_cg_timer.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/r_cg_timer.c **** * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is pr
   5:../src/r_cg_timer.c **** * applicable laws, including copyright laws. 
   6:../src/r_cg_timer.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIESREGARDING THIS SOFTWARE, WHETHER
   7:../src/r_cg_timer.c **** * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULA
   8:../src/r_cg_timer.c **** * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED N
   9:../src/r_cg_timer.c **** * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  10:../src/r_cg_timer.c **** * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, E
  11:../src/r_cg_timer.c **** * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/r_cg_timer.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/r_cg_timer.c **** * of this software. By using this software, you agree to the additional terms and conditions found 
  14:../src/r_cg_timer.c **** * following link:
  15:../src/r_cg_timer.c **** * http://www.renesas.com/disclaimer
  16:../src/r_cg_timer.c **** *
  17:../src/r_cg_timer.c **** * Copyright (C) 2011, 2015 Renesas Electronics Corporation. All rights reserved.
  18:../src/r_cg_timer.c **** ***************************************************************************************************
  19:../src/r_cg_timer.c **** 
  20:../src/r_cg_timer.c **** /**************************************************************************************************
  21:../src/r_cg_timer.c **** * File Name    : r_cg_timer.c
  22:../src/r_cg_timer.c **** * Version      : CodeGenerator for RL78/G13 V2.03.02.01 [15 May 2015]
  23:../src/r_cg_timer.c **** * Device(s)    : R5F100LE
  24:../src/r_cg_timer.c **** * Tool-Chain   : GCCRL78
  25:../src/r_cg_timer.c **** * Description  : This file implements device driver for TAU module.
  26:../src/r_cg_timer.c **** * Creation Date: 2017/04/12
  27:../src/r_cg_timer.c **** ***************************************************************************************************
  28:../src/r_cg_timer.c **** 
  29:../src/r_cg_timer.c **** /**************************************************************************************************
  30:../src/r_cg_timer.c **** Includes
  31:../src/r_cg_timer.c **** ***************************************************************************************************
  32:../src/r_cg_timer.c **** #include "r_cg_macrodriver.h"
  33:../src/r_cg_timer.c **** #include "r_cg_timer.h"
  34:../src/r_cg_timer.c **** /* Start user code for include. Do not edit comment generated here */
  35:../src/r_cg_timer.c **** /* End user code. Do not edit comment generated here */
  36:../src/r_cg_timer.c **** #include "r_cg_userdefine.h"
  37:../src/r_cg_timer.c **** 
  38:../src/r_cg_timer.c **** /**************************************************************************************************
  39:../src/r_cg_timer.c **** Global variables and functions
  40:../src/r_cg_timer.c **** ***************************************************************************************************
  41:../src/r_cg_timer.c **** /* Start user code for global. Do not edit comment generated here */
  42:../src/r_cg_timer.c **** /* End user code. Do not edit comment generated here */
  43:../src/r_cg_timer.c **** 
  44:../src/r_cg_timer.c **** /**************************************************************************************************
  45:../src/r_cg_timer.c **** * Function Name: R_TAU0_Create
  46:../src/r_cg_timer.c **** * Description  : This function initializes the TAU0 module.
  47:../src/r_cg_timer.c **** * Arguments    : None
  48:../src/r_cg_timer.c **** * Return Value : None
  49:../src/r_cg_timer.c **** ***************************************************************************************************
  50:../src/r_cg_timer.c **** void R_TAU0_Create(void)
  51:../src/r_cg_timer.c **** {
  38                             		.loc 1 51 0
  39                             		; start of function
  40                             		; push 6: r16 r18 r20
  41                             		; locals: 52 bytes
  42 0000 61 EF                   		sel	rb2
  43 0002 C1                      		push	ax ; r16
  44                             	.LCFI0:
  45 0003 C3                      		push	bc ; r18
  46                             	.LCFI1:
  47 0004 C5                      		push	de ; r20
  48                             	.LCFI2:
  49 0005 61 CF                   		sel	rb0
  50 0007 20 34                   		subw	sp, #52
  51                             	.LCFI3:
  52:../src/r_cg_timer.c ****     TAU0EN = 1U;    /* supplies input clock */
  52                             		.loc 1 52 0
  53 0009 C9 F0 F0 00             		movw	r8, #240
  54 000d AD F0                   		movw	ax, r8
  55 000f BD F2                   		movw	r10, ax
  56 0011 FA F2                   		movw	hl, r10
  57 0013 8B                      		mov	a, [hl]
  58 0014 98 31                   		mov	[sp+49], a
  59 0016 6C 01                   		or	a, #1
  60 0018 98 30                   		mov	[sp+48], a
  61 001a AD F0                   		movw	ax, r8
  62 001c DA F2                   		movw	bc, r10
  63 001e 88 30                   		mov	a, [sp+48]
  64 0020 48 00 00                		mov	[bc], a
  53:../src/r_cg_timer.c ****     TPS0 = _0002_TAU_CKM0_FCLK_2 | _0040_TAU_CKM1_FCLK_4 | _0000_TAU_CKM2_FCLK_1 | _0000_TAU_CKM3_F
  65                             		.loc 1 53 0
  66 0023 C9 F0 B6 01             		movw	r8, #438
  67 0027 AD F0                   		movw	ax, r8
  68 0029 BD F2                   		movw	r10, ax
  69 002b DA F2                   		movw	bc, r10
  70 002d 30 42 00                		movw	ax, #66
  71 0030 78 00 00                		movw	[bc], ax
  54:../src/r_cg_timer.c ****     /* Stop all channels */
  55:../src/r_cg_timer.c ****     TT0 = _0001_TAU_CH0_STOP_TRG_ON | _0002_TAU_CH1_STOP_TRG_ON | _0004_TAU_CH2_STOP_TRG_ON |
  72                             		.loc 1 55 0
  73 0033 C9 F0 B4 01             		movw	r8, #436
  74 0037 AD F0                   		movw	ax, r8
  75 0039 BD F2                   		movw	r10, ax
  76 003b DA F2                   		movw	bc, r10
  77 003d 30 FF 0A                		movw	ax, #2815
  78 0040 78 00 00                		movw	[bc], ax
  56:../src/r_cg_timer.c ****           _0008_TAU_CH3_STOP_TRG_ON | _0010_TAU_CH4_STOP_TRG_ON | _0020_TAU_CH5_STOP_TRG_ON |
  57:../src/r_cg_timer.c ****           _0040_TAU_CH6_STOP_TRG_ON | _0080_TAU_CH7_STOP_TRG_ON | _0200_TAU_CH1_H8_STOP_TRG_ON |
  58:../src/r_cg_timer.c ****           _0800_TAU_CH3_H8_STOP_TRG_ON;
  59:../src/r_cg_timer.c ****     /* Mask channel 0 interrupt */
  60:../src/r_cg_timer.c ****     TMMK00 = 1U;    /* disable INTTM00 interrupt */
  79                             		.loc 1 60 0
  80 0043 C9 F0 E6 FF             		movw	r8, #-26
  81 0047 AD F0                   		movw	ax, r8
  82 0049 BD F2                   		movw	r10, ax
  83 004b FA F2                   		movw	hl, r10
  84 004d 8B                      		mov	a, [hl]
  85 004e 98 2F                   		mov	[sp+47], a
  86 0050 6C 10                   		or	a, #16
  87 0052 98 2E                   		mov	[sp+46], a
  88 0054 AD F0                   		movw	ax, r8
  89 0056 DA F2                   		movw	bc, r10
  90 0058 88 2E                   		mov	a, [sp+46]
  91 005a 48 00 00                		mov	[bc], a
  61:../src/r_cg_timer.c ****     TMIF00 = 0U;    /* clear INTTM00 interrupt flag */
  92                             		.loc 1 61 0
  93 005d C9 F0 E2 FF             		movw	r8, #-30
  94 0061 AD F0                   		movw	ax, r8
  95 0063 BD F2                   		movw	r10, ax
  96 0065 FA F2                   		movw	hl, r10
  97 0067 8B                      		mov	a, [hl]
  98 0068 98 2D                   		mov	[sp+45], a
  99 006a 5C EF                   		and	a, #-17
 100 006c 98 2C                   		mov	[sp+44], a
 101 006e AD F0                   		movw	ax, r8
 102 0070 DA F2                   		movw	bc, r10
 103 0072 88 2C                   		mov	a, [sp+44]
 104 0074 48 00 00                		mov	[bc], a
  62:../src/r_cg_timer.c ****     /* Mask channel 1 interrupt */
  63:../src/r_cg_timer.c ****     TMMK01 = 1U;    /* disable INTTM01 interrupt */
 105                             		.loc 1 63 0
 106 0077 C9 F0 E6 FF             		movw	r8, #-26
 107 007b AD F0                   		movw	ax, r8
 108 007d BD F2                   		movw	r10, ax
 109 007f FA F2                   		movw	hl, r10
 110 0081 8B                      		mov	a, [hl]
 111 0082 98 2B                   		mov	[sp+43], a
 112 0084 6C 20                   		or	a, #32
 113 0086 98 2A                   		mov	[sp+42], a
 114 0088 AD F0                   		movw	ax, r8
 115 008a DA F2                   		movw	bc, r10
 116 008c 88 2A                   		mov	a, [sp+42]
 117 008e 48 00 00                		mov	[bc], a
  64:../src/r_cg_timer.c ****     TMIF01 = 0U;    /* clear INTTM01 interrupt flag */
 118                             		.loc 1 64 0
 119 0091 C9 F0 E2 FF             		movw	r8, #-30
 120 0095 AD F0                   		movw	ax, r8
 121 0097 BD F2                   		movw	r10, ax
 122 0099 FA F2                   		movw	hl, r10
 123 009b 8B                      		mov	a, [hl]
 124 009c 98 29                   		mov	[sp+41], a
 125 009e 5C DF                   		and	a, #-33
 126 00a0 98 28                   		mov	[sp+40], a
 127 00a2 AD F0                   		movw	ax, r8
 128 00a4 DA F2                   		movw	bc, r10
 129 00a6 88 28                   		mov	a, [sp+40]
 130 00a8 48 00 00                		mov	[bc], a
  65:../src/r_cg_timer.c ****     /* Mask channel 1 higher 8 bits interrupt */
  66:../src/r_cg_timer.c ****     TMMK01H = 1U;    /* disable INTTM01H interrupt */
 131                             		.loc 1 66 0
 132 00ab C9 F0 E5 FF             		movw	r8, #-27
 133 00af AD F0                   		movw	ax, r8
 134 00b1 BD F2                   		movw	r10, ax
 135 00b3 FA F2                   		movw	hl, r10
 136 00b5 8B                      		mov	a, [hl]
 137 00b6 98 27                   		mov	[sp+39], a
 138 00b8 6C 80                   		or	a, #-128
 139 00ba 98 26                   		mov	[sp+38], a
 140 00bc AD F0                   		movw	ax, r8
 141 00be DA F2                   		movw	bc, r10
 142 00c0 88 26                   		mov	a, [sp+38]
 143 00c2 48 00 00                		mov	[bc], a
  67:../src/r_cg_timer.c ****     TMIF01H = 0U;    /* clear INTTM01H interrupt flag */
 144                             		.loc 1 67 0
 145 00c5 C9 F0 E1 FF             		movw	r8, #-31
 146 00c9 AD F0                   		movw	ax, r8
 147 00cb BD F2                   		movw	r10, ax
 148 00cd FA F2                   		movw	hl, r10
 149 00cf 8B                      		mov	a, [hl]
 150 00d0 98 25                   		mov	[sp+37], a
 151 00d2 5C 7F                   		and	a, #127
 152 00d4 98 24                   		mov	[sp+36], a
 153 00d6 AD F0                   		movw	ax, r8
 154 00d8 DA F2                   		movw	bc, r10
 155 00da 88 24                   		mov	a, [sp+36]
 156 00dc 48 00 00                		mov	[bc], a
  68:../src/r_cg_timer.c ****     /* Mask channel 2 interrupt */
  69:../src/r_cg_timer.c ****     TMMK02 = 1U;    /* disable INTTM02 interrupt */
 157                             		.loc 1 69 0
 158 00df C9 F0 E6 FF             		movw	r8, #-26
 159 00e3 AD F0                   		movw	ax, r8
 160 00e5 BD F2                   		movw	r10, ax
 161 00e7 FA F2                   		movw	hl, r10
 162 00e9 8B                      		mov	a, [hl]
 163 00ea 98 23                   		mov	[sp+35], a
 164 00ec 6C 40                   		or	a, #64
 165 00ee 98 22                   		mov	[sp+34], a
 166 00f0 AD F0                   		movw	ax, r8
 167 00f2 DA F2                   		movw	bc, r10
 168 00f4 88 22                   		mov	a, [sp+34]
 169 00f6 48 00 00                		mov	[bc], a
  70:../src/r_cg_timer.c ****     TMIF02 = 0U;    /* clear INTTM02 interrupt flag */
 170                             		.loc 1 70 0
 171 00f9 C9 F0 E2 FF             		movw	r8, #-30
 172 00fd AD F0                   		movw	ax, r8
 173 00ff BD F2                   		movw	r10, ax
 174 0101 FA F2                   		movw	hl, r10
 175 0103 8B                      		mov	a, [hl]
 176 0104 98 21                   		mov	[sp+33], a
 177 0106 5C BF                   		and	a, #-65
 178 0108 98 20                   		mov	[sp+32], a
 179 010a AD F0                   		movw	ax, r8
 180 010c DA F2                   		movw	bc, r10
 181 010e 88 20                   		mov	a, [sp+32]
 182 0110 48 00 00                		mov	[bc], a
  71:../src/r_cg_timer.c ****     /* Mask channel 3 interrupt */
  72:../src/r_cg_timer.c ****     TMMK03 = 1U;    /* disable INTTM03 interrupt */
 183                             		.loc 1 72 0
 184 0113 C9 F0 E6 FF             		movw	r8, #-26
 185 0117 AD F0                   		movw	ax, r8
 186 0119 BD F2                   		movw	r10, ax
 187 011b FA F2                   		movw	hl, r10
 188 011d 8B                      		mov	a, [hl]
 189 011e 98 1F                   		mov	[sp+31], a
 190 0120 6C 80                   		or	a, #-128
 191 0122 98 1E                   		mov	[sp+30], a
 192 0124 AD F0                   		movw	ax, r8
 193 0126 DA F2                   		movw	bc, r10
 194 0128 88 1E                   		mov	a, [sp+30]
 195 012a 48 00 00                		mov	[bc], a
  73:../src/r_cg_timer.c ****     TMIF03 = 0U;    /* clear INTTM03 interrupt flag */
 196                             		.loc 1 73 0
 197 012d C9 F0 E2 FF             		movw	r8, #-30
 198 0131 AD F0                   		movw	ax, r8
 199 0133 BD F2                   		movw	r10, ax
 200 0135 FA F2                   		movw	hl, r10
 201 0137 8B                      		mov	a, [hl]
 202 0138 98 1D                   		mov	[sp+29], a
 203 013a 5C 7F                   		and	a, #127
 204 013c 98 1C                   		mov	[sp+28], a
 205 013e AD F0                   		movw	ax, r8
 206 0140 DA F2                   		movw	bc, r10
 207 0142 88 1C                   		mov	a, [sp+28]
 208 0144 48 00 00                		mov	[bc], a
  74:../src/r_cg_timer.c ****     /* Mask channel 3 higher 8 bits interrupt */
  75:../src/r_cg_timer.c ****     TMMK03H = 1U;    /* disable INTTM03H interrupt */
 209                             		.loc 1 75 0
 210 0147 C9 F0 E6 FF             		movw	r8, #-26
 211 014b AD F0                   		movw	ax, r8
 212 014d BD F2                   		movw	r10, ax
 213 014f FA F2                   		movw	hl, r10
 214 0151 8B                      		mov	a, [hl]
 215 0152 98 1B                   		mov	[sp+27], a
 216 0154 6C 04                   		or	a, #4
 217 0156 98 1A                   		mov	[sp+26], a
 218 0158 AD F0                   		movw	ax, r8
 219 015a DA F2                   		movw	bc, r10
 220 015c 88 1A                   		mov	a, [sp+26]
 221 015e 48 00 00                		mov	[bc], a
  76:../src/r_cg_timer.c ****     TMIF03H = 0U;    /* clear INTTM03H interrupt flag */
 222                             		.loc 1 76 0
 223 0161 C9 F0 E2 FF             		movw	r8, #-30
 224 0165 AD F0                   		movw	ax, r8
 225 0167 BD F2                   		movw	r10, ax
 226 0169 FA F2                   		movw	hl, r10
 227 016b 8B                      		mov	a, [hl]
 228 016c 98 19                   		mov	[sp+25], a
 229 016e 5C FB                   		and	a, #-5
 230 0170 98 18                   		mov	[sp+24], a
 231 0172 AD F0                   		movw	ax, r8
 232 0174 DA F2                   		movw	bc, r10
 233 0176 88 18                   		mov	a, [sp+24]
 234 0178 48 00 00                		mov	[bc], a
  77:../src/r_cg_timer.c ****     /* Mask channel 4 interrupt */
  78:../src/r_cg_timer.c ****     TMMK04 = 1U;    /* disable INTTM04 interrupt */
 235                             		.loc 1 78 0
 236 017b C9 F0 E7 FF             		movw	r8, #-25
 237 017f AD F0                   		movw	ax, r8
 238 0181 BD F2                   		movw	r10, ax
 239 0183 FA F2                   		movw	hl, r10
 240 0185 8B                      		mov	a, [hl]
 241 0186 98 17                   		mov	[sp+23], a
 242 0188 6C 80                   		or	a, #-128
 243 018a 98 16                   		mov	[sp+22], a
 244 018c AD F0                   		movw	ax, r8
 245 018e DA F2                   		movw	bc, r10
 246 0190 88 16                   		mov	a, [sp+22]
 247 0192 48 00 00                		mov	[bc], a
  79:../src/r_cg_timer.c ****     TMIF04 = 0U;    /* clear INTTM04 interrupt flag */
 248                             		.loc 1 79 0
 249 0195 C9 F0 E3 FF             		movw	r8, #-29
 250 0199 AD F0                   		movw	ax, r8
 251 019b BD F2                   		movw	r10, ax
 252 019d FA F2                   		movw	hl, r10
 253 019f 8B                      		mov	a, [hl]
 254 01a0 98 15                   		mov	[sp+21], a
 255 01a2 5C 7F                   		and	a, #127
 256 01a4 98 14                   		mov	[sp+20], a
 257 01a6 AD F0                   		movw	ax, r8
 258 01a8 DA F2                   		movw	bc, r10
 259 01aa 88 14                   		mov	a, [sp+20]
 260 01ac 48 00 00                		mov	[bc], a
  80:../src/r_cg_timer.c ****     /* Mask channel 5 interrupt */
  81:../src/r_cg_timer.c ****     TMMK05 = 1U;    /* disable INTTM05 interrupt */
 261                             		.loc 1 81 0
 262 01af C9 F0 D4 FF             		movw	r8, #-44
 263 01b3 AD F0                   		movw	ax, r8
 264 01b5 BD F2                   		movw	r10, ax
 265 01b7 FA F2                   		movw	hl, r10
 266 01b9 8B                      		mov	a, [hl]
 267 01ba 98 13                   		mov	[sp+19], a
 268 01bc 6C 01                   		or	a, #1
 269 01be 98 12                   		mov	[sp+18], a
 270 01c0 AD F0                   		movw	ax, r8
 271 01c2 DA F2                   		movw	bc, r10
 272 01c4 88 12                   		mov	a, [sp+18]
 273 01c6 48 00 00                		mov	[bc], a
  82:../src/r_cg_timer.c ****     TMIF05 = 0U;    /* clear INTTM05 interrupt flag */
 274                             		.loc 1 82 0
 275 01c9 C9 F0 D0 FF             		movw	r8, #-48
 276 01cd AD F0                   		movw	ax, r8
 277 01cf BD F2                   		movw	r10, ax
 278 01d1 FA F2                   		movw	hl, r10
 279 01d3 8B                      		mov	a, [hl]
 280 01d4 98 11                   		mov	[sp+17], a
 281 01d6 5C FE                   		and	a, #-2
 282 01d8 98 10                   		mov	[sp+16], a
 283 01da AD F0                   		movw	ax, r8
 284 01dc DA F2                   		movw	bc, r10
 285 01de 88 10                   		mov	a, [sp+16]
 286 01e0 48 00 00                		mov	[bc], a
  83:../src/r_cg_timer.c ****     /* Mask channel 6 interrupt */
  84:../src/r_cg_timer.c ****     TMMK06 = 1U;    /* disable INTTM06 interrupt */
 287                             		.loc 1 84 0
 288 01e3 C9 F0 D4 FF             		movw	r8, #-44
 289 01e7 AD F0                   		movw	ax, r8
 290 01e9 BD F2                   		movw	r10, ax
 291 01eb FA F2                   		movw	hl, r10
 292 01ed 8B                      		mov	a, [hl]
 293 01ee 98 0F                   		mov	[sp+15], a
 294 01f0 6C 02                   		or	a, #2
 295 01f2 98 0E                   		mov	[sp+14], a
 296 01f4 AD F0                   		movw	ax, r8
 297 01f6 DA F2                   		movw	bc, r10
 298 01f8 88 0E                   		mov	a, [sp+14]
 299 01fa 48 00 00                		mov	[bc], a
  85:../src/r_cg_timer.c ****     TMIF06 = 0U;    /* clear INTTM06 interrupt flag */
 300                             		.loc 1 85 0
 301 01fd C9 F0 D0 FF             		movw	r8, #-48
 302 0201 AD F0                   		movw	ax, r8
 303 0203 BD F2                   		movw	r10, ax
 304 0205 FA F2                   		movw	hl, r10
 305 0207 8B                      		mov	a, [hl]
 306 0208 98 0D                   		mov	[sp+13], a
 307 020a 5C FD                   		and	a, #-3
 308 020c 98 0C                   		mov	[sp+12], a
 309 020e AD F0                   		movw	ax, r8
 310 0210 DA F2                   		movw	bc, r10
 311 0212 88 0C                   		mov	a, [sp+12]
 312 0214 48 00 00                		mov	[bc], a
  86:../src/r_cg_timer.c ****     /* Mask channel 7 interrupt */
  87:../src/r_cg_timer.c ****     TMMK07 = 1U;    /* disable INTTM07 interrupt */
 313                             		.loc 1 87 0
 314 0217 C9 F0 D4 FF             		movw	r8, #-44
 315 021b AD F0                   		movw	ax, r8
 316 021d BD F2                   		movw	r10, ax
 317 021f FA F2                   		movw	hl, r10
 318 0221 8B                      		mov	a, [hl]
 319 0222 98 0B                   		mov	[sp+11], a
 320 0224 6C 04                   		or	a, #4
 321 0226 98 0A                   		mov	[sp+10], a
 322 0228 AD F0                   		movw	ax, r8
 323 022a DA F2                   		movw	bc, r10
 324 022c 88 0A                   		mov	a, [sp+10]
 325 022e 48 00 00                		mov	[bc], a
  88:../src/r_cg_timer.c ****     TMIF07 = 0U;    /* clear INTTM07 interrupt flag */
 326                             		.loc 1 88 0
 327 0231 C9 F0 D0 FF             		movw	r8, #-48
 328 0235 AD F0                   		movw	ax, r8
 329 0237 BD F2                   		movw	r10, ax
 330 0239 FA F2                   		movw	hl, r10
 331 023b 8B                      		mov	a, [hl]
 332 023c 98 09                   		mov	[sp+9], a
 333 023e 5C FB                   		and	a, #-5
 334 0240 98 08                   		mov	[sp+8], a
 335 0242 AD F0                   		movw	ax, r8
 336 0244 DA F2                   		movw	bc, r10
 337 0246 88 08                   		mov	a, [sp+8]
 338 0248 48 00 00                		mov	[bc], a
  89:../src/r_cg_timer.c ****     /* Set INTTM00 high priority */
  90:../src/r_cg_timer.c ****     TMPR100 = 0U;
 339                             		.loc 1 90 0
 340 024b C9 F0 EE FF             		movw	r8, #-18
 341 024f AD F0                   		movw	ax, r8
 342 0251 BD F2                   		movw	r10, ax
 343 0253 FA F2                   		movw	hl, r10
 344 0255 8B                      		mov	a, [hl]
 345 0256 98 07                   		mov	[sp+7], a
 346 0258 5C EF                   		and	a, #-17
 347 025a 98 06                   		mov	[sp+6], a
 348 025c AD F0                   		movw	ax, r8
 349 025e DA F2                   		movw	bc, r10
 350 0260 88 06                   		mov	a, [sp+6]
 351 0262 48 00 00                		mov	[bc], a
  91:../src/r_cg_timer.c ****     TMPR000 = 0U;
 352                             		.loc 1 91 0
 353 0265 C9 F0 EA FF             		movw	r8, #-22
 354 0269 AD F0                   		movw	ax, r8
 355 026b BD F2                   		movw	r10, ax
 356 026d FA F2                   		movw	hl, r10
 357 026f 8B                      		mov	a, [hl]
 358 0270 98 05                   		mov	[sp+5], a
 359 0272 5C EF                   		and	a, #-17
 360 0274 98 04                   		mov	[sp+4], a
 361 0276 AD F0                   		movw	ax, r8
 362 0278 DA F2                   		movw	bc, r10
 363 027a 88 04                   		mov	a, [sp+4]
 364 027c 48 00 00                		mov	[bc], a
  92:../src/r_cg_timer.c ****     /* Set INTTM01 low priority */
  93:../src/r_cg_timer.c ****     TMPR101 = 1U;
 365                             		.loc 1 93 0
 366 027f C9 F0 EE FF             		movw	r8, #-18
 367 0283 AD F0                   		movw	ax, r8
 368 0285 BD F2                   		movw	r10, ax
 369 0287 FA F2                   		movw	hl, r10
 370 0289 8B                      		mov	a, [hl]
 371 028a 98 03                   		mov	[sp+3], a
 372 028c 6C 20                   		or	a, #32
 373 028e 98 02                   		mov	[sp+2], a
 374 0290 AD F0                   		movw	ax, r8
 375 0292 DA F2                   		movw	bc, r10
 376 0294 88 02                   		mov	a, [sp+2]
 377 0296 48 00 00                		mov	[bc], a
  94:../src/r_cg_timer.c ****     TMPR001 = 1U;
 378                             		.loc 1 94 0
 379 0299 C9 F0 EA FF             		movw	r8, #-22
 380 029d AD F0                   		movw	ax, r8
 381 029f BD F2                   		movw	r10, ax
 382 02a1 FA F2                   		movw	hl, r10
 383 02a3 8B                      		mov	a, [hl]
 384 02a4 98 01                   		mov	[sp+1], a
 385 02a6 6C 20                   		or	a, #32
 386 02a8 98 00                   		mov	[sp], a
 387 02aa AD F0                   		movw	ax, r8
 388 02ac DA F2                   		movw	bc, r10
 389 02ae 88 00                   		mov	a, [sp]
 390 02b0 48 00 00                		mov	[bc], a
  95:../src/r_cg_timer.c ****     /* Channel 0 used as interval timer */
  96:../src/r_cg_timer.c ****     TMR00 = _8000_TAU_CLOCK_SELECT_CKM1 | _0000_TAU_CLOCK_MODE_CKS | _0000_TAU_COMBINATION_SLAVE |
 391                             		.loc 1 96 0
 392 02b3 C9 F0 90 01             		movw	r8, #400
 393 02b7 AD F0                   		movw	ax, r8
 394 02b9 BD F2                   		movw	r10, ax
 395 02bb DA F2                   		movw	bc, r10
 396 02bd 30 00 80                		movw	ax, #-32768
 397 02c0 78 00 00                		movw	[bc], ax
  97:../src/r_cg_timer.c ****             _0000_TAU_TRIGGER_SOFTWARE | _0000_TAU_MODE_INTERVAL_TIMER | _0000_TAU_START_INT_UNUSED
  98:../src/r_cg_timer.c ****     TDR00 = _F9FF_TAU_TDR00_VALUE;
 398                             		.loc 1 98 0
 399 02c3 C9 F0 18 FF             		movw	r8, #-232
 400 02c7 AD F0                   		movw	ax, r8
 401 02c9 BD F2                   		movw	r10, ax
 402 02cb DA F2                   		movw	bc, r10
 403 02cd 30 FF F9                		movw	ax, #-1537
 404 02d0 78 00 00                		movw	[bc], ax
  99:../src/r_cg_timer.c ****     TO0 &= ~_0001_TAU_CH0_OUTPUT_VALUE_1;
 405                             		.loc 1 99 0
 406 02d3 30 B8 01                		movw	ax, #440
 407 02d6 B8 32                   		movw	[sp+50], ax
 408 02d8 C9 F0 B8 01             		movw	r8, #440
 409 02dc AD F0                   		movw	ax, r8
 410 02de BD F2                   		movw	r10, ax
 411 02e0 FA F2                   		movw	hl, r10
 412 02e2 AB                      		movw	ax, [hl]
 413 02e3 BD F0                   		movw	r8, ax
 414 02e5 8D F0                   		mov	a, r8
 415 02e7 5C FE                   		and	a, #-2
 416 02e9 9D EC                   		mov	r20, a
 417 02eb 8D F1                   		mov	a, r9
 418 02ed 5C FF                   		and	a, #-1
 419 02ef 9D ED                   		mov	r21, a
 420 02f1 A8 32                   		movw	ax, [sp+50]
 421 02f3 BD F0                   		movw	r8, ax
 422 02f5 DA F0                   		movw	bc, r8
 423 02f7 AD EC                   		movw	ax, r20
 424 02f9 78 00 00                		movw	[bc], ax
 100:../src/r_cg_timer.c ****     TOE0 &= ~_0001_TAU_CH0_OUTPUT_ENABLE;
 425                             		.loc 1 100 0
 426 02fc C9 EC BA 01             		movw	r20, #442
 427 0300 C9 F0 BA 01             		movw	r8, #442
 428 0304 AD F0                   		movw	ax, r8
 429 0306 BD F2                   		movw	r10, ax
 430 0308 FA F2                   		movw	hl, r10
 431 030a AB                      		movw	ax, [hl]
 432 030b BD F0                   		movw	r8, ax
 433 030d 8D F0                   		mov	a, r8
 434 030f 5C FE                   		and	a, #-2
 435 0311 9D EA                   		mov	r18, a
 436 0313 8D F1                   		mov	a, r9
 437 0315 5C FF                   		and	a, #-1
 438 0317 9D EB                   		mov	r19, a
 439 0319 DA EC                   		movw	bc, r20
 440 031b AD EA                   		movw	ax, r18
 441 031d 78 00 00                		movw	[bc], ax
 101:../src/r_cg_timer.c ****     /* Channel 1 used as interval timer */
 102:../src/r_cg_timer.c ****     TMR01 = _0000_TAU_CLOCK_SELECT_CKM0 | _0000_TAU_CLOCK_MODE_CKS | _0000_TAU_16BITS_MODE |
 442                             		.loc 1 102 0
 443 0320 C9 F0 92 01             		movw	r8, #402
 444 0324 AD F0                   		movw	ax, r8
 445 0326 BD F2                   		movw	r10, ax
 446 0328 DA F2                   		movw	bc, r10
 447 032a F6                      		clrw	ax
 448 032b 78 00 00                		movw	[bc], ax
 103:../src/r_cg_timer.c ****             _0000_TAU_TRIGGER_SOFTWARE | _0000_TAU_MODE_INTERVAL_TIMER | _0000_TAU_START_INT_UNUSED
 104:../src/r_cg_timer.c ****     TDR01 = _9C3F_TAU_TDR01_VALUE;
 449                             		.loc 1 104 0
 450 032e C9 F0 1A FF             		movw	r8, #-230
 451 0332 AD F0                   		movw	ax, r8
 452 0334 BD F2                   		movw	r10, ax
 453 0336 DA F2                   		movw	bc, r10
 454 0338 30 3F 9C                		movw	ax, #-25537
 455 033b 78 00 00                		movw	[bc], ax
 105:../src/r_cg_timer.c ****     TOM0 &= ~_0002_TAU_CH1_OUTPUT_COMBIN;
 456                             		.loc 1 105 0
 457 033e C9 EA BE 01             		movw	r18, #446
 458 0342 C9 F0 BE 01             		movw	r8, #446
 459 0346 AD F0                   		movw	ax, r8
 460 0348 BD F2                   		movw	r10, ax
 461 034a FA F2                   		movw	hl, r10
 462 034c AB                      		movw	ax, [hl]
 463 034d BD F0                   		movw	r8, ax
 464 034f 8D F0                   		mov	a, r8
 465 0351 5C FD                   		and	a, #-3
 466 0353 9D E8                   		mov	r16, a
 467 0355 8D F1                   		mov	a, r9
 468 0357 5C FF                   		and	a, #-1
 469 0359 9D E9                   		mov	r17, a
 470 035b DA EA                   		movw	bc, r18
 471 035d AD E8                   		movw	ax, r16
 472 035f 78 00 00                		movw	[bc], ax
 106:../src/r_cg_timer.c ****     TOL0 &= ~_0002_TAU_CH1_OUTPUT_LEVEL_L;
 473                             		.loc 1 106 0
 474 0362 C9 E8 BC 01             		movw	r16, #444
 475 0366 C9 F0 BC 01             		movw	r8, #444
 476 036a AD F0                   		movw	ax, r8
 477 036c BD F2                   		movw	r10, ax
 478 036e FA F2                   		movw	hl, r10
 479 0370 AB                      		movw	ax, [hl]
 480 0371 BD F0                   		movw	r8, ax
 481 0373 8D F0                   		mov	a, r8
 482 0375 5C FD                   		and	a, #-3
 483 0377 9D F6                   		mov	r14, a
 484 0379 8D F1                   		mov	a, r9
 485 037b 5C FF                   		and	a, #-1
 486 037d 9D F7                   		mov	r15, a
 487 037f DA E8                   		movw	bc, r16
 488 0381 AD F6                   		movw	ax, r14
 489 0383 78 00 00                		movw	[bc], ax
 107:../src/r_cg_timer.c ****     TO0 &= ~_0002_TAU_CH1_OUTPUT_VALUE_1;
 490                             		.loc 1 107 0
 491 0386 C9 F6 B8 01             		movw	r14, #440
 492 038a C9 F0 B8 01             		movw	r8, #440
 493 038e AD F0                   		movw	ax, r8
 494 0390 BD F2                   		movw	r10, ax
 495 0392 FA F2                   		movw	hl, r10
 496 0394 AB                      		movw	ax, [hl]
 497 0395 BD F0                   		movw	r8, ax
 498 0397 8D F0                   		mov	a, r8
 499 0399 5C FD                   		and	a, #-3
 500 039b 9D F4                   		mov	r12, a
 501 039d 8D F1                   		mov	a, r9
 502 039f 5C FF                   		and	a, #-1
 503 03a1 9D F5                   		mov	r13, a
 504 03a3 AD F6                   		movw	ax, r14
 505 03a5 BD F0                   		movw	r8, ax
 506 03a7 DA F0                   		movw	bc, r8
 507 03a9 AD F4                   		movw	ax, r12
 508 03ab 78 00 00                		movw	[bc], ax
 108:../src/r_cg_timer.c ****     TOE0 &= ~_0002_TAU_CH1_OUTPUT_ENABLE;
 509                             		.loc 1 108 0
 510 03ae C9 F4 BA 01             		movw	r12, #442
 511 03b2 C9 F0 BA 01             		movw	r8, #442
 512 03b6 AD F0                   		movw	ax, r8
 513 03b8 BD F2                   		movw	r10, ax
 514 03ba FA F2                   		movw	hl, r10
 515 03bc AB                      		movw	ax, [hl]
 516 03bd BD F0                   		movw	r8, ax
 517 03bf 8D F0                   		mov	a, r8
 518 03c1 5C FD                   		and	a, #-3
 519 03c3 9D F2                   		mov	r10, a
 520 03c5 8D F1                   		mov	a, r9
 521 03c7 5C FF                   		and	a, #-1
 522 03c9 9D F3                   		mov	r11, a
 523 03cb AD F4                   		movw	ax, r12
 524 03cd BD F0                   		movw	r8, ax
 525 03cf DA F0                   		movw	bc, r8
 526 03d1 AD F2                   		movw	ax, r10
 527 03d3 78 00 00                		movw	[bc], ax
 109:../src/r_cg_timer.c **** }
 528                             		.loc 1 109 0
 529 03d6 10 34                   		addw	sp, #52
 530 03d8 61 EF                   		sel	rb2
 531 03da C4                      		pop	de ; r20
 532 03db C2                      		pop	bc ; r18
 533 03dc C0                      		pop	ax ; r16
 534 03dd 61 CF                   		sel	rb0
 535 03df D7                      		ret
 536                             	.LFE0:
 538                             		.global	_R_TAU0_Channel0_Start
 540                             	_R_TAU0_Channel0_Start:
 541                             	.LFB1:
 110:../src/r_cg_timer.c **** 
 111:../src/r_cg_timer.c **** /**************************************************************************************************
 112:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel0_Start
 113:../src/r_cg_timer.c **** * Description  : This function starts TAU0 channel 0 counter.
 114:../src/r_cg_timer.c **** * Arguments    : None
 115:../src/r_cg_timer.c **** * Return Value : None
 116:../src/r_cg_timer.c **** ***************************************************************************************************
 117:../src/r_cg_timer.c **** void R_TAU0_Channel0_Start(void)
 118:../src/r_cg_timer.c **** {
 542                             		.loc 1 118 0
 119:../src/r_cg_timer.c ****     TMIF00 = 0U;    /* clear INTTM00 interrupt flag */
 543                             		.loc 1 119 0
 544 03e0 C9 F2 E2 FF             		movw	r10, #-30
 545 03e4 AD F2                   		movw	ax, r10
 546 03e6 BD F0                   		movw	r8, ax
 547 03e8 FA F0                   		movw	hl, r8
 548 03ea 8B                      		mov	a, [hl]
 549 03eb 9D F4                   		mov	r12, a
 550 03ed 5A F4 EF                		and	r12, #-17
 551 03f0 AD F2                   		movw	ax, r10
 552 03f2 DA F0                   		movw	bc, r8
 553 03f4 8D F4                   		mov	a, r12
 554 03f6 48 00 00                		mov	[bc], a
 120:../src/r_cg_timer.c ****     TMMK00 = 0U;    /* enable INTTM00 interrupt */
 555                             		.loc 1 120 0
 556 03f9 C9 F2 E6 FF             		movw	r10, #-26
 557 03fd AD F2                   		movw	ax, r10
 558 03ff BD F0                   		movw	r8, ax
 559 0401 FA F0                   		movw	hl, r8
 560 0403 8B                      		mov	a, [hl]
 561 0404 9D F4                   		mov	r12, a
 562 0406 5A F4 EF                		and	r12, #-17
 563 0409 AD F2                   		movw	ax, r10
 564 040b DA F0                   		movw	bc, r8
 565 040d 8D F4                   		mov	a, r12
 566 040f 48 00 00                		mov	[bc], a
 121:../src/r_cg_timer.c ****     TS0 |= _0001_TAU_CH0_START_TRG_ON;
 567                             		.loc 1 121 0
 568 0412 C9 F4 B2 01             		movw	r12, #434
 569 0416 C9 F2 B2 01             		movw	r10, #434
 570 041a AD F2                   		movw	ax, r10
 571 041c BD F0                   		movw	r8, ax
 572 041e FA F0                   		movw	hl, r8
 573 0420 AB                      		movw	ax, [hl]
 574 0421 BD F2                   		movw	r10, ax
 575 0423 8D F2                   		mov	a, r10
 576 0425 6C 01                   		or	a, #1
 577 0427 9D F0                   		mov	r8, a
 578 0429 8D F3                   		mov	a, r11
 579 042b 6C 00                   		or	a, #0
 580 042d 9D F1                   		mov	r9, a
 581 042f AD F4                   		movw	ax, r12
 582 0431 BD F2                   		movw	r10, ax
 583 0433 DA F2                   		movw	bc, r10
 584 0435 AD F0                   		movw	ax, r8
 585 0437 78 00 00                		movw	[bc], ax
 122:../src/r_cg_timer.c **** }
 586                             		.loc 1 122 0
 587 043a D7                      		ret
 588                             	.LFE1:
 590                             		.global	_R_TAU0_Channel0_Stop
 592                             	_R_TAU0_Channel0_Stop:
 593                             	.LFB2:
 123:../src/r_cg_timer.c **** 
 124:../src/r_cg_timer.c **** /**************************************************************************************************
 125:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel0_Stop
 126:../src/r_cg_timer.c **** * Description  : This function stops TAU0 channel 0 counter.
 127:../src/r_cg_timer.c **** * Arguments    : None
 128:../src/r_cg_timer.c **** * Return Value : None
 129:../src/r_cg_timer.c **** ***************************************************************************************************
 130:../src/r_cg_timer.c **** void R_TAU0_Channel0_Stop(void)
 131:../src/r_cg_timer.c **** {
 594                             		.loc 1 131 0
 132:../src/r_cg_timer.c ****     TT0 |= _0001_TAU_CH0_STOP_TRG_ON;
 595                             		.loc 1 132 0
 596 043b C9 F4 B4 01             		movw	r12, #436
 597 043f C9 F2 B4 01             		movw	r10, #436
 598 0443 AD F2                   		movw	ax, r10
 599 0445 BD F0                   		movw	r8, ax
 600 0447 FA F0                   		movw	hl, r8
 601 0449 AB                      		movw	ax, [hl]
 602 044a BD F2                   		movw	r10, ax
 603 044c 8D F2                   		mov	a, r10
 604 044e 6C 01                   		or	a, #1
 605 0450 9D F0                   		mov	r8, a
 606 0452 8D F3                   		mov	a, r11
 607 0454 6C 00                   		or	a, #0
 608 0456 9D F1                   		mov	r9, a
 609 0458 AD F4                   		movw	ax, r12
 610 045a BD F2                   		movw	r10, ax
 611 045c DA F2                   		movw	bc, r10
 612 045e AD F0                   		movw	ax, r8
 613 0460 78 00 00                		movw	[bc], ax
 133:../src/r_cg_timer.c ****     /* Mask channel 0 interrupt */
 134:../src/r_cg_timer.c ****     TMMK00 = 1U;    /* disable INTTM00 interrupt */
 614                             		.loc 1 134 0
 615 0463 C9 F0 E6 FF             		movw	r8, #-26
 616 0467 AD F0                   		movw	ax, r8
 617 0469 BD F4                   		movw	r12, ax
 618 046b FA F4                   		movw	hl, r12
 619 046d 8B                      		mov	a, [hl]
 620 046e 9D F2                   		mov	r10, a
 621 0470 6A F2 10                		or	r10, #16
 622 0473 AD F0                   		movw	ax, r8
 623 0475 DA F4                   		movw	bc, r12
 624 0477 8D F2                   		mov	a, r10
 625 0479 48 00 00                		mov	[bc], a
 135:../src/r_cg_timer.c ****     TMIF00 = 0U;    /* clear INTTM00 interrupt flag */
 626                             		.loc 1 135 0
 627 047c C9 F0 E2 FF             		movw	r8, #-30
 628 0480 AD F0                   		movw	ax, r8
 629 0482 BD F4                   		movw	r12, ax
 630 0484 FA F4                   		movw	hl, r12
 631 0486 8B                      		mov	a, [hl]
 632 0487 9D F2                   		mov	r10, a
 633 0489 5A F2 EF                		and	r10, #-17
 634 048c AD F0                   		movw	ax, r8
 635 048e DA F4                   		movw	bc, r12
 636 0490 8D F2                   		mov	a, r10
 637 0492 48 00 00                		mov	[bc], a
 136:../src/r_cg_timer.c **** }
 638                             		.loc 1 136 0
 639 0495 D7                      		ret
 640                             	.LFE2:
 642                             		.global	_R_TAU0_Channel1_Start
 644                             	_R_TAU0_Channel1_Start:
 645                             	.LFB3:
 137:../src/r_cg_timer.c **** 
 138:../src/r_cg_timer.c **** /**************************************************************************************************
 139:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel1_Start
 140:../src/r_cg_timer.c **** * Description  : This function starts TAU0 channel 1 counter.
 141:../src/r_cg_timer.c **** * Arguments    : None
 142:../src/r_cg_timer.c **** * Return Value : None
 143:../src/r_cg_timer.c **** ***************************************************************************************************
 144:../src/r_cg_timer.c **** void R_TAU0_Channel1_Start(void)
 145:../src/r_cg_timer.c **** {
 646                             		.loc 1 145 0
 146:../src/r_cg_timer.c ****     TMIF01 = 0U;    /* clear INTTM01 interrupt flag */
 647                             		.loc 1 146 0
 648 0496 C9 F2 E2 FF             		movw	r10, #-30
 649 049a AD F2                   		movw	ax, r10
 650 049c BD F0                   		movw	r8, ax
 651 049e FA F0                   		movw	hl, r8
 652 04a0 8B                      		mov	a, [hl]
 653 04a1 9D F4                   		mov	r12, a
 654 04a3 5A F4 DF                		and	r12, #-33
 655 04a6 AD F2                   		movw	ax, r10
 656 04a8 DA F0                   		movw	bc, r8
 657 04aa 8D F4                   		mov	a, r12
 658 04ac 48 00 00                		mov	[bc], a
 147:../src/r_cg_timer.c ****     TMMK01 = 0U;    /* enable INTTM01 interrupt */
 659                             		.loc 1 147 0
 660 04af C9 F2 E6 FF             		movw	r10, #-26
 661 04b3 AD F2                   		movw	ax, r10
 662 04b5 BD F0                   		movw	r8, ax
 663 04b7 FA F0                   		movw	hl, r8
 664 04b9 8B                      		mov	a, [hl]
 665 04ba 9D F4                   		mov	r12, a
 666 04bc 5A F4 DF                		and	r12, #-33
 667 04bf AD F2                   		movw	ax, r10
 668 04c1 DA F0                   		movw	bc, r8
 669 04c3 8D F4                   		mov	a, r12
 670 04c5 48 00 00                		mov	[bc], a
 148:../src/r_cg_timer.c ****     TS0 |= _0002_TAU_CH1_START_TRG_ON;
 671                             		.loc 1 148 0
 672 04c8 C9 F4 B2 01             		movw	r12, #434
 673 04cc C9 F2 B2 01             		movw	r10, #434
 674 04d0 AD F2                   		movw	ax, r10
 675 04d2 BD F0                   		movw	r8, ax
 676 04d4 FA F0                   		movw	hl, r8
 677 04d6 AB                      		movw	ax, [hl]
 678 04d7 BD F2                   		movw	r10, ax
 679 04d9 8D F2                   		mov	a, r10
 680 04db 6C 02                   		or	a, #2
 681 04dd 9D F0                   		mov	r8, a
 682 04df 8D F3                   		mov	a, r11
 683 04e1 6C 00                   		or	a, #0
 684 04e3 9D F1                   		mov	r9, a
 685 04e5 AD F4                   		movw	ax, r12
 686 04e7 BD F2                   		movw	r10, ax
 687 04e9 DA F2                   		movw	bc, r10
 688 04eb AD F0                   		movw	ax, r8
 689 04ed 78 00 00                		movw	[bc], ax
 149:../src/r_cg_timer.c **** }
 690                             		.loc 1 149 0
 691 04f0 D7                      		ret
 692                             	.LFE3:
 694                             		.global	_R_TAU0_Channel1_Stop
 696                             	_R_TAU0_Channel1_Stop:
 697                             	.LFB4:
 150:../src/r_cg_timer.c **** 
 151:../src/r_cg_timer.c **** /**************************************************************************************************
 152:../src/r_cg_timer.c **** * Function Name: R_TAU0_Channel1_Stop
 153:../src/r_cg_timer.c **** * Description  : This function stops TAU0 channel 1 counter.
 154:../src/r_cg_timer.c **** * Arguments    : None
 155:../src/r_cg_timer.c **** * Return Value : None
 156:../src/r_cg_timer.c **** ***************************************************************************************************
 157:../src/r_cg_timer.c **** void R_TAU0_Channel1_Stop(void)
 158:../src/r_cg_timer.c **** {
 698                             		.loc 1 158 0
 159:../src/r_cg_timer.c ****     TT0 |= _0002_TAU_CH1_STOP_TRG_ON;
 699                             		.loc 1 159 0
 700 04f1 C9 F4 B4 01             		movw	r12, #436
 701 04f5 C9 F2 B4 01             		movw	r10, #436
 702 04f9 AD F2                   		movw	ax, r10
 703 04fb BD F0                   		movw	r8, ax
 704 04fd FA F0                   		movw	hl, r8
 705 04ff AB                      		movw	ax, [hl]
 706 0500 BD F2                   		movw	r10, ax
 707 0502 8D F2                   		mov	a, r10
 708 0504 6C 02                   		or	a, #2
 709 0506 9D F0                   		mov	r8, a
 710 0508 8D F3                   		mov	a, r11
 711 050a 6C 00                   		or	a, #0
 712 050c 9D F1                   		mov	r9, a
 713 050e AD F4                   		movw	ax, r12
 714 0510 BD F2                   		movw	r10, ax
 715 0512 DA F2                   		movw	bc, r10
 716 0514 AD F0                   		movw	ax, r8
 717 0516 78 00 00                		movw	[bc], ax
 160:../src/r_cg_timer.c ****     /* Mask channel 1 interrupt */
 161:../src/r_cg_timer.c ****     TMMK01 = 1U;    /* disable INTTM01 interrupt */
 718                             		.loc 1 161 0
 719 0519 C9 F0 E6 FF             		movw	r8, #-26
 720 051d AD F0                   		movw	ax, r8
 721 051f BD F4                   		movw	r12, ax
 722 0521 FA F4                   		movw	hl, r12
 723 0523 8B                      		mov	a, [hl]
 724 0524 9D F2                   		mov	r10, a
 725 0526 6A F2 20                		or	r10, #32
 726 0529 AD F0                   		movw	ax, r8
 727 052b DA F4                   		movw	bc, r12
 728 052d 8D F2                   		mov	a, r10
 729 052f 48 00 00                		mov	[bc], a
 162:../src/r_cg_timer.c ****     TMIF01 = 0U;    /* clear INTTM01 interrupt flag */
 730                             		.loc 1 162 0
 731 0532 C9 F0 E2 FF             		movw	r8, #-30
 732 0536 AD F0                   		movw	ax, r8
 733 0538 BD F4                   		movw	r12, ax
 734 053a FA F4                   		movw	hl, r12
 735 053c 8B                      		mov	a, [hl]
 736 053d 9D F2                   		mov	r10, a
 737 053f 5A F2 DF                		and	r10, #-33
 738 0542 AD F0                   		movw	ax, r8
 739 0544 DA F4                   		movw	bc, r12
 740 0546 8D F2                   		mov	a, r10
 741 0548 48 00 00                		mov	[bc], a
 163:../src/r_cg_timer.c **** }
 742                             		.loc 1 163 0
 743 054b D7                      		ret
 744                             	.LFE4:
 820                             	.Letext0:
 821                             		.file 2 "../src/iodefine.h"
 822                             		.file 3 "../src/iodefine_ext.h"
 823                             		.file 4 "../src/r_cg_macrodriver.h"
 824                             		.file 5 "../src/globals.h"
