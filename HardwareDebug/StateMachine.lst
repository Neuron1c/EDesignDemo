   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.comm	_record,50,1
  28                             		.comm	_mem,50,1
  29                             		.comm	_display_string,50,1
  30                             		.comm	_voltage,1,1
  31                             		.comm	_current1,1,1
  32                             		.comm	_current2,1,1
  33                             		.comm	_date,6,1
  34                             		.comm	_scrollFlag,1,1
  35                             		.comm	_tempFlag,1,1
  36                             		.comm	_secFlag,1,1
  37                             		.comm	_scrollCount,2,2
  38                             		.comm	_timerFlag,2,2
  39                             		.local	_state
  40                             		.comm	_state,2,2
  41                             		.local	_newDate
  42                             		.comm	_newDate,6,1
  43                             		.section	.rodata
  44                             	.LC0:
  45 0000 24 42 32 30 25 30 32 64 		.string	"$B20%02d,%d,%d,%d,%d,%d\r\n"
  45      2C 25 64 2C 25 64 2C 25 
  45      64 2C 25 64 2C 25 64 0D 
  45      0A 00 
  46                             	.LC1:
  47 001a 53 50 3A 56 6F 63 3D 25 		.string	"SP:Voc=%d mV, Isc=%d mA\r\n"
  47      64 20 6D 56 2C 20 49 73 
  47      63 3D 25 64 20 6D 41 0D 
  47      0A 00 
  48                             	.LC2:
  49 0034 59 65 61 72 3A 20 32 30 		.string	"Year: 20%02d\r\n"
  49      25 30 32 64 0D 0A 00 
  50                             	.LC3:
  51 0043 4D 6F 6E 74 68 3A 20 25 		.string	"Month: %d\r\n"
  51      64 0D 0A 00 
  52                             	.LC4:
  53 004f 44 61 79 3A 20 25 64 0D 		.string	"Day: %d\r\n"
  53      0A 00 
  54                             	.LC5:
  55 0059 48 6F 75 72 3A 20 25 64 		.string	"Hour: %d\r\n"
  55      0D 0A 00 
  56                             	.LC6:
  57 0064 4D 69 6E 75 74 65 3A 20 		.string	"Minute: %d\r\n"
  57      25 64 0D 0A 00 
  58                             	.LC7:
  59 0071 53 65 63 6F 6E 64 3A 20 		.string	"Second: %d\r\n"
  59      25 64 0D 0A 00 
  60                             	.text
  61                             		.global	_recieveInstruction
  63                             	_recieveInstruction:
  64                             	.LFB0:
  65                             		.file 1 "../src/StateMachine.c"
   1:../src/StateMachine.c **** /*
   2:../src/StateMachine.c ****  * StateMachine.c
   3:../src/StateMachine.c ****  *
   4:../src/StateMachine.c ****  *  Created on: 15 Apr 2017
   5:../src/StateMachine.c ****  *      Author: Neuron1c
   6:../src/StateMachine.c ****  */
   7:../src/StateMachine.c **** 
   8:../src/StateMachine.c **** #include "r_cg_userdefine.h"
   9:../src/StateMachine.c **** #include <string.h>
  10:../src/StateMachine.c **** #include <stdio.h>
  11:../src/StateMachine.c **** 
  12:../src/StateMachine.c **** static int state = 0;
  13:../src/StateMachine.c **** extern uint8_t display_string[RX_BUF_LEN];
  14:../src/StateMachine.c **** extern uint8_t record[RX_BUF_LEN];
  15:../src/StateMachine.c **** extern uint8_t voltage, current1;
  16:../src/StateMachine.c **** extern uint8_t date[6];
  17:../src/StateMachine.c **** static uint8_t newDate[6];
  18:../src/StateMachine.c **** 
  19:../src/StateMachine.c **** //Recieve instruction, value from 1 to 7
  20:../src/StateMachine.c **** //1 = right button (accept/okay) (pin 2)
  21:../src/StateMachine.c **** //2 = middle button
  22:../src/StateMachine.c **** //3 = down button (pin 4)
  23:../src/StateMachine.c **** //4 = up button (pin 3)
  24:../src/StateMachine.c **** //5 = left button (back/cancel) (pin 5)
  25:../src/StateMachine.c **** //6 = switch to test mode
  26:../src/StateMachine.c **** //7 = switch to normal mode
  27:../src/StateMachine.c **** 
  28:../src/StateMachine.c **** void recieveInstruction(int instr) {
  66                             		.loc 1 28 0
  67                             		; start of function
  68                             		; push 4: r16 r18
  69                             		; locals: 12 bytes
  70                             		; outgoing: 16 bytes
  71 0000 61 EF                   		sel	rb2
  72 0002 C1                      		push	ax ; r16
  73                             	.LCFI0:
  74 0003 C3                      		push	bc ; r18
  75                             	.LCFI1:
  76 0004 61 CF                   		sel	rb0
  77 0006 20 1C                   		subw	sp, #28
  78                             	.LCFI2:
  29:../src/StateMachine.c **** 	switch (state) {
  79                             		.loc 1 29 0
  80 0008 AF 00 00                		movw	ax, !_state
  81 000b BD F0                   		movw	r8, ax
  82 000d 44 09 00                		cmpw	ax, #9
  83 0010 61 F8                   		 sknz
  84 0012 EC 2D 09 00             		 br	!!.L3
  85 0016 AD F0                   		movw	ax, r8
  86 0018 44 09 00                		cmpw	ax, #9
  87 001b 71 FF                   		 xor1	CY, a.7
  88 001d 61 F3                   		 sknh
  89 001f EC AE 00 00             		 br	!!.L4
  90 0023 AD F0                   		movw	ax, r8
  91 0025 44 04 00                		cmpw	ax, #4
  92 0028 61 F8                   		 sknz
  93 002a EC AF 02 00             		 br	!!.L5
  94 002e AD F0                   		movw	ax, r8
  95 0030 44 04 00                		cmpw	ax, #4
  96 0033 71 FF                   		 xor1	CY, a.7
  97 0035 61 F3                   		 sknh
  98 0037 EC 7C 00 00             		 br	!!.L6
  99 003b AD F0                   		movw	ax, r8
 100 003d 44 01 00                		cmpw	ax, #1
 101 0040 61 F8                   		 sknz
 102 0042 EC 69 01 00             		 br	!!.L7
 103 0046 AD F0                   		movw	ax, r8
 104 0048 44 01 00                		cmpw	ax, #1
 105 004b 71 FF                   		 xor1	CY, a.7
 106 004d 61 F3                   		 sknh
 107 004f EC 62 00 00             		 br	!!.L8
 108 0053 AD F0                   		movw	ax, r8
 109 0055 44 00 00                		cmpw	ax, #0
 110 0058 61 F8                   		 sknz
 111 005a EC 2A 01 00             		 br	!!.L9
 112 005e EC 71 09 00             		br	!!.L2
 113                             	.L8:
 114 0062 AD F0                   		movw	ax, r8
 115 0064 44 02 00                		cmpw	ax, #2
 116 0067 61 F8                   		 sknz
 117 0069 EC BD 01 00             		 br	!!.L10
 118 006d AD F0                   		movw	ax, r8
 119 006f 44 03 00                		cmpw	ax, #3
 120 0072 61 F8                   		 sknz
 121 0074 EC 36 02 00             		 br	!!.L11
 122 0078 EC 71 09 00             		br	!!.L2
 123                             	.L6:
 124 007c AD F0                   		movw	ax, r8
 125 007e 44 06 00                		cmpw	ax, #6
 126 0081 61 F8                   		 sknz
 127 0083 EC 46 08 00             		 br	!!.L12
 128 0087 AD F0                   		movw	ax, r8
 129 0089 44 06 00                		cmpw	ax, #6
 130 008c 71 FF                   		 xor1	CY, a.7
 131 008e 61 D8                   		 sknc
 132 0090 EC FF 07 00             		 br	!!.L13
 133 0094 AD F0                   		movw	ax, r8
 134 0096 44 07 00                		cmpw	ax, #7
 135 0099 61 F8                   		 sknz
 136 009b EC 93 08 00             		 br	!!.L14
 137 009f AD F0                   		movw	ax, r8
 138 00a1 44 08 00                		cmpw	ax, #8
 139 00a4 61 F8                   		 sknz
 140 00a6 EC E0 08 00             		 br	!!.L15
 141 00aa EC 71 09 00             		br	!!.L2
 142                             	.L4:
 143 00ae AD F0                   		movw	ax, r8
 144 00b0 44 0E 00                		cmpw	ax, #14
 145 00b3 61 F8                   		 sknz
 146 00b5 EC 25 05 00             		 br	!!.L16
 147 00b9 AD F0                   		movw	ax, r8
 148 00bb 44 0E 00                		cmpw	ax, #14
 149 00be 71 FF                   		 xor1	CY, a.7
 150 00c0 61 F3                   		 sknh
 151 00c2 EC F8 00 00             		 br	!!.L17
 152 00c6 AD F0                   		movw	ax, r8
 153 00c8 44 0B 00                		cmpw	ax, #11
 154 00cb 61 F8                   		 sknz
 155 00cd EC A1 03 00             		 br	!!.L18
 156 00d1 AD F0                   		movw	ax, r8
 157 00d3 44 0B 00                		cmpw	ax, #11
 158 00d6 71 FF                   		 xor1	CY, a.7
 159 00d8 61 D8                   		 sknc
 160 00da EC 28 03 00             		 br	!!.L19
 161 00de AD F0                   		movw	ax, r8
 162 00e0 44 0C 00                		cmpw	ax, #12
 163 00e3 61 F8                   		 sknz
 164 00e5 EC 1A 04 00             		 br	!!.L20
 165 00e9 AD F0                   		movw	ax, r8
 166 00eb 44 0D 00                		cmpw	ax, #13
 167 00ee 61 F8                   		 sknz
 168 00f0 EC 93 04 00             		 br	!!.L21
 169 00f4 EC 71 09 00             		br	!!.L2
 170                             	.L17:
 171 00f8 AD F0                   		movw	ax, r8
 172 00fa 44 10 00                		cmpw	ax, #16
 173 00fd 61 F8                   		 sknz
 174 00ff EC 49 06 00             		 br	!!.L22
 175 0103 AD F0                   		movw	ax, r8
 176 0105 44 10 00                		cmpw	ax, #16
 177 0108 71 FF                   		 xor1	CY, a.7
 178 010a 61 D8                   		 sknc
 179 010c EC B7 05 00             		 br	!!.L23
 180 0110 AD F0                   		movw	ax, r8
 181 0112 44 11 00                		cmpw	ax, #17
 182 0115 61 F8                   		 sknz
 183 0117 EC DB 06 00             		 br	!!.L24
 184 011b AD F0                   		movw	ax, r8
 185 011d 44 12 00                		cmpw	ax, #18
 186 0120 61 F8                   		 sknz
 187 0122 EC 6D 07 00             		 br	!!.L25
 188 0126 EC 71 09 00             		br	!!.L2
 189                             	.L9:
  30:../src/StateMachine.c **** 
  31:../src/StateMachine.c **** 	//---------------------------------------------------- normal mode
  32:../src/StateMachine.c **** 
  33:../src/StateMachine.c **** 	case 0:
  34:../src/StateMachine.c **** 		if (instr == 3)
 190                             		.loc 1 34 0
 191 012a A8 24                   		movw	ax, [sp+36]
 192 012c 44 03 00                		cmpw	ax, #3
 193 012f 61 E8                   		 skz
 194 0131 EC 3D 01 00             		 br	!!.L26
  35:../src/StateMachine.c **** 			state = 1;
 195                             		.loc 1 35 0
 196 0135 E6                      		onew	ax
 197 0136 BF 00 00                		movw	!_state, ax
 198 0139 EC 65 01 00             		br	!!.L27
 199                             	.L26:
  36:../src/StateMachine.c **** 		else if (instr == 4)
 200                             		.loc 1 36 0
 201 013d A8 24                   		movw	ax, [sp+36]
 202 013f 44 04 00                		cmpw	ax, #4
 203 0142 61 E8                   		 skz
 204 0144 EC 50 01 00             		 br	!!.L28
  37:../src/StateMachine.c **** 			state = 1;
 205                             		.loc 1 37 0
 206 0148 E6                      		onew	ax
 207 0149 BF 00 00                		movw	!_state, ax
 208 014c EC 65 01 00             		br	!!.L27
 209                             	.L28:
  38:../src/StateMachine.c **** 		else if (instr == 6)
 210                             		.loc 1 38 0
 211 0150 A8 24                   		movw	ax, [sp+36]
 212 0152 44 06 00                		cmpw	ax, #6
 213 0155 61 E8                   		 skz
 214 0157 EC 65 01 00             		 br	!!.L27
  39:../src/StateMachine.c **** 			state = 5;
 215                             		.loc 1 39 0
 216 015b 30 05 00                		movw	ax, #5
 217 015e BF 00 00                		movw	!_state, ax
  40:../src/StateMachine.c **** 		break;
 218                             		.loc 1 40 0
 219 0161 EC 71 09 00             		br	!!.L2
 220                             	.L27:
 221 0165 EC 71 09 00             		br	!!.L2
 222                             	.L7:
  41:../src/StateMachine.c **** 	case 1:
  42:../src/StateMachine.c **** 		if (instr == 3)
 223                             		.loc 1 42 0
 224 0169 A8 24                   		movw	ax, [sp+36]
 225 016b 44 03 00                		cmpw	ax, #3
 226 016e 61 E8                   		 skz
 227 0170 EC 7C 01 00             		 br	!!.L29
  43:../src/StateMachine.c **** 			state = 0;
 228                             		.loc 1 43 0
 229 0174 F6                      		clrw	ax
 230 0175 BF 00 00                		movw	!_state, ax
 231 0178 EC B9 01 00             		br	!!.L30
 232                             	.L29:
  44:../src/StateMachine.c **** 		else if (instr == 4)
 233                             		.loc 1 44 0
 234 017c A8 24                   		movw	ax, [sp+36]
 235 017e 44 04 00                		cmpw	ax, #4
 236 0181 61 E8                   		 skz
 237 0183 EC 8F 01 00             		 br	!!.L31
  45:../src/StateMachine.c **** 			state = 0;
 238                             		.loc 1 45 0
 239 0187 F6                      		clrw	ax
 240 0188 BF 00 00                		movw	!_state, ax
 241 018b EC B9 01 00             		br	!!.L30
 242                             	.L31:
  46:../src/StateMachine.c **** 		else if (instr == 1) {
 243                             		.loc 1 46 0
 244 018f A8 24                   		movw	ax, [sp+36]
 245 0191 44 01 00                		cmpw	ax, #1
 246 0194 61 E8                   		 skz
 247 0196 EC A4 01 00             		 br	!!.L32
  47:../src/StateMachine.c **** 			state = 2;
 248                             		.loc 1 47 0
 249 019a 30 02 00                		movw	ax, #2
 250 019d BF 00 00                		movw	!_state, ax
 251 01a0 EC B9 01 00             		br	!!.L30
 252                             	.L32:
  48:../src/StateMachine.c **** 		}
  49:../src/StateMachine.c **** 
  50:../src/StateMachine.c **** 		else if (instr == 6)
 253                             		.loc 1 50 0
 254 01a4 A8 24                   		movw	ax, [sp+36]
 255 01a6 44 06 00                		cmpw	ax, #6
 256 01a9 61 E8                   		 skz
 257 01ab EC B9 01 00             		 br	!!.L30
  51:../src/StateMachine.c **** 			state = 5;
 258                             		.loc 1 51 0
 259 01af 30 05 00                		movw	ax, #5
 260 01b2 BF 00 00                		movw	!_state, ax
  52:../src/StateMachine.c **** 		break;
 261                             		.loc 1 52 0
 262 01b5 EC 71 09 00             		br	!!.L2
 263                             	.L30:
 264 01b9 EC 71 09 00             		br	!!.L2
 265                             	.L10:
  53:../src/StateMachine.c **** 	case 2:
  54:../src/StateMachine.c **** 		if (instr == 1) {
 266                             		.loc 1 54 0
 267 01bd A8 24                   		movw	ax, [sp+36]
 268 01bf 44 01 00                		cmpw	ax, #1
 269 01c2 61 E8                   		 skz
 270 01c4 EC E0 01 00             		 br	!!.L33
  55:../src/StateMachine.c **** 			state = 13;
 271                             		.loc 1 55 0
 272 01c8 30 0D 00                		movw	ax, #13
 273 01cb BF 00 00                		movw	!_state, ax
  56:../src/StateMachine.c **** 			strcpy(newDate, date);
 274                             		.loc 1 56 0
 275 01ce 30 02 00                		movw	ax, #_newDate
 276 01d1 B8 00                   		movw	[sp], ax
 277 01d3 30 00 00                		movw	ax, #_date
 278 01d6 B8 02                   		movw	[sp+2], ax
 279 01d8 FC 00 00 00             		call	!!%code(_strcpy)
 280 01dc EC 32 02 00             		br	!!.L34
 281                             	.L33:
  57:../src/StateMachine.c **** 		} else if (instr == 4) {
 282                             		.loc 1 57 0
 283 01e0 A8 24                   		movw	ax, [sp+36]
 284 01e2 44 04 00                		cmpw	ax, #4
 285 01e5 61 E8                   		 skz
 286 01e7 EC F5 01 00             		 br	!!.L35
  58:../src/StateMachine.c **** 			state = 12;
 287                             		.loc 1 58 0
 288 01eb 30 0C 00                		movw	ax, #12
 289 01ee BF 00 00                		movw	!_state, ax
 290 01f1 EC 32 02 00             		br	!!.L34
 291                             	.L35:
  59:../src/StateMachine.c **** 		} else if (instr == 3) {
 292                             		.loc 1 59 0
 293 01f5 A8 24                   		movw	ax, [sp+36]
 294 01f7 44 03 00                		cmpw	ax, #3
 295 01fa 61 E8                   		 skz
 296 01fc EC 0A 02 00             		 br	!!.L36
  60:../src/StateMachine.c **** 			state = 3;
 297                             		.loc 1 60 0
 298 0200 30 03 00                		movw	ax, #3
 299 0203 BF 00 00                		movw	!_state, ax
 300 0206 EC 32 02 00             		br	!!.L34
 301                             	.L36:
  61:../src/StateMachine.c **** 		} else if (instr == 5) {
 302                             		.loc 1 61 0
 303 020a A8 24                   		movw	ax, [sp+36]
 304 020c 44 05 00                		cmpw	ax, #5
 305 020f 61 E8                   		 skz
 306 0211 EC 1D 02 00             		 br	!!.L37
  62:../src/StateMachine.c **** 			state = 1;
 307                             		.loc 1 62 0
 308 0215 E6                      		onew	ax
 309 0216 BF 00 00                		movw	!_state, ax
 310 0219 EC 32 02 00             		br	!!.L34
 311                             	.L37:
  63:../src/StateMachine.c **** 		} else if (instr == 6) {
 312                             		.loc 1 63 0
 313 021d A8 24                   		movw	ax, [sp+36]
 314 021f 44 06 00                		cmpw	ax, #6
 315 0222 61 E8                   		 skz
 316 0224 EC 32 02 00             		 br	!!.L34
  64:../src/StateMachine.c **** 			state = 5;
 317                             		.loc 1 64 0
 318 0228 30 05 00                		movw	ax, #5
 319 022b BF 00 00                		movw	!_state, ax
  65:../src/StateMachine.c **** 		}
  66:../src/StateMachine.c **** 		break;
 320                             		.loc 1 66 0
 321 022e EC 71 09 00             		br	!!.L2
 322                             	.L34:
 323 0232 EC 71 09 00             		br	!!.L2
 324                             	.L11:
  67:../src/StateMachine.c **** 	case 3:
  68:../src/StateMachine.c **** 		if (instr == 1) {
 325                             		.loc 1 68 0
 326 0236 A8 24                   		movw	ax, [sp+36]
 327 0238 44 01 00                		cmpw	ax, #1
 328 023b 61 E8                   		 skz
 329 023d EC 59 02 00             		 br	!!.L38
  69:../src/StateMachine.c **** 			state = 14;
 330                             		.loc 1 69 0
 331 0241 30 0E 00                		movw	ax, #14
 332 0244 BF 00 00                		movw	!_state, ax
  70:../src/StateMachine.c **** 			strcpy(newDate, date);
 333                             		.loc 1 70 0
 334 0247 30 02 00                		movw	ax, #_newDate
 335 024a B8 00                   		movw	[sp], ax
 336 024c 30 00 00                		movw	ax, #_date
 337 024f B8 02                   		movw	[sp+2], ax
 338 0251 FC 00 00 00             		call	!!%code(_strcpy)
 339 0255 EC AB 02 00             		br	!!.L39
 340                             	.L38:
  71:../src/StateMachine.c **** 		} else if (instr == 4) {
 341                             		.loc 1 71 0
 342 0259 A8 24                   		movw	ax, [sp+36]
 343 025b 44 04 00                		cmpw	ax, #4
 344 025e 61 E8                   		 skz
 345 0260 EC 6E 02 00             		 br	!!.L40
  72:../src/StateMachine.c **** 			state = 2;
 346                             		.loc 1 72 0
 347 0264 30 02 00                		movw	ax, #2
 348 0267 BF 00 00                		movw	!_state, ax
 349 026a EC AB 02 00             		br	!!.L39
 350                             	.L40:
  73:../src/StateMachine.c **** 		} else if (instr == 3) {
 351                             		.loc 1 73 0
 352 026e A8 24                   		movw	ax, [sp+36]
 353 0270 44 03 00                		cmpw	ax, #3
 354 0273 61 E8                   		 skz
 355 0275 EC 83 02 00             		 br	!!.L41
  74:../src/StateMachine.c **** 			state = 4;
 356                             		.loc 1 74 0
 357 0279 30 04 00                		movw	ax, #4
 358 027c BF 00 00                		movw	!_state, ax
 359 027f EC AB 02 00             		br	!!.L39
 360                             	.L41:
  75:../src/StateMachine.c **** 		} else if (instr == 5) {
 361                             		.loc 1 75 0
 362 0283 A8 24                   		movw	ax, [sp+36]
 363 0285 44 05 00                		cmpw	ax, #5
 364 0288 61 E8                   		 skz
 365 028a EC 96 02 00             		 br	!!.L42
  76:../src/StateMachine.c **** 			state = 1;
 366                             		.loc 1 76 0
 367 028e E6                      		onew	ax
 368 028f BF 00 00                		movw	!_state, ax
 369 0292 EC AB 02 00             		br	!!.L39
 370                             	.L42:
  77:../src/StateMachine.c **** 		} else if (instr == 6) {
 371                             		.loc 1 77 0
 372 0296 A8 24                   		movw	ax, [sp+36]
 373 0298 44 06 00                		cmpw	ax, #6
 374 029b 61 E8                   		 skz
 375 029d EC AB 02 00             		 br	!!.L39
  78:../src/StateMachine.c **** 			state = 5;
 376                             		.loc 1 78 0
 377 02a1 30 05 00                		movw	ax, #5
 378 02a4 BF 00 00                		movw	!_state, ax
  79:../src/StateMachine.c **** 		}
  80:../src/StateMachine.c **** 		break;
 379                             		.loc 1 80 0
 380 02a7 EC 71 09 00             		br	!!.L2
 381                             	.L39:
 382 02ab EC 71 09 00             		br	!!.L2
 383                             	.L5:
  81:../src/StateMachine.c **** 	case 4:
  82:../src/StateMachine.c **** 		if (instr == 1) {
 384                             		.loc 1 82 0
 385 02af A8 24                   		movw	ax, [sp+36]
 386 02b1 44 01 00                		cmpw	ax, #1
 387 02b4 61 E8                   		 skz
 388 02b6 EC D2 02 00             		 br	!!.L43
  83:../src/StateMachine.c **** 			state = 15;
 389                             		.loc 1 83 0
 390 02ba 30 0F 00                		movw	ax, #15
 391 02bd BF 00 00                		movw	!_state, ax
  84:../src/StateMachine.c **** 			strcpy(newDate, date);
 392                             		.loc 1 84 0
 393 02c0 30 02 00                		movw	ax, #_newDate
 394 02c3 B8 00                   		movw	[sp], ax
 395 02c5 30 00 00                		movw	ax, #_date
 396 02c8 B8 02                   		movw	[sp+2], ax
 397 02ca FC 00 00 00             		call	!!%code(_strcpy)
 398 02ce EC 24 03 00             		br	!!.L44
 399                             	.L43:
  85:../src/StateMachine.c **** 		} else if (instr == 4) {
 400                             		.loc 1 85 0
 401 02d2 A8 24                   		movw	ax, [sp+36]
 402 02d4 44 04 00                		cmpw	ax, #4
 403 02d7 61 E8                   		 skz
 404 02d9 EC E7 02 00             		 br	!!.L45
  86:../src/StateMachine.c **** 			state = 3;
 405                             		.loc 1 86 0
 406 02dd 30 03 00                		movw	ax, #3
 407 02e0 BF 00 00                		movw	!_state, ax
 408 02e3 EC 24 03 00             		br	!!.L44
 409                             	.L45:
  87:../src/StateMachine.c **** 		} else if (instr == 3) {
 410                             		.loc 1 87 0
 411 02e7 A8 24                   		movw	ax, [sp+36]
 412 02e9 44 03 00                		cmpw	ax, #3
 413 02ec 61 E8                   		 skz
 414 02ee EC FC 02 00             		 br	!!.L46
  88:../src/StateMachine.c **** 			state = 10;
 415                             		.loc 1 88 0
 416 02f2 30 0A 00                		movw	ax, #10
 417 02f5 BF 00 00                		movw	!_state, ax
 418 02f8 EC 24 03 00             		br	!!.L44
 419                             	.L46:
  89:../src/StateMachine.c **** 		} else if (instr == 5) {
 420                             		.loc 1 89 0
 421 02fc A8 24                   		movw	ax, [sp+36]
 422 02fe 44 05 00                		cmpw	ax, #5
 423 0301 61 E8                   		 skz
 424 0303 EC 0F 03 00             		 br	!!.L47
  90:../src/StateMachine.c **** 			state = 1;
 425                             		.loc 1 90 0
 426 0307 E6                      		onew	ax
 427 0308 BF 00 00                		movw	!_state, ax
 428 030b EC 24 03 00             		br	!!.L44
 429                             	.L47:
  91:../src/StateMachine.c **** 		} else if (instr == 6) {
 430                             		.loc 1 91 0
 431 030f A8 24                   		movw	ax, [sp+36]
 432 0311 44 06 00                		cmpw	ax, #6
 433 0314 61 E8                   		 skz
 434 0316 EC 24 03 00             		 br	!!.L44
  92:../src/StateMachine.c **** 			state = 5;
 435                             		.loc 1 92 0
 436 031a 30 05 00                		movw	ax, #5
 437 031d BF 00 00                		movw	!_state, ax
  93:../src/StateMachine.c **** 		}
  94:../src/StateMachine.c **** 		break;
 438                             		.loc 1 94 0
 439 0320 EC 71 09 00             		br	!!.L2
 440                             	.L44:
 441 0324 EC 71 09 00             		br	!!.L2
 442                             	.L19:
  95:../src/StateMachine.c **** 	case 10:
  96:../src/StateMachine.c **** 		if (instr == 1) {
 443                             		.loc 1 96 0
 444 0328 A8 24                   		movw	ax, [sp+36]
 445 032a 44 01 00                		cmpw	ax, #1
 446 032d 61 E8                   		 skz
 447 032f EC 4B 03 00             		 br	!!.L48
  97:../src/StateMachine.c **** 			state = 16;
 448                             		.loc 1 97 0
 449 0333 30 10 00                		movw	ax, #16
 450 0336 BF 00 00                		movw	!_state, ax
  98:../src/StateMachine.c **** 			strcpy(newDate, date);
 451                             		.loc 1 98 0
 452 0339 30 02 00                		movw	ax, #_newDate
 453 033c B8 00                   		movw	[sp], ax
 454 033e 30 00 00                		movw	ax, #_date
 455 0341 B8 02                   		movw	[sp+2], ax
 456 0343 FC 00 00 00             		call	!!%code(_strcpy)
 457 0347 EC 9D 03 00             		br	!!.L49
 458                             	.L48:
  99:../src/StateMachine.c **** 		} else if (instr == 4) {
 459                             		.loc 1 99 0
 460 034b A8 24                   		movw	ax, [sp+36]
 461 034d 44 04 00                		cmpw	ax, #4
 462 0350 61 E8                   		 skz
 463 0352 EC 60 03 00             		 br	!!.L50
 100:../src/StateMachine.c **** 			state = 4;
 464                             		.loc 1 100 0
 465 0356 30 04 00                		movw	ax, #4
 466 0359 BF 00 00                		movw	!_state, ax
 467 035c EC 9D 03 00             		br	!!.L49
 468                             	.L50:
 101:../src/StateMachine.c **** 		} else if (instr == 3) {
 469                             		.loc 1 101 0
 470 0360 A8 24                   		movw	ax, [sp+36]
 471 0362 44 03 00                		cmpw	ax, #3
 472 0365 61 E8                   		 skz
 473 0367 EC 75 03 00             		 br	!!.L51
 102:../src/StateMachine.c **** 			state = 11;
 474                             		.loc 1 102 0
 475 036b 30 0B 00                		movw	ax, #11
 476 036e BF 00 00                		movw	!_state, ax
 477 0371 EC 9D 03 00             		br	!!.L49
 478                             	.L51:
 103:../src/StateMachine.c **** 		} else if (instr == 5) {
 479                             		.loc 1 103 0
 480 0375 A8 24                   		movw	ax, [sp+36]
 481 0377 44 05 00                		cmpw	ax, #5
 482 037a 61 E8                   		 skz
 483 037c EC 88 03 00             		 br	!!.L52
 104:../src/StateMachine.c **** 			state = 1;
 484                             		.loc 1 104 0
 485 0380 E6                      		onew	ax
 486 0381 BF 00 00                		movw	!_state, ax
 487 0384 EC 9D 03 00             		br	!!.L49
 488                             	.L52:
 105:../src/StateMachine.c **** 		} else if (instr == 6) {
 489                             		.loc 1 105 0
 490 0388 A8 24                   		movw	ax, [sp+36]
 491 038a 44 06 00                		cmpw	ax, #6
 492 038d 61 E8                   		 skz
 493 038f EC 9D 03 00             		 br	!!.L49
 106:../src/StateMachine.c **** 			state = 5;
 494                             		.loc 1 106 0
 495 0393 30 05 00                		movw	ax, #5
 496 0396 BF 00 00                		movw	!_state, ax
 107:../src/StateMachine.c **** 		}
 108:../src/StateMachine.c **** 		break;
 497                             		.loc 1 108 0
 498 0399 EC 71 09 00             		br	!!.L2
 499                             	.L49:
 500 039d EC 71 09 00             		br	!!.L2
 501                             	.L18:
 109:../src/StateMachine.c **** 	case 11:
 110:../src/StateMachine.c **** 		if (instr == 1) {
 502                             		.loc 1 110 0
 503 03a1 A8 24                   		movw	ax, [sp+36]
 504 03a3 44 01 00                		cmpw	ax, #1
 505 03a6 61 E8                   		 skz
 506 03a8 EC C4 03 00             		 br	!!.L53
 111:../src/StateMachine.c **** 			state = 17;
 507                             		.loc 1 111 0
 508 03ac 30 11 00                		movw	ax, #17
 509 03af BF 00 00                		movw	!_state, ax
 112:../src/StateMachine.c **** 			strcpy(newDate, date);
 510                             		.loc 1 112 0
 511 03b2 30 02 00                		movw	ax, #_newDate
 512 03b5 B8 00                   		movw	[sp], ax
 513 03b7 30 00 00                		movw	ax, #_date
 514 03ba B8 02                   		movw	[sp+2], ax
 515 03bc FC 00 00 00             		call	!!%code(_strcpy)
 516 03c0 EC 16 04 00             		br	!!.L54
 517                             	.L53:
 113:../src/StateMachine.c **** 		} else if (instr == 4) {
 518                             		.loc 1 113 0
 519 03c4 A8 24                   		movw	ax, [sp+36]
 520 03c6 44 04 00                		cmpw	ax, #4
 521 03c9 61 E8                   		 skz
 522 03cb EC D9 03 00             		 br	!!.L55
 114:../src/StateMachine.c **** 			state = 10;
 523                             		.loc 1 114 0
 524 03cf 30 0A 00                		movw	ax, #10
 525 03d2 BF 00 00                		movw	!_state, ax
 526 03d5 EC 16 04 00             		br	!!.L54
 527                             	.L55:
 115:../src/StateMachine.c **** 		} else if (instr == 3) {
 528                             		.loc 1 115 0
 529 03d9 A8 24                   		movw	ax, [sp+36]
 530 03db 44 03 00                		cmpw	ax, #3
 531 03de 61 E8                   		 skz
 532 03e0 EC EE 03 00             		 br	!!.L56
 116:../src/StateMachine.c **** 			state = 12;
 533                             		.loc 1 116 0
 534 03e4 30 0C 00                		movw	ax, #12
 535 03e7 BF 00 00                		movw	!_state, ax
 536 03ea EC 16 04 00             		br	!!.L54
 537                             	.L56:
 117:../src/StateMachine.c **** 		} else if (instr == 5) {
 538                             		.loc 1 117 0
 539 03ee A8 24                   		movw	ax, [sp+36]
 540 03f0 44 05 00                		cmpw	ax, #5
 541 03f3 61 E8                   		 skz
 542 03f5 EC 01 04 00             		 br	!!.L57
 118:../src/StateMachine.c **** 			state = 1;
 543                             		.loc 1 118 0
 544 03f9 E6                      		onew	ax
 545 03fa BF 00 00                		movw	!_state, ax
 546 03fd EC 16 04 00             		br	!!.L54
 547                             	.L57:
 119:../src/StateMachine.c **** 		} else if (instr == 6) {
 548                             		.loc 1 119 0
 549 0401 A8 24                   		movw	ax, [sp+36]
 550 0403 44 06 00                		cmpw	ax, #6
 551 0406 61 E8                   		 skz
 552 0408 EC 16 04 00             		 br	!!.L54
 120:../src/StateMachine.c **** 			state = 5;
 553                             		.loc 1 120 0
 554 040c 30 05 00                		movw	ax, #5
 555 040f BF 00 00                		movw	!_state, ax
 121:../src/StateMachine.c **** 		}
 122:../src/StateMachine.c **** 		break;
 556                             		.loc 1 122 0
 557 0412 EC 71 09 00             		br	!!.L2
 558                             	.L54:
 559 0416 EC 71 09 00             		br	!!.L2
 560                             	.L20:
 123:../src/StateMachine.c **** 	case 12:
 124:../src/StateMachine.c **** 		if (instr == 1) {
 561                             		.loc 1 124 0
 562 041a A8 24                   		movw	ax, [sp+36]
 563 041c 44 01 00                		cmpw	ax, #1
 564 041f 61 E8                   		 skz
 565 0421 EC 3D 04 00             		 br	!!.L58
 125:../src/StateMachine.c **** 			state = 18;
 566                             		.loc 1 125 0
 567 0425 30 12 00                		movw	ax, #18
 568 0428 BF 00 00                		movw	!_state, ax
 126:../src/StateMachine.c **** 			strcpy(newDate, date);
 569                             		.loc 1 126 0
 570 042b 30 02 00                		movw	ax, #_newDate
 571 042e B8 00                   		movw	[sp], ax
 572 0430 30 00 00                		movw	ax, #_date
 573 0433 B8 02                   		movw	[sp+2], ax
 574 0435 FC 00 00 00             		call	!!%code(_strcpy)
 575 0439 EC 8F 04 00             		br	!!.L59
 576                             	.L58:
 127:../src/StateMachine.c **** 		} else if (instr == 4) {
 577                             		.loc 1 127 0
 578 043d A8 24                   		movw	ax, [sp+36]
 579 043f 44 04 00                		cmpw	ax, #4
 580 0442 61 E8                   		 skz
 581 0444 EC 52 04 00             		 br	!!.L60
 128:../src/StateMachine.c **** 			state = 11;
 582                             		.loc 1 128 0
 583 0448 30 0B 00                		movw	ax, #11
 584 044b BF 00 00                		movw	!_state, ax
 585 044e EC 8F 04 00             		br	!!.L59
 586                             	.L60:
 129:../src/StateMachine.c **** 		} else if (instr == 3) {
 587                             		.loc 1 129 0
 588 0452 A8 24                   		movw	ax, [sp+36]
 589 0454 44 03 00                		cmpw	ax, #3
 590 0457 61 E8                   		 skz
 591 0459 EC 67 04 00             		 br	!!.L61
 130:../src/StateMachine.c **** 			state = 2;
 592                             		.loc 1 130 0
 593 045d 30 02 00                		movw	ax, #2
 594 0460 BF 00 00                		movw	!_state, ax
 595 0463 EC 8F 04 00             		br	!!.L59
 596                             	.L61:
 131:../src/StateMachine.c **** 		} else if (instr == 5) {
 597                             		.loc 1 131 0
 598 0467 A8 24                   		movw	ax, [sp+36]
 599 0469 44 05 00                		cmpw	ax, #5
 600 046c 61 E8                   		 skz
 601 046e EC 7A 04 00             		 br	!!.L62
 132:../src/StateMachine.c **** 			state = 1;
 602                             		.loc 1 132 0
 603 0472 E6                      		onew	ax
 604 0473 BF 00 00                		movw	!_state, ax
 605 0476 EC 8F 04 00             		br	!!.L59
 606                             	.L62:
 133:../src/StateMachine.c **** 		} else if (instr == 6) {
 607                             		.loc 1 133 0
 608 047a A8 24                   		movw	ax, [sp+36]
 609 047c 44 06 00                		cmpw	ax, #6
 610 047f 61 E8                   		 skz
 611 0481 EC 8F 04 00             		 br	!!.L59
 134:../src/StateMachine.c **** 			state = 5;
 612                             		.loc 1 134 0
 613 0485 30 05 00                		movw	ax, #5
 614 0488 BF 00 00                		movw	!_state, ax
 135:../src/StateMachine.c **** 		}
 136:../src/StateMachine.c **** 		break;
 615                             		.loc 1 136 0
 616 048b EC 71 09 00             		br	!!.L2
 617                             	.L59:
 618 048f EC 71 09 00             		br	!!.L2
 619                             	.L21:
 137:../src/StateMachine.c **** 	case 13:
 138:../src/StateMachine.c **** 		if (instr == 1) { //accept command
 620                             		.loc 1 138 0
 621 0493 A8 24                   		movw	ax, [sp+36]
 622 0495 44 01 00                		cmpw	ax, #1
 623 0498 61 E8                   		 skz
 624 049a EC 0C 05 00             		 br	!!.L63
 625                             	.LBB2:
 139:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 626                             		.loc 1 139 0
 627 049e 8F 02 00                		mov	a, !_newDate
 628 04a1 9D F0                   		mov	r8, a
 629 04a3 70                      		mov	x, a 
 630 04a4 51 00                   		mov	a, #0
 631 04a6 BD EA                   		movw	r18, ax
 140:../src/StateMachine.c **** 					newDate[1], newDate[2], newDate[3], newDate[4], newDate[5]);
 632                             		.loc 1 140 0
 633 04a8 8F 03 00                		mov	a, !_newDate+1
 634 04ab 9D F0                   		mov	r8, a
 139:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 635                             		.loc 1 139 0
 636 04ad 70                      		mov	x, a 
 637 04ae 51 00                   		mov	a, #0
 638 04b0 BD E8                   		movw	r16, ax
 639                             		.loc 1 140 0
 640 04b2 8F 04 00                		mov	a, !_newDate+2
 641 04b5 9D F0                   		mov	r8, a
 139:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 642                             		.loc 1 139 0
 643 04b7 70                      		mov	x, a 
 644 04b8 51 00                   		mov	a, #0
 645 04ba BD F6                   		movw	r14, ax
 646                             		.loc 1 140 0
 647 04bc 8F 05 00                		mov	a, !_newDate+3
 648 04bf 9D F0                   		mov	r8, a
 139:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 649                             		.loc 1 139 0
 650 04c1 70                      		mov	x, a 
 651 04c2 51 00                   		mov	a, #0
 652 04c4 BD F4                   		movw	r12, ax
 653                             		.loc 1 140 0
 654 04c6 8F 06 00                		mov	a, !_newDate+4
 655 04c9 9D F0                   		mov	r8, a
 139:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 656                             		.loc 1 139 0
 657 04cb 70                      		mov	x, a 
 658 04cc 51 00                   		mov	a, #0
 659 04ce BD F2                   		movw	r10, ax
 660                             		.loc 1 140 0
 661 04d0 8F 07 00                		mov	a, !_newDate+5
 662 04d3 9D F0                   		mov	r8, a
 139:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 663                             		.loc 1 139 0
 664 04d5 CD F1 00                		mov	r9, #0
 665 04d8 30 00 00                		movw	ax, #_record
 666 04db B8 00                   		movw	[sp], ax
 667 04dd 30 00 00                		movw	ax, #.LC0
 668 04e0 B8 02                   		movw	[sp+2], ax
 669 04e2 AD EA                   		movw	ax, r18
 670 04e4 B8 04                   		movw	[sp+4], ax
 671 04e6 AD E8                   		movw	ax, r16
 672 04e8 B8 06                   		movw	[sp+6], ax
 673 04ea AD F6                   		movw	ax, r14
 674 04ec B8 08                   		movw	[sp+8], ax
 675 04ee AD F4                   		movw	ax, r12
 676 04f0 B8 0A                   		movw	[sp+10], ax
 677 04f2 AD F2                   		movw	ax, r10
 678 04f4 B8 0C                   		movw	[sp+12], ax
 679 04f6 AD F0                   		movw	ax, r8
 680 04f8 B8 0E                   		movw	[sp+14], ax
 681 04fa FC 00 00 00             		call	!!%code(_sprintf)
 141:../src/StateMachine.c **** 			setRTC();
 682                             		.loc 1 141 0
 683 04fe FC 00 00 00             		call	!!%code(_setRTC)
 142:../src/StateMachine.c **** 			state = 2;
 684                             		.loc 1 142 0
 685 0502 30 02 00                		movw	ax, #2
 686 0505 BF 00 00                		movw	!_state, ax
 687                             	.LBE2:
 688 0508 EC 21 05 00             		br	!!.L64
 689                             	.L63:
 143:../src/StateMachine.c **** 		} else if (instr == 5) {
 690                             		.loc 1 143 0
 691 050c A8 24                   		movw	ax, [sp+36]
 692 050e 44 05 00                		cmpw	ax, #5
 693 0511 61 E8                   		 skz
 694 0513 EC 21 05 00             		 br	!!.L64
 144:../src/StateMachine.c **** 			state = 2;
 695                             		.loc 1 144 0
 696 0517 30 02 00                		movw	ax, #2
 697 051a BF 00 00                		movw	!_state, ax
 145:../src/StateMachine.c **** 		}
 146:../src/StateMachine.c **** 		break;
 698                             		.loc 1 146 0
 699 051d EC 71 09 00             		br	!!.L2
 700                             	.L64:
 701 0521 EC 71 09 00             		br	!!.L2
 702                             	.L16:
 147:../src/StateMachine.c **** 	case 14:
 148:../src/StateMachine.c **** 		if (instr == 1) { //accept command
 703                             		.loc 1 148 0
 704 0525 A8 24                   		movw	ax, [sp+36]
 705 0527 44 01 00                		cmpw	ax, #1
 706 052a 61 E8                   		 skz
 707 052c EC 9E 05 00             		 br	!!.L65
 708                             	.LBB3:
 149:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 709                             		.loc 1 149 0
 710 0530 8F 02 00                		mov	a, !_newDate
 711 0533 9D F0                   		mov	r8, a
 712 0535 70                      		mov	x, a 
 713 0536 51 00                   		mov	a, #0
 714 0538 BD EA                   		movw	r18, ax
 150:../src/StateMachine.c **** 					newDate[1], newDate[2], newDate[3], newDate[4], newDate[5]);
 715                             		.loc 1 150 0
 716 053a 8F 03 00                		mov	a, !_newDate+1
 717 053d 9D F0                   		mov	r8, a
 149:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 718                             		.loc 1 149 0
 719 053f 70                      		mov	x, a 
 720 0540 51 00                   		mov	a, #0
 721 0542 BD E8                   		movw	r16, ax
 722                             		.loc 1 150 0
 723 0544 8F 04 00                		mov	a, !_newDate+2
 724 0547 9D F0                   		mov	r8, a
 149:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 725                             		.loc 1 149 0
 726 0549 70                      		mov	x, a 
 727 054a 51 00                   		mov	a, #0
 728 054c BD F6                   		movw	r14, ax
 729                             		.loc 1 150 0
 730 054e 8F 05 00                		mov	a, !_newDate+3
 731 0551 9D F0                   		mov	r8, a
 149:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 732                             		.loc 1 149 0
 733 0553 70                      		mov	x, a 
 734 0554 51 00                   		mov	a, #0
 735 0556 BD F4                   		movw	r12, ax
 736                             		.loc 1 150 0
 737 0558 8F 06 00                		mov	a, !_newDate+4
 738 055b 9D F0                   		mov	r8, a
 149:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 739                             		.loc 1 149 0
 740 055d 70                      		mov	x, a 
 741 055e 51 00                   		mov	a, #0
 742 0560 BD F2                   		movw	r10, ax
 743                             		.loc 1 150 0
 744 0562 8F 07 00                		mov	a, !_newDate+5
 745 0565 9D F0                   		mov	r8, a
 149:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 746                             		.loc 1 149 0
 747 0567 CD F1 00                		mov	r9, #0
 748 056a 30 00 00                		movw	ax, #_record
 749 056d B8 00                   		movw	[sp], ax
 750 056f 30 00 00                		movw	ax, #.LC0
 751 0572 B8 02                   		movw	[sp+2], ax
 752 0574 AD EA                   		movw	ax, r18
 753 0576 B8 04                   		movw	[sp+4], ax
 754 0578 AD E8                   		movw	ax, r16
 755 057a B8 06                   		movw	[sp+6], ax
 756 057c AD F6                   		movw	ax, r14
 757 057e B8 08                   		movw	[sp+8], ax
 758 0580 AD F4                   		movw	ax, r12
 759 0582 B8 0A                   		movw	[sp+10], ax
 760 0584 AD F2                   		movw	ax, r10
 761 0586 B8 0C                   		movw	[sp+12], ax
 762 0588 AD F0                   		movw	ax, r8
 763 058a B8 0E                   		movw	[sp+14], ax
 764 058c FC 00 00 00             		call	!!%code(_sprintf)
 151:../src/StateMachine.c **** 			setRTC();
 765                             		.loc 1 151 0
 766 0590 FC 00 00 00             		call	!!%code(_setRTC)
 152:../src/StateMachine.c **** 			state = 3;
 767                             		.loc 1 152 0
 768 0594 30 03 00                		movw	ax, #3
 769 0597 BF 00 00                		movw	!_state, ax
 770                             	.LBE3:
 771 059a EC B3 05 00             		br	!!.L66
 772                             	.L65:
 153:../src/StateMachine.c **** 		} else if (instr == 5) {
 773                             		.loc 1 153 0
 774 059e A8 24                   		movw	ax, [sp+36]
 775 05a0 44 05 00                		cmpw	ax, #5
 776 05a3 61 E8                   		 skz
 777 05a5 EC B3 05 00             		 br	!!.L66
 154:../src/StateMachine.c **** 			state = 3;
 778                             		.loc 1 154 0
 779 05a9 30 03 00                		movw	ax, #3
 780 05ac BF 00 00                		movw	!_state, ax
 155:../src/StateMachine.c **** 		}
 156:../src/StateMachine.c **** 		break;
 781                             		.loc 1 156 0
 782 05af EC 71 09 00             		br	!!.L2
 783                             	.L66:
 784 05b3 EC 71 09 00             		br	!!.L2
 785                             	.L23:
 157:../src/StateMachine.c **** 	case 15:
 158:../src/StateMachine.c **** 		if (instr == 1) { //accept command
 786                             		.loc 1 158 0
 787 05b7 A8 24                   		movw	ax, [sp+36]
 788 05b9 44 01 00                		cmpw	ax, #1
 789 05bc 61 E8                   		 skz
 790 05be EC 30 06 00             		 br	!!.L67
 791                             	.LBB4:
 159:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 792                             		.loc 1 159 0
 793 05c2 8F 02 00                		mov	a, !_newDate
 794 05c5 9D F0                   		mov	r8, a
 795 05c7 70                      		mov	x, a 
 796 05c8 51 00                   		mov	a, #0
 797 05ca BD EA                   		movw	r18, ax
 160:../src/StateMachine.c **** 					newDate[1], newDate[2], newDate[3], newDate[4], newDate[5]);
 798                             		.loc 1 160 0
 799 05cc 8F 03 00                		mov	a, !_newDate+1
 800 05cf 9D F0                   		mov	r8, a
 159:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 801                             		.loc 1 159 0
 802 05d1 70                      		mov	x, a 
 803 05d2 51 00                   		mov	a, #0
 804 05d4 BD E8                   		movw	r16, ax
 805                             		.loc 1 160 0
 806 05d6 8F 04 00                		mov	a, !_newDate+2
 807 05d9 9D F0                   		mov	r8, a
 159:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 808                             		.loc 1 159 0
 809 05db 70                      		mov	x, a 
 810 05dc 51 00                   		mov	a, #0
 811 05de BD F6                   		movw	r14, ax
 812                             		.loc 1 160 0
 813 05e0 8F 05 00                		mov	a, !_newDate+3
 814 05e3 9D F0                   		mov	r8, a
 159:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 815                             		.loc 1 159 0
 816 05e5 70                      		mov	x, a 
 817 05e6 51 00                   		mov	a, #0
 818 05e8 BD F4                   		movw	r12, ax
 819                             		.loc 1 160 0
 820 05ea 8F 06 00                		mov	a, !_newDate+4
 821 05ed 9D F0                   		mov	r8, a
 159:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 822                             		.loc 1 159 0
 823 05ef 70                      		mov	x, a 
 824 05f0 51 00                   		mov	a, #0
 825 05f2 BD F2                   		movw	r10, ax
 826                             		.loc 1 160 0
 827 05f4 8F 07 00                		mov	a, !_newDate+5
 828 05f7 9D F0                   		mov	r8, a
 159:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 829                             		.loc 1 159 0
 830 05f9 CD F1 00                		mov	r9, #0
 831 05fc 30 00 00                		movw	ax, #_record
 832 05ff B8 00                   		movw	[sp], ax
 833 0601 30 00 00                		movw	ax, #.LC0
 834 0604 B8 02                   		movw	[sp+2], ax
 835 0606 AD EA                   		movw	ax, r18
 836 0608 B8 04                   		movw	[sp+4], ax
 837 060a AD E8                   		movw	ax, r16
 838 060c B8 06                   		movw	[sp+6], ax
 839 060e AD F6                   		movw	ax, r14
 840 0610 B8 08                   		movw	[sp+8], ax
 841 0612 AD F4                   		movw	ax, r12
 842 0614 B8 0A                   		movw	[sp+10], ax
 843 0616 AD F2                   		movw	ax, r10
 844 0618 B8 0C                   		movw	[sp+12], ax
 845 061a AD F0                   		movw	ax, r8
 846 061c B8 0E                   		movw	[sp+14], ax
 847 061e FC 00 00 00             		call	!!%code(_sprintf)
 161:../src/StateMachine.c **** 			setRTC();
 848                             		.loc 1 161 0
 849 0622 FC 00 00 00             		call	!!%code(_setRTC)
 162:../src/StateMachine.c **** 			state = 4;
 850                             		.loc 1 162 0
 851 0626 30 04 00                		movw	ax, #4
 852 0629 BF 00 00                		movw	!_state, ax
 853                             	.LBE4:
 854 062c EC 45 06 00             		br	!!.L68
 855                             	.L67:
 163:../src/StateMachine.c **** 		} else if (instr == 5) {
 856                             		.loc 1 163 0
 857 0630 A8 24                   		movw	ax, [sp+36]
 858 0632 44 05 00                		cmpw	ax, #5
 859 0635 61 E8                   		 skz
 860 0637 EC 45 06 00             		 br	!!.L68
 164:../src/StateMachine.c **** 			state = 4;
 861                             		.loc 1 164 0
 862 063b 30 04 00                		movw	ax, #4
 863 063e BF 00 00                		movw	!_state, ax
 165:../src/StateMachine.c **** 		}
 166:../src/StateMachine.c **** 		break;
 864                             		.loc 1 166 0
 865 0641 EC 71 09 00             		br	!!.L2
 866                             	.L68:
 867 0645 EC 71 09 00             		br	!!.L2
 868                             	.L22:
 167:../src/StateMachine.c **** 	case 16:
 168:../src/StateMachine.c **** 		if (instr == 1) { //accept command
 869                             		.loc 1 168 0
 870 0649 A8 24                   		movw	ax, [sp+36]
 871 064b 44 01 00                		cmpw	ax, #1
 872 064e 61 E8                   		 skz
 873 0650 EC C2 06 00             		 br	!!.L69
 874                             	.LBB5:
 169:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 875                             		.loc 1 169 0
 876 0654 8F 02 00                		mov	a, !_newDate
 877 0657 9D F0                   		mov	r8, a
 878 0659 70                      		mov	x, a 
 879 065a 51 00                   		mov	a, #0
 880 065c BD EA                   		movw	r18, ax
 170:../src/StateMachine.c **** 					newDate[1], newDate[2], newDate[3], newDate[4], newDate[5]);
 881                             		.loc 1 170 0
 882 065e 8F 03 00                		mov	a, !_newDate+1
 883 0661 9D F0                   		mov	r8, a
 169:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 884                             		.loc 1 169 0
 885 0663 70                      		mov	x, a 
 886 0664 51 00                   		mov	a, #0
 887 0666 BD E8                   		movw	r16, ax
 888                             		.loc 1 170 0
 889 0668 8F 04 00                		mov	a, !_newDate+2
 890 066b 9D F0                   		mov	r8, a
 169:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 891                             		.loc 1 169 0
 892 066d 70                      		mov	x, a 
 893 066e 51 00                   		mov	a, #0
 894 0670 BD F6                   		movw	r14, ax
 895                             		.loc 1 170 0
 896 0672 8F 05 00                		mov	a, !_newDate+3
 897 0675 9D F0                   		mov	r8, a
 169:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 898                             		.loc 1 169 0
 899 0677 70                      		mov	x, a 
 900 0678 51 00                   		mov	a, #0
 901 067a BD F4                   		movw	r12, ax
 902                             		.loc 1 170 0
 903 067c 8F 06 00                		mov	a, !_newDate+4
 904 067f 9D F0                   		mov	r8, a
 169:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 905                             		.loc 1 169 0
 906 0681 70                      		mov	x, a 
 907 0682 51 00                   		mov	a, #0
 908 0684 BD F2                   		movw	r10, ax
 909                             		.loc 1 170 0
 910 0686 8F 07 00                		mov	a, !_newDate+5
 911 0689 9D F0                   		mov	r8, a
 169:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 912                             		.loc 1 169 0
 913 068b CD F1 00                		mov	r9, #0
 914 068e 30 00 00                		movw	ax, #_record
 915 0691 B8 00                   		movw	[sp], ax
 916 0693 30 00 00                		movw	ax, #.LC0
 917 0696 B8 02                   		movw	[sp+2], ax
 918 0698 AD EA                   		movw	ax, r18
 919 069a B8 04                   		movw	[sp+4], ax
 920 069c AD E8                   		movw	ax, r16
 921 069e B8 06                   		movw	[sp+6], ax
 922 06a0 AD F6                   		movw	ax, r14
 923 06a2 B8 08                   		movw	[sp+8], ax
 924 06a4 AD F4                   		movw	ax, r12
 925 06a6 B8 0A                   		movw	[sp+10], ax
 926 06a8 AD F2                   		movw	ax, r10
 927 06aa B8 0C                   		movw	[sp+12], ax
 928 06ac AD F0                   		movw	ax, r8
 929 06ae B8 0E                   		movw	[sp+14], ax
 930 06b0 FC 00 00 00             		call	!!%code(_sprintf)
 171:../src/StateMachine.c **** 			setRTC();
 931                             		.loc 1 171 0
 932 06b4 FC 00 00 00             		call	!!%code(_setRTC)
 172:../src/StateMachine.c **** 			state = 10;
 933                             		.loc 1 172 0
 934 06b8 30 0A 00                		movw	ax, #10
 935 06bb BF 00 00                		movw	!_state, ax
 936                             	.LBE5:
 937 06be EC D7 06 00             		br	!!.L70
 938                             	.L69:
 173:../src/StateMachine.c **** 		} else if (instr == 5) {
 939                             		.loc 1 173 0
 940 06c2 A8 24                   		movw	ax, [sp+36]
 941 06c4 44 05 00                		cmpw	ax, #5
 942 06c7 61 E8                   		 skz
 943 06c9 EC D7 06 00             		 br	!!.L70
 174:../src/StateMachine.c **** 			state = 10;
 944                             		.loc 1 174 0
 945 06cd 30 0A 00                		movw	ax, #10
 946 06d0 BF 00 00                		movw	!_state, ax
 175:../src/StateMachine.c **** 		}
 176:../src/StateMachine.c **** 		break;
 947                             		.loc 1 176 0
 948 06d3 EC 71 09 00             		br	!!.L2
 949                             	.L70:
 950 06d7 EC 71 09 00             		br	!!.L2
 951                             	.L24:
 177:../src/StateMachine.c **** 	case 17:
 178:../src/StateMachine.c **** 		if (instr == 1) { //accept command
 952                             		.loc 1 178 0
 953 06db A8 24                   		movw	ax, [sp+36]
 954 06dd 44 01 00                		cmpw	ax, #1
 955 06e0 61 E8                   		 skz
 956 06e2 EC 54 07 00             		 br	!!.L71
 957                             	.LBB6:
 179:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 958                             		.loc 1 179 0
 959 06e6 8F 02 00                		mov	a, !_newDate
 960 06e9 9D F0                   		mov	r8, a
 961 06eb 70                      		mov	x, a 
 962 06ec 51 00                   		mov	a, #0
 963 06ee BD EA                   		movw	r18, ax
 180:../src/StateMachine.c **** 					newDate[1], newDate[2], newDate[3], newDate[4], newDate[5]);
 964                             		.loc 1 180 0
 965 06f0 8F 03 00                		mov	a, !_newDate+1
 966 06f3 9D F0                   		mov	r8, a
 179:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 967                             		.loc 1 179 0
 968 06f5 70                      		mov	x, a 
 969 06f6 51 00                   		mov	a, #0
 970 06f8 BD E8                   		movw	r16, ax
 971                             		.loc 1 180 0
 972 06fa 8F 04 00                		mov	a, !_newDate+2
 973 06fd 9D F0                   		mov	r8, a
 179:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 974                             		.loc 1 179 0
 975 06ff 70                      		mov	x, a 
 976 0700 51 00                   		mov	a, #0
 977 0702 BD F6                   		movw	r14, ax
 978                             		.loc 1 180 0
 979 0704 8F 05 00                		mov	a, !_newDate+3
 980 0707 9D F0                   		mov	r8, a
 179:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 981                             		.loc 1 179 0
 982 0709 70                      		mov	x, a 
 983 070a 51 00                   		mov	a, #0
 984 070c BD F4                   		movw	r12, ax
 985                             		.loc 1 180 0
 986 070e 8F 06 00                		mov	a, !_newDate+4
 987 0711 9D F0                   		mov	r8, a
 179:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 988                             		.loc 1 179 0
 989 0713 70                      		mov	x, a 
 990 0714 51 00                   		mov	a, #0
 991 0716 BD F2                   		movw	r10, ax
 992                             		.loc 1 180 0
 993 0718 8F 07 00                		mov	a, !_newDate+5
 994 071b 9D F0                   		mov	r8, a
 179:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 995                             		.loc 1 179 0
 996 071d CD F1 00                		mov	r9, #0
 997 0720 30 00 00                		movw	ax, #_record
 998 0723 B8 00                   		movw	[sp], ax
 999 0725 30 00 00                		movw	ax, #.LC0
 1000 0728 B8 02                   		movw	[sp+2], ax
 1001 072a AD EA                   		movw	ax, r18
 1002 072c B8 04                   		movw	[sp+4], ax
 1003 072e AD E8                   		movw	ax, r16
 1004 0730 B8 06                   		movw	[sp+6], ax
 1005 0732 AD F6                   		movw	ax, r14
 1006 0734 B8 08                   		movw	[sp+8], ax
 1007 0736 AD F4                   		movw	ax, r12
 1008 0738 B8 0A                   		movw	[sp+10], ax
 1009 073a AD F2                   		movw	ax, r10
 1010 073c B8 0C                   		movw	[sp+12], ax
 1011 073e AD F0                   		movw	ax, r8
 1012 0740 B8 0E                   		movw	[sp+14], ax
 1013 0742 FC 00 00 00             		call	!!%code(_sprintf)
 181:../src/StateMachine.c **** 			setRTC();
 1014                             		.loc 1 181 0
 1015 0746 FC 00 00 00             		call	!!%code(_setRTC)
 182:../src/StateMachine.c **** 			state = 11;
 1016                             		.loc 1 182 0
 1017 074a 30 0B 00                		movw	ax, #11
 1018 074d BF 00 00                		movw	!_state, ax
 1019                             	.LBE6:
 1020 0750 EC 69 07 00             		br	!!.L72
 1021                             	.L71:
 183:../src/StateMachine.c **** 		} else if (instr == 5) {
 1022                             		.loc 1 183 0
 1023 0754 A8 24                   		movw	ax, [sp+36]
 1024 0756 44 05 00                		cmpw	ax, #5
 1025 0759 61 E8                   		 skz
 1026 075b EC 69 07 00             		 br	!!.L72
 184:../src/StateMachine.c **** 			state = 11;
 1027                             		.loc 1 184 0
 1028 075f 30 0B 00                		movw	ax, #11
 1029 0762 BF 00 00                		movw	!_state, ax
 185:../src/StateMachine.c **** 		}
 186:../src/StateMachine.c **** 		break;
 1030                             		.loc 1 186 0
 1031 0765 EC 71 09 00             		br	!!.L2
 1032                             	.L72:
 1033 0769 EC 71 09 00             		br	!!.L2
 1034                             	.L25:
 187:../src/StateMachine.c **** 	case 18:
 188:../src/StateMachine.c **** 		if (instr == 1) { //accept command
 1035                             		.loc 1 188 0
 1036 076d A8 24                   		movw	ax, [sp+36]
 1037 076f 44 01 00                		cmpw	ax, #1
 1038 0772 61 E8                   		 skz
 1039 0774 EC E6 07 00             		 br	!!.L73
 1040                             	.LBB7:
 189:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 1041                             		.loc 1 189 0
 1042 0778 8F 02 00                		mov	a, !_newDate
 1043 077b 9D F0                   		mov	r8, a
 1044 077d 70                      		mov	x, a 
 1045 077e 51 00                   		mov	a, #0
 1046 0780 BD EA                   		movw	r18, ax
 190:../src/StateMachine.c **** 					newDate[1], newDate[2], newDate[3], newDate[4], newDate[5]);
 1047                             		.loc 1 190 0
 1048 0782 8F 03 00                		mov	a, !_newDate+1
 1049 0785 9D F0                   		mov	r8, a
 189:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 1050                             		.loc 1 189 0
 1051 0787 70                      		mov	x, a 
 1052 0788 51 00                   		mov	a, #0
 1053 078a BD E8                   		movw	r16, ax
 1054                             		.loc 1 190 0
 1055 078c 8F 04 00                		mov	a, !_newDate+2
 1056 078f 9D F0                   		mov	r8, a
 189:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 1057                             		.loc 1 189 0
 1058 0791 70                      		mov	x, a 
 1059 0792 51 00                   		mov	a, #0
 1060 0794 BD F6                   		movw	r14, ax
 1061                             		.loc 1 190 0
 1062 0796 8F 05 00                		mov	a, !_newDate+3
 1063 0799 9D F0                   		mov	r8, a
 189:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 1064                             		.loc 1 189 0
 1065 079b 70                      		mov	x, a 
 1066 079c 51 00                   		mov	a, #0
 1067 079e BD F4                   		movw	r12, ax
 1068                             		.loc 1 190 0
 1069 07a0 8F 06 00                		mov	a, !_newDate+4
 1070 07a3 9D F0                   		mov	r8, a
 189:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 1071                             		.loc 1 189 0
 1072 07a5 70                      		mov	x, a 
 1073 07a6 51 00                   		mov	a, #0
 1074 07a8 BD F2                   		movw	r10, ax
 1075                             		.loc 1 190 0
 1076 07aa 8F 07 00                		mov	a, !_newDate+5
 1077 07ad 9D F0                   		mov	r8, a
 189:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 1078                             		.loc 1 189 0
 1079 07af CD F1 00                		mov	r9, #0
 1080 07b2 30 00 00                		movw	ax, #_record
 1081 07b5 B8 00                   		movw	[sp], ax
 1082 07b7 30 00 00                		movw	ax, #.LC0
 1083 07ba B8 02                   		movw	[sp+2], ax
 1084 07bc AD EA                   		movw	ax, r18
 1085 07be B8 04                   		movw	[sp+4], ax
 1086 07c0 AD E8                   		movw	ax, r16
 1087 07c2 B8 06                   		movw	[sp+6], ax
 1088 07c4 AD F6                   		movw	ax, r14
 1089 07c6 B8 08                   		movw	[sp+8], ax
 1090 07c8 AD F4                   		movw	ax, r12
 1091 07ca B8 0A                   		movw	[sp+10], ax
 1092 07cc AD F2                   		movw	ax, r10
 1093 07ce B8 0C                   		movw	[sp+12], ax
 1094 07d0 AD F0                   		movw	ax, r8
 1095 07d2 B8 0E                   		movw	[sp+14], ax
 1096 07d4 FC 00 00 00             		call	!!%code(_sprintf)
 191:../src/StateMachine.c **** 			setRTC();
 1097                             		.loc 1 191 0
 1098 07d8 FC 00 00 00             		call	!!%code(_setRTC)
 192:../src/StateMachine.c **** 			state = 12;
 1099                             		.loc 1 192 0
 1100 07dc 30 0C 00                		movw	ax, #12
 1101 07df BF 00 00                		movw	!_state, ax
 1102                             	.LBE7:
 1103 07e2 EC FB 07 00             		br	!!.L74
 1104                             	.L73:
 193:../src/StateMachine.c **** 		} else if (instr == 5) {
 1105                             		.loc 1 193 0
 1106 07e6 A8 24                   		movw	ax, [sp+36]
 1107 07e8 44 05 00                		cmpw	ax, #5
 1108 07eb 61 E8                   		 skz
 1109 07ed EC FB 07 00             		 br	!!.L74
 194:../src/StateMachine.c **** 			state = 12;
 1110                             		.loc 1 194 0
 1111 07f1 30 0C 00                		movw	ax, #12
 1112 07f4 BF 00 00                		movw	!_state, ax
 195:../src/StateMachine.c **** 		}
 196:../src/StateMachine.c **** 		break;
 1113                             		.loc 1 196 0
 1114 07f7 EC 71 09 00             		br	!!.L2
 1115                             	.L74:
 1116 07fb EC 71 09 00             		br	!!.L2
 1117                             	.L13:
 197:../src/StateMachine.c **** 
 198:../src/StateMachine.c **** 		//---------------------------------------------------- test mode
 199:../src/StateMachine.c **** 
 200:../src/StateMachine.c **** 	case 5:
 201:../src/StateMachine.c **** 		if (instr == 3)
 1118                             		.loc 1 201 0
 1119 07ff A8 24                   		movw	ax, [sp+36]
 1120 0801 44 03 00                		cmpw	ax, #3
 1121 0804 61 E8                   		 skz
 1122 0806 EC 1A 08 00             		 br	!!.L75
 202:../src/StateMachine.c **** 			state++;
 1123                             		.loc 1 202 0
 1124 080a AF 00 00                		movw	ax, !_state
 1125 080d BD F0                   		movw	r8, ax
 1126 080f A6 F0                   		incw	r8
 1127 0811 AD F0                   		movw	ax, r8
 1128 0813 BF 00 00                		movw	!_state, ax
 1129 0816 EC 42 08 00             		br	!!.L76
 1130                             	.L75:
 203:../src/StateMachine.c **** 		else if (instr == 4)
 1131                             		.loc 1 203 0
 1132 081a A8 24                   		movw	ax, [sp+36]
 1133 081c 44 04 00                		cmpw	ax, #4
 1134 081f 61 E8                   		 skz
 1135 0821 EC 2F 08 00             		 br	!!.L77
 204:../src/StateMachine.c **** 			state = 9;
 1136                             		.loc 1 204 0
 1137 0825 30 09 00                		movw	ax, #9
 1138 0828 BF 00 00                		movw	!_state, ax
 1139 082b EC 42 08 00             		br	!!.L76
 1140                             	.L77:
 205:../src/StateMachine.c **** 		else if (instr == 7)
 1141                             		.loc 1 205 0
 1142 082f A8 24                   		movw	ax, [sp+36]
 1143 0831 44 07 00                		cmpw	ax, #7
 1144 0834 61 E8                   		 skz
 1145 0836 EC 42 08 00             		 br	!!.L76
 206:../src/StateMachine.c **** 			state = 0;
 1146                             		.loc 1 206 0
 1147 083a F6                      		clrw	ax
 1148 083b BF 00 00                		movw	!_state, ax
 207:../src/StateMachine.c **** 		break;
 1149                             		.loc 1 207 0
 1150 083e EC 71 09 00             		br	!!.L2
 1151                             	.L76:
 1152 0842 EC 71 09 00             		br	!!.L2
 1153                             	.L12:
 208:../src/StateMachine.c **** 	case 6:
 209:../src/StateMachine.c **** 		if (instr == 3)
 1154                             		.loc 1 209 0
 1155 0846 A8 24                   		movw	ax, [sp+36]
 1156 0848 44 03 00                		cmpw	ax, #3
 1157 084b 61 E8                   		 skz
 1158 084d EC 61 08 00             		 br	!!.L78
 210:../src/StateMachine.c **** 			state++;
 1159                             		.loc 1 210 0
 1160 0851 AF 00 00                		movw	ax, !_state
 1161 0854 BD F0                   		movw	r8, ax
 1162 0856 A6 F0                   		incw	r8
 1163 0858 AD F0                   		movw	ax, r8
 1164 085a BF 00 00                		movw	!_state, ax
 1165 085d EC 8F 08 00             		br	!!.L79
 1166                             	.L78:
 211:../src/StateMachine.c **** 		else if (instr == 4)
 1167                             		.loc 1 211 0
 1168 0861 A8 24                   		movw	ax, [sp+36]
 1169 0863 44 04 00                		cmpw	ax, #4
 1170 0866 61 E8                   		 skz
 1171 0868 EC 7C 08 00             		 br	!!.L80
 212:../src/StateMachine.c **** 			state--;
 1172                             		.loc 1 212 0
 1173 086c AF 00 00                		movw	ax, !_state
 1174 086f BD F0                   		movw	r8, ax
 1175 0871 B6 F0                   		decw	r8
 1176 0873 AD F0                   		movw	ax, r8
 1177 0875 BF 00 00                		movw	!_state, ax
 1178 0878 EC 8F 08 00             		br	!!.L79
 1179                             	.L80:
 213:../src/StateMachine.c **** 		else if (instr == 7)
 1180                             		.loc 1 213 0
 1181 087c A8 24                   		movw	ax, [sp+36]
 1182 087e 44 07 00                		cmpw	ax, #7
 1183 0881 61 E8                   		 skz
 1184 0883 EC 8F 08 00             		 br	!!.L79
 214:../src/StateMachine.c **** 			state = 0;
 1185                             		.loc 1 214 0
 1186 0887 F6                      		clrw	ax
 1187 0888 BF 00 00                		movw	!_state, ax
 215:../src/StateMachine.c **** 		break;
 1188                             		.loc 1 215 0
 1189 088b EC 71 09 00             		br	!!.L2
 1190                             	.L79:
 1191 088f EC 71 09 00             		br	!!.L2
 1192                             	.L14:
 216:../src/StateMachine.c **** 	case 7:
 217:../src/StateMachine.c **** 		if (instr == 3)
 1193                             		.loc 1 217 0
 1194 0893 A8 24                   		movw	ax, [sp+36]
 1195 0895 44 03 00                		cmpw	ax, #3
 1196 0898 61 E8                   		 skz
 1197 089a EC AE 08 00             		 br	!!.L81
 218:../src/StateMachine.c **** 			state++;
 1198                             		.loc 1 218 0
 1199 089e AF 00 00                		movw	ax, !_state
 1200 08a1 BD F0                   		movw	r8, ax
 1201 08a3 A6 F0                   		incw	r8
 1202 08a5 AD F0                   		movw	ax, r8
 1203 08a7 BF 00 00                		movw	!_state, ax
 1204 08aa EC DC 08 00             		br	!!.L82
 1205                             	.L81:
 219:../src/StateMachine.c **** 		else if (instr == 4)
 1206                             		.loc 1 219 0
 1207 08ae A8 24                   		movw	ax, [sp+36]
 1208 08b0 44 04 00                		cmpw	ax, #4
 1209 08b3 61 E8                   		 skz
 1210 08b5 EC C9 08 00             		 br	!!.L83
 220:../src/StateMachine.c **** 			state--;
 1211                             		.loc 1 220 0
 1212 08b9 AF 00 00                		movw	ax, !_state
 1213 08bc BD F0                   		movw	r8, ax
 1214 08be B6 F0                   		decw	r8
 1215 08c0 AD F0                   		movw	ax, r8
 1216 08c2 BF 00 00                		movw	!_state, ax
 1217 08c5 EC DC 08 00             		br	!!.L82
 1218                             	.L83:
 221:../src/StateMachine.c **** 		else if (instr == 7)
 1219                             		.loc 1 221 0
 1220 08c9 A8 24                   		movw	ax, [sp+36]
 1221 08cb 44 07 00                		cmpw	ax, #7
 1222 08ce 61 E8                   		 skz
 1223 08d0 EC DC 08 00             		 br	!!.L82
 222:../src/StateMachine.c **** 			state = 0;
 1224                             		.loc 1 222 0
 1225 08d4 F6                      		clrw	ax
 1226 08d5 BF 00 00                		movw	!_state, ax
 223:../src/StateMachine.c **** 		break;
 1227                             		.loc 1 223 0
 1228 08d8 EC 71 09 00             		br	!!.L2
 1229                             	.L82:
 1230 08dc EC 71 09 00             		br	!!.L2
 1231                             	.L15:
 224:../src/StateMachine.c **** 	case 8:
 225:../src/StateMachine.c **** 		if (instr == 3)
 1232                             		.loc 1 225 0
 1233 08e0 A8 24                   		movw	ax, [sp+36]
 1234 08e2 44 03 00                		cmpw	ax, #3
 1235 08e5 61 E8                   		 skz
 1236 08e7 EC FB 08 00             		 br	!!.L84
 226:../src/StateMachine.c **** 			state++;
 1237                             		.loc 1 226 0
 1238 08eb AF 00 00                		movw	ax, !_state
 1239 08ee BD F0                   		movw	r8, ax
 1240 08f0 A6 F0                   		incw	r8
 1241 08f2 AD F0                   		movw	ax, r8
 1242 08f4 BF 00 00                		movw	!_state, ax
 1243 08f7 EC 29 09 00             		br	!!.L85
 1244                             	.L84:
 227:../src/StateMachine.c **** 		else if (instr == 4)
 1245                             		.loc 1 227 0
 1246 08fb A8 24                   		movw	ax, [sp+36]
 1247 08fd 44 04 00                		cmpw	ax, #4
 1248 0900 61 E8                   		 skz
 1249 0902 EC 16 09 00             		 br	!!.L86
 228:../src/StateMachine.c **** 			state--;
 1250                             		.loc 1 228 0
 1251 0906 AF 00 00                		movw	ax, !_state
 1252 0909 BD F0                   		movw	r8, ax
 1253 090b B6 F0                   		decw	r8
 1254 090d AD F0                   		movw	ax, r8
 1255 090f BF 00 00                		movw	!_state, ax
 1256 0912 EC 29 09 00             		br	!!.L85
 1257                             	.L86:
 229:../src/StateMachine.c **** 		else if (instr == 7)
 1258                             		.loc 1 229 0
 1259 0916 A8 24                   		movw	ax, [sp+36]
 1260 0918 44 07 00                		cmpw	ax, #7
 1261 091b 61 E8                   		 skz
 1262 091d EC 29 09 00             		 br	!!.L85
 230:../src/StateMachine.c **** 			state = 0;
 1263                             		.loc 1 230 0
 1264 0921 F6                      		clrw	ax
 1265 0922 BF 00 00                		movw	!_state, ax
 231:../src/StateMachine.c **** 		break;
 1266                             		.loc 1 231 0
 1267 0925 EC 71 09 00             		br	!!.L2
 1268                             	.L85:
 1269 0929 EC 71 09 00             		br	!!.L2
 1270                             	.L3:
 232:../src/StateMachine.c **** 	case 9:
 233:../src/StateMachine.c **** 		if (instr == 3)
 1271                             		.loc 1 233 0
 1272 092d A8 24                   		movw	ax, [sp+36]
 1273 092f 44 03 00                		cmpw	ax, #3
 1274 0932 61 E8                   		 skz
 1275 0934 EC 42 09 00             		 br	!!.L87
 234:../src/StateMachine.c **** 			state = 5;
 1276                             		.loc 1 234 0
 1277 0938 30 05 00                		movw	ax, #5
 1278 093b BF 00 00                		movw	!_state, ax
 1279 093e EC 70 09 00             		br	!!.L88
 1280                             	.L87:
 235:../src/StateMachine.c **** 		else if (instr == 4)
 1281                             		.loc 1 235 0
 1282 0942 A8 24                   		movw	ax, [sp+36]
 1283 0944 44 04 00                		cmpw	ax, #4
 1284 0947 61 E8                   		 skz
 1285 0949 EC 5D 09 00             		 br	!!.L89
 236:../src/StateMachine.c **** 			state--;
 1286                             		.loc 1 236 0
 1287 094d AF 00 00                		movw	ax, !_state
 1288 0950 BD F0                   		movw	r8, ax
 1289 0952 B6 F0                   		decw	r8
 1290 0954 AD F0                   		movw	ax, r8
 1291 0956 BF 00 00                		movw	!_state, ax
 1292 0959 EC 70 09 00             		br	!!.L88
 1293                             	.L89:
 237:../src/StateMachine.c **** 		else if (instr == 7)
 1294                             		.loc 1 237 0
 1295 095d A8 24                   		movw	ax, [sp+36]
 1296 095f 44 07 00                		cmpw	ax, #7
 1297 0962 61 E8                   		 skz
 1298 0964 EC 70 09 00             		 br	!!.L88
 238:../src/StateMachine.c **** 			state = 0;
 1299                             		.loc 1 238 0
 1300 0968 F6                      		clrw	ax
 1301 0969 BF 00 00                		movw	!_state, ax
 239:../src/StateMachine.c **** 		break;
 1302                             		.loc 1 239 0
 1303 096c EC 70 09 00             		br	!!.L138
 1304                             	.L88:
 1305                             	.L138:
 1306 0970 00                      		nop
 1307                             	.L2:
 240:../src/StateMachine.c **** 	}
 241:../src/StateMachine.c **** 
 242:../src/StateMachine.c **** 	//STATE FUNCTIONS
 243:../src/StateMachine.c **** 
 244:../src/StateMachine.c **** 	/*
 245:../src/StateMachine.c **** 	 * Normal mode functions
 246:../src/StateMachine.c **** 	 *
 247:../src/StateMachine.c **** 	 * 0 - adjust date time
 248:../src/StateMachine.c **** 	 * 1 - measure open circuit voltage and short circuit current
 249:../src/StateMachine.c **** 	 * 2 - Set Year
 250:../src/StateMachine.c **** 	 * 3 - Set Month
 251:../src/StateMachine.c **** 	 * 4 - Set Day
 252:../src/StateMachine.c **** 	 * 10 - Set Hour
 253:../src/StateMachine.c **** 	 * 11 - Set Minutes
 254:../src/StateMachine.c **** 	 * 12 - Set Seconds
 255:../src/StateMachine.c **** 	 * 13 - Year:
 256:../src/StateMachine.c **** 	 * 14 - Month:
 257:../src/StateMachine.c **** 	 * 15 - Day:
 258:../src/StateMachine.c **** 	 * 16 - Hour:
 259:../src/StateMachine.c **** 	 * 17 - Minute:
 260:../src/StateMachine.c **** 	 * 18 - Second:
 261:../src/StateMachine.c **** 	 *
 262:../src/StateMachine.c **** 	 *
 263:../src/StateMachine.c **** 	 *
 264:../src/StateMachine.c **** 	 * Test mode functions
 265:../src/StateMachine.c **** 	 *
 266:../src/StateMachine.c **** 	 * 5 - $L0
 267:../src/StateMachine.c **** 	 * 6 - $L1
 268:../src/StateMachine.c **** 	 * 7 - $L2
 269:../src/StateMachine.c **** 	 * 8 - $L3
 270:../src/StateMachine.c **** 	 * 9 - $L4
 271:../src/StateMachine.c **** 	 */
 272:../src/StateMachine.c **** 
 273:../src/StateMachine.c **** 	switch (state) {
 1308                             		.loc 1 273 0
 1309 0971 AF 00 00                		movw	ax, !_state
 1310 0974 BD F0                   		movw	r8, ax
 1311 0976 44 09 00                		cmpw	ax, #9
 1312 0979 61 F8                   		 sknz
 1313 097b EC CC 12 00             		 br	!!.L91
 1314 097f AD F0                   		movw	ax, r8
 1315 0981 44 09 00                		cmpw	ax, #9
 1316 0984 71 FF                   		 xor1	CY, a.7
 1317 0986 61 F3                   		 sknh
 1318 0988 EC 17 0A 00             		 br	!!.L92
 1319 098c AD F0                   		movw	ax, r8
 1320 098e 44 04 00                		cmpw	ax, #4
 1321 0991 61 F8                   		 sknz
 1322 0993 EC A4 0B 00             		 br	!!.L93
 1323 0997 AD F0                   		movw	ax, r8
 1324 0999 44 04 00                		cmpw	ax, #4
 1325 099c 71 FF                   		 xor1	CY, a.7
 1326 099e 61 F3                   		 sknh
 1327 09a0 EC E5 09 00             		 br	!!.L94
 1328 09a4 AD F0                   		movw	ax, r8
 1329 09a6 44 01 00                		cmpw	ax, #1
 1330 09a9 61 F8                   		 sknz
 1331 09ab EC C6 0A 00             		 br	!!.L95
 1332 09af AD F0                   		movw	ax, r8
 1333 09b1 44 01 00                		cmpw	ax, #1
 1334 09b4 71 FF                   		 xor1	CY, a.7
 1335 09b6 61 F3                   		 sknh
 1336 09b8 EC CB 09 00             		 br	!!.L96
 1337 09bc AD F0                   		movw	ax, r8
 1338 09be 44 00 00                		cmpw	ax, #0
 1339 09c1 61 F8                   		 sknz
 1340 09c3 EC 93 0A 00             		 br	!!.L97
 1341 09c7 EC 82 13 00             		br	!!.L1
 1342                             	.L96:
 1343 09cb AD F0                   		movw	ax, r8
 1344 09cd 44 02 00                		cmpw	ax, #2
 1345 09d0 61 F8                   		 sknz
 1346 09d2 EC 1F 0B 00             		 br	!!.L98
 1347 09d6 AD F0                   		movw	ax, r8
 1348 09d8 44 03 00                		cmpw	ax, #3
 1349 09db 61 F8                   		 sknz
 1350 09dd EC 5F 0B 00             		 br	!!.L99
 1351 09e1 EC 82 13 00             		br	!!.L1
 1352                             	.L94:
 1353 09e5 AD F0                   		movw	ax, r8
 1354 09e7 44 06 00                		cmpw	ax, #6
 1355 09ea 61 F8                   		 sknz
 1356 09ec EC A1 10 00             		 br	!!.L100
 1357 09f0 AD F0                   		movw	ax, r8
 1358 09f2 44 06 00                		cmpw	ax, #6
 1359 09f5 71 FF                   		 xor1	CY, a.7
 1360 09f7 61 D8                   		 sknc
 1361 09f9 EC E8 0F 00             		 br	!!.L101
 1362 09fd AD F0                   		movw	ax, r8
 1363 09ff 44 07 00                		cmpw	ax, #7
 1364 0a02 61 F8                   		 sknz
 1365 0a04 EC 5A 11 00             		 br	!!.L102
 1366 0a08 AD F0                   		movw	ax, r8
 1367 0a0a 44 08 00                		cmpw	ax, #8
 1368 0a0d 61 F8                   		 sknz
 1369 0a0f EC 13 12 00             		 br	!!.L103
 1370 0a13 EC 82 13 00             		br	!!.L1
 1371                             	.L92:
 1372 0a17 AD F0                   		movw	ax, r8
 1373 0a19 44 0E 00                		cmpw	ax, #14
 1374 0a1c 61 F8                   		 sknz
 1375 0a1e EC 2E 0D 00             		 br	!!.L104
 1376 0a22 AD F0                   		movw	ax, r8
 1377 0a24 44 0E 00                		cmpw	ax, #14
 1378 0a27 71 FF                   		 xor1	CY, a.7
 1379 0a29 61 F3                   		 sknh
 1380 0a2b EC 61 0A 00             		 br	!!.L105
 1381 0a2f AD F0                   		movw	ax, r8
 1382 0a31 44 0B 00                		cmpw	ax, #11
 1383 0a34 61 F8                   		 sknz
 1384 0a36 EC 1F 0C 00             		 br	!!.L106
 1385 0a3a AD F0                   		movw	ax, r8
 1386 0a3c 44 0B 00                		cmpw	ax, #11
 1387 0a3f 71 FF                   		 xor1	CY, a.7
 1388 0a41 61 D8                   		 sknc
 1389 0a43 EC DF 0B 00             		 br	!!.L107
 1390 0a47 AD F0                   		movw	ax, r8
 1391 0a49 44 0C 00                		cmpw	ax, #12
 1392 0a4c 61 F8                   		 sknz
 1393 0a4e EC 69 0C 00             		 br	!!.L108
 1394 0a52 AD F0                   		movw	ax, r8
 1395 0a54 44 0D 00                		cmpw	ax, #13
 1396 0a57 61 F8                   		 sknz
 1397 0a59 EC B3 0C 00             		 br	!!.L109
 1398 0a5d EC 82 13 00             		br	!!.L1
 1399                             	.L105:
 1400 0a61 AD F0                   		movw	ax, r8
 1401 0a63 44 10 00                		cmpw	ax, #16
 1402 0a66 61 F8                   		 sknz
 1403 0a68 EC 77 0E 00             		 br	!!.L110
 1404 0a6c AD F0                   		movw	ax, r8
 1405 0a6e 44 10 00                		cmpw	ax, #16
 1406 0a71 71 FF                   		 xor1	CY, a.7
 1407 0a73 61 D8                   		 sknc
 1408 0a75 EC A9 0D 00             		 br	!!.L111
 1409 0a79 AD F0                   		movw	ax, r8
 1410 0a7b 44 11 00                		cmpw	ax, #17
 1411 0a7e 61 F8                   		 sknz
 1412 0a80 EC F2 0E 00             		 br	!!.L112
 1413 0a84 AD F0                   		movw	ax, r8
 1414 0a86 44 12 00                		cmpw	ax, #18
 1415 0a89 61 F8                   		 sknz
 1416 0a8b EC 6D 0F 00             		 br	!!.L113
 1417 0a8f EC 82 13 00             		br	!!.L1
 1418                             	.L97:
 274:../src/StateMachine.c **** 	case 0:
 275:../src/StateMachine.c **** 		sprintf(display_string, "SP:Voc=%d mV, Isc=%d mA\x0d\x0a", voltage,
 1419                             		.loc 1 275 0
 1420 0a93 8F 00 00                		mov	a, !_voltage
 1421 0a96 9D F0                   		mov	r8, a
 1422 0a98 70                      		mov	x, a 
 1423 0a99 51 00                   		mov	a, #0
 1424 0a9b BD F2                   		movw	r10, ax
 1425 0a9d 8F 00 00                		mov	a, !_current1
 1426 0aa0 9D F0                   		mov	r8, a
 1427 0aa2 CD F1 00                		mov	r9, #0
 1428 0aa5 30 00 00                		movw	ax, #_display_string
 1429 0aa8 B8 00                   		movw	[sp], ax
 1430 0aaa 30 1A 00                		movw	ax, #.LC1
 1431 0aad B8 02                   		movw	[sp+2], ax
 1432 0aaf AD F2                   		movw	ax, r10
 1433 0ab1 B8 04                   		movw	[sp+4], ax
 1434 0ab3 AD F0                   		movw	ax, r8
 1435 0ab5 B8 06                   		movw	[sp+6], ax
 1436 0ab7 FC 00 00 00             		call	!!%code(_sprintf)
 276:../src/StateMachine.c **** 				current1);
 277:../src/StateMachine.c **** 		displayLCD(1);
 1437                             		.loc 1 277 0
 1438 0abb E6                      		onew	ax
 1439 0abc B8 00                   		movw	[sp], ax
 1440 0abe FC 00 00 00             		call	!!%code(_displayLCD)
 278:../src/StateMachine.c **** 		break;
 1441                             		.loc 1 278 0
 1442 0ac2 EC 82 13 00             		br	!!.L1
 1443                             	.L95:
 279:../src/StateMachine.c **** 	case 1:
 280:../src/StateMachine.c **** 		strcpy(display_string, "Set date/time\x0d\x0a");
 1444                             		.loc 1 280 0
 1445 0ac6 51 53                   		mov	a, #83
 1446 0ac8 9F 00 00                		mov	!_display_string, a
 1447 0acb 51 65                   		mov	a, #101
 1448 0acd 9F 00 00                		mov	!_display_string+1, a
 1449 0ad0 51 74                   		mov	a, #116
 1450 0ad2 9F 00 00                		mov	!_display_string+2, a
 1451 0ad5 51 20                   		mov	a, #32
 1452 0ad7 9F 00 00                		mov	!_display_string+3, a
 1453 0ada 51 64                   		mov	a, #100
 1454 0adc 9F 00 00                		mov	!_display_string+4, a
 1455 0adf 51 61                   		mov	a, #97
 1456 0ae1 9F 00 00                		mov	!_display_string+5, a
 1457 0ae4 51 74                   		mov	a, #116
 1458 0ae6 9F 00 00                		mov	!_display_string+6, a
 1459 0ae9 51 65                   		mov	a, #101
 1460 0aeb 9F 00 00                		mov	!_display_string+7, a
 1461 0aee 51 2F                   		mov	a, #47
 1462 0af0 9F 00 00                		mov	!_display_string+8, a
 1463 0af3 51 74                   		mov	a, #116
 1464 0af5 9F 00 00                		mov	!_display_string+9, a
 1465 0af8 51 69                   		mov	a, #105
 1466 0afa 9F 00 00                		mov	!_display_string+10, a
 1467 0afd 51 6D                   		mov	a, #109
 1468 0aff 9F 00 00                		mov	!_display_string+11, a
 1469 0b02 51 65                   		mov	a, #101
 1470 0b04 9F 00 00                		mov	!_display_string+12, a
 1471 0b07 51 0D                   		mov	a, #13
 1472 0b09 9F 00 00                		mov	!_display_string+13, a
 1473 0b0c 51 0A                   		mov	a, #10
 1474 0b0e 9F 00 00                		mov	!_display_string+14, a
 1475 0b11 F5 00 00                		clrb	!_display_string+15
 281:../src/StateMachine.c **** 		displayLCD(1);
 1476                             		.loc 1 281 0
 1477 0b14 E6                      		onew	ax
 1478 0b15 B8 00                   		movw	[sp], ax
 1479 0b17 FC 00 00 00             		call	!!%code(_displayLCD)
 282:../src/StateMachine.c **** 		break;
 1480                             		.loc 1 282 0
 1481 0b1b EC 82 13 00             		br	!!.L1
 1482                             	.L98:
 283:../src/StateMachine.c **** 	case 2:
 284:../src/StateMachine.c **** 		strcpy(display_string, "Set Year\x0d\x0a");
 1483                             		.loc 1 284 0
 1484 0b1f 51 53                   		mov	a, #83
 1485 0b21 9F 00 00                		mov	!_display_string, a
 1486 0b24 51 65                   		mov	a, #101
 1487 0b26 9F 00 00                		mov	!_display_string+1, a
 1488 0b29 51 74                   		mov	a, #116
 1489 0b2b 9F 00 00                		mov	!_display_string+2, a
 1490 0b2e 51 20                   		mov	a, #32
 1491 0b30 9F 00 00                		mov	!_display_string+3, a
 1492 0b33 51 59                   		mov	a, #89
 1493 0b35 9F 00 00                		mov	!_display_string+4, a
 1494 0b38 51 65                   		mov	a, #101
 1495 0b3a 9F 00 00                		mov	!_display_string+5, a
 1496 0b3d 51 61                   		mov	a, #97
 1497 0b3f 9F 00 00                		mov	!_display_string+6, a
 1498 0b42 51 72                   		mov	a, #114
 1499 0b44 9F 00 00                		mov	!_display_string+7, a
 1500 0b47 51 0D                   		mov	a, #13
 1501 0b49 9F 00 00                		mov	!_display_string+8, a
 1502 0b4c 51 0A                   		mov	a, #10
 1503 0b4e 9F 00 00                		mov	!_display_string+9, a
 1504 0b51 F5 00 00                		clrb	!_display_string+10
 285:../src/StateMachine.c **** 		displayLCD(1);
 1505                             		.loc 1 285 0
 1506 0b54 E6                      		onew	ax
 1507 0b55 B8 00                   		movw	[sp], ax
 1508 0b57 FC 00 00 00             		call	!!%code(_displayLCD)
 286:../src/StateMachine.c **** 		break;
 1509                             		.loc 1 286 0
 1510 0b5b EC 82 13 00             		br	!!.L1
 1511                             	.L99:
 287:../src/StateMachine.c **** 	case 3:
 288:../src/StateMachine.c **** 		strcpy(display_string, "Set Month\x0d\x0a");
 1512                             		.loc 1 288 0
 1513 0b5f 51 53                   		mov	a, #83
 1514 0b61 9F 00 00                		mov	!_display_string, a
 1515 0b64 51 65                   		mov	a, #101
 1516 0b66 9F 00 00                		mov	!_display_string+1, a
 1517 0b69 51 74                   		mov	a, #116
 1518 0b6b 9F 00 00                		mov	!_display_string+2, a
 1519 0b6e 51 20                   		mov	a, #32
 1520 0b70 9F 00 00                		mov	!_display_string+3, a
 1521 0b73 51 4D                   		mov	a, #77
 1522 0b75 9F 00 00                		mov	!_display_string+4, a
 1523 0b78 51 6F                   		mov	a, #111
 1524 0b7a 9F 00 00                		mov	!_display_string+5, a
 1525 0b7d 51 6E                   		mov	a, #110
 1526 0b7f 9F 00 00                		mov	!_display_string+6, a
 1527 0b82 51 74                   		mov	a, #116
 1528 0b84 9F 00 00                		mov	!_display_string+7, a
 1529 0b87 51 68                   		mov	a, #104
 1530 0b89 9F 00 00                		mov	!_display_string+8, a
 1531 0b8c 51 0D                   		mov	a, #13
 1532 0b8e 9F 00 00                		mov	!_display_string+9, a
 1533 0b91 51 0A                   		mov	a, #10
 1534 0b93 9F 00 00                		mov	!_display_string+10, a
 1535 0b96 F5 00 00                		clrb	!_display_string+11
 289:../src/StateMachine.c **** 		displayLCD(1);
 1536                             		.loc 1 289 0
 1537 0b99 E6                      		onew	ax
 1538 0b9a B8 00                   		movw	[sp], ax
 1539 0b9c FC 00 00 00             		call	!!%code(_displayLCD)
 290:../src/StateMachine.c **** 		break;
 1540                             		.loc 1 290 0
 1541 0ba0 EC 82 13 00             		br	!!.L1
 1542                             	.L93:
 291:../src/StateMachine.c **** 	case 4:
 292:../src/StateMachine.c **** 		strcpy(display_string, "Set Day\x0d\x0a");
 1543                             		.loc 1 292 0
 1544 0ba4 51 53                   		mov	a, #83
 1545 0ba6 9F 00 00                		mov	!_display_string, a
 1546 0ba9 51 65                   		mov	a, #101
 1547 0bab 9F 00 00                		mov	!_display_string+1, a
 1548 0bae 51 74                   		mov	a, #116
 1549 0bb0 9F 00 00                		mov	!_display_string+2, a
 1550 0bb3 51 20                   		mov	a, #32
 1551 0bb5 9F 00 00                		mov	!_display_string+3, a
 1552 0bb8 51 44                   		mov	a, #68
 1553 0bba 9F 00 00                		mov	!_display_string+4, a
 1554 0bbd 51 61                   		mov	a, #97
 1555 0bbf 9F 00 00                		mov	!_display_string+5, a
 1556 0bc2 51 79                   		mov	a, #121
 1557 0bc4 9F 00 00                		mov	!_display_string+6, a
 1558 0bc7 51 0D                   		mov	a, #13
 1559 0bc9 9F 00 00                		mov	!_display_string+7, a
 1560 0bcc 51 0A                   		mov	a, #10
 1561 0bce 9F 00 00                		mov	!_display_string+8, a
 1562 0bd1 F5 00 00                		clrb	!_display_string+9
 293:../src/StateMachine.c **** 		displayLCD(1);
 1563                             		.loc 1 293 0
 1564 0bd4 E6                      		onew	ax
 1565 0bd5 B8 00                   		movw	[sp], ax
 1566 0bd7 FC 00 00 00             		call	!!%code(_displayLCD)
 294:../src/StateMachine.c **** 		break;
 1567                             		.loc 1 294 0
 1568 0bdb EC 82 13 00             		br	!!.L1
 1569                             	.L107:
 295:../src/StateMachine.c **** 	case 10:
 296:../src/StateMachine.c **** 		strcpy(display_string, "Set Hour\x0d\x0a");
 1570                             		.loc 1 296 0
 1571 0bdf 51 53                   		mov	a, #83
 1572 0be1 9F 00 00                		mov	!_display_string, a
 1573 0be4 51 65                   		mov	a, #101
 1574 0be6 9F 00 00                		mov	!_display_string+1, a
 1575 0be9 51 74                   		mov	a, #116
 1576 0beb 9F 00 00                		mov	!_display_string+2, a
 1577 0bee 51 20                   		mov	a, #32
 1578 0bf0 9F 00 00                		mov	!_display_string+3, a
 1579 0bf3 51 48                   		mov	a, #72
 1580 0bf5 9F 00 00                		mov	!_display_string+4, a
 1581 0bf8 51 6F                   		mov	a, #111
 1582 0bfa 9F 00 00                		mov	!_display_string+5, a
 1583 0bfd 51 75                   		mov	a, #117
 1584 0bff 9F 00 00                		mov	!_display_string+6, a
 1585 0c02 51 72                   		mov	a, #114
 1586 0c04 9F 00 00                		mov	!_display_string+7, a
 1587 0c07 51 0D                   		mov	a, #13
 1588 0c09 9F 00 00                		mov	!_display_string+8, a
 1589 0c0c 51 0A                   		mov	a, #10
 1590 0c0e 9F 00 00                		mov	!_display_string+9, a
 1591 0c11 F5 00 00                		clrb	!_display_string+10
 297:../src/StateMachine.c **** 		displayLCD(1);
 1592                             		.loc 1 297 0
 1593 0c14 E6                      		onew	ax
 1594 0c15 B8 00                   		movw	[sp], ax
 1595 0c17 FC 00 00 00             		call	!!%code(_displayLCD)
 298:../src/StateMachine.c **** 		break;
 1596                             		.loc 1 298 0
 1597 0c1b EC 82 13 00             		br	!!.L1
 1598                             	.L106:
 299:../src/StateMachine.c **** 	case 11:
 300:../src/StateMachine.c **** 		strcpy(display_string, "Set Minute\x0d\x0a");
 1599                             		.loc 1 300 0
 1600 0c1f 51 53                   		mov	a, #83
 1601 0c21 9F 00 00                		mov	!_display_string, a
 1602 0c24 51 65                   		mov	a, #101
 1603 0c26 9F 00 00                		mov	!_display_string+1, a
 1604 0c29 51 74                   		mov	a, #116
 1605 0c2b 9F 00 00                		mov	!_display_string+2, a
 1606 0c2e 51 20                   		mov	a, #32
 1607 0c30 9F 00 00                		mov	!_display_string+3, a
 1608 0c33 51 4D                   		mov	a, #77
 1609 0c35 9F 00 00                		mov	!_display_string+4, a
 1610 0c38 51 69                   		mov	a, #105
 1611 0c3a 9F 00 00                		mov	!_display_string+5, a
 1612 0c3d 51 6E                   		mov	a, #110
 1613 0c3f 9F 00 00                		mov	!_display_string+6, a
 1614 0c42 51 75                   		mov	a, #117
 1615 0c44 9F 00 00                		mov	!_display_string+7, a
 1616 0c47 51 74                   		mov	a, #116
 1617 0c49 9F 00 00                		mov	!_display_string+8, a
 1618 0c4c 51 65                   		mov	a, #101
 1619 0c4e 9F 00 00                		mov	!_display_string+9, a
 1620 0c51 51 0D                   		mov	a, #13
 1621 0c53 9F 00 00                		mov	!_display_string+10, a
 1622 0c56 51 0A                   		mov	a, #10
 1623 0c58 9F 00 00                		mov	!_display_string+11, a
 1624 0c5b F5 00 00                		clrb	!_display_string+12
 301:../src/StateMachine.c **** 		displayLCD(1);
 1625                             		.loc 1 301 0
 1626 0c5e E6                      		onew	ax
 1627 0c5f B8 00                   		movw	[sp], ax
 1628 0c61 FC 00 00 00             		call	!!%code(_displayLCD)
 302:../src/StateMachine.c **** 		break;
 1629                             		.loc 1 302 0
 1630 0c65 EC 82 13 00             		br	!!.L1
 1631                             	.L108:
 303:../src/StateMachine.c **** 	case 12:
 304:../src/StateMachine.c **** 		strcpy(display_string, "Set Second\x0d\x0a");
 1632                             		.loc 1 304 0
 1633 0c69 51 53                   		mov	a, #83
 1634 0c6b 9F 00 00                		mov	!_display_string, a
 1635 0c6e 51 65                   		mov	a, #101
 1636 0c70 9F 00 00                		mov	!_display_string+1, a
 1637 0c73 51 74                   		mov	a, #116
 1638 0c75 9F 00 00                		mov	!_display_string+2, a
 1639 0c78 51 20                   		mov	a, #32
 1640 0c7a 9F 00 00                		mov	!_display_string+3, a
 1641 0c7d 51 53                   		mov	a, #83
 1642 0c7f 9F 00 00                		mov	!_display_string+4, a
 1643 0c82 51 65                   		mov	a, #101
 1644 0c84 9F 00 00                		mov	!_display_string+5, a
 1645 0c87 51 63                   		mov	a, #99
 1646 0c89 9F 00 00                		mov	!_display_string+6, a
 1647 0c8c 51 6F                   		mov	a, #111
 1648 0c8e 9F 00 00                		mov	!_display_string+7, a
 1649 0c91 51 6E                   		mov	a, #110
 1650 0c93 9F 00 00                		mov	!_display_string+8, a
 1651 0c96 51 64                   		mov	a, #100
 1652 0c98 9F 00 00                		mov	!_display_string+9, a
 1653 0c9b 51 0D                   		mov	a, #13
 1654 0c9d 9F 00 00                		mov	!_display_string+10, a
 1655 0ca0 51 0A                   		mov	a, #10
 1656 0ca2 9F 00 00                		mov	!_display_string+11, a
 1657 0ca5 F5 00 00                		clrb	!_display_string+12
 305:../src/StateMachine.c **** 		displayLCD(1);
 1658                             		.loc 1 305 0
 1659 0ca8 E6                      		onew	ax
 1660 0ca9 B8 00                   		movw	[sp], ax
 1661 0cab FC 00 00 00             		call	!!%code(_displayLCD)
 306:../src/StateMachine.c **** 		break;
 1662                             		.loc 1 306 0
 1663 0caf EC 82 13 00             		br	!!.L1
 1664                             	.L109:
 307:../src/StateMachine.c **** 	case 13:
 308:../src/StateMachine.c **** 		if (instr == 4) {
 1665                             		.loc 1 308 0
 1666 0cb3 A8 24                   		movw	ax, [sp+36]
 1667 0cb5 44 04 00                		cmpw	ax, #4
 1668 0cb8 61 E8                   		 skz
 1669 0cba EC DC 0C 00             		 br	!!.L114
 309:../src/StateMachine.c **** 			newDate[0]++;
 1670                             		.loc 1 309 0
 1671 0cbe 8F 02 00                		mov	a, !_newDate
 1672 0cc1 9D F0                   		mov	r8, a
 1673 0cc3 A4 F0                   		inc	r8
 1674 0cc5 8D F0                   		mov	a, r8
 1675 0cc7 9F 02 00                		mov	!_newDate, a
 310:../src/StateMachine.c **** 			if (newDate[0] > 99) {
 1676                             		.loc 1 310 0
 1677 0cca 9D F0                   		mov	r8, a
 1678 0ccc 4A F0 63                		cmp	r8, #99
 1679 0ccf 61 E3                   		 skh
 1680 0cd1 EC 09 0D 00             		 br	!!.L116
 311:../src/StateMachine.c **** 				newDate[0] = 0;
 1681                             		.loc 1 311 0
 1682 0cd5 F5 02 00                		clrb	!_newDate
 1683 0cd8 EC 09 0D 00             		br	!!.L116
 1684                             	.L114:
 312:../src/StateMachine.c **** 			}
 313:../src/StateMachine.c **** 		} else if (instr == 3) {
 1685                             		.loc 1 313 0
 1686 0cdc A8 24                   		movw	ax, [sp+36]
 1687 0cde 44 03 00                		cmpw	ax, #3
 1688 0ce1 61 E8                   		 skz
 1689 0ce3 EC 09 0D 00             		 br	!!.L116
 314:../src/StateMachine.c **** 			if (newDate[0] == 0) {
 1690                             		.loc 1 314 0
 1691 0ce7 8F 02 00                		mov	a, !_newDate
 1692 0cea 9D F0                   		mov	r8, a
 1693 0cec D4 F0                   		cmp0	r8
 1694 0cee 61 E8                   		 skz
 1695 0cf0 EC FD 0C 00             		 br	!!.L117
 315:../src/StateMachine.c **** 				newDate[0] = 99;
 1696                             		.loc 1 315 0
 1697 0cf4 51 63                   		mov	a, #99
 1698 0cf6 9F 02 00                		mov	!_newDate, a
 1699 0cf9 EC 09 0D 00             		br	!!.L116
 1700                             	.L117:
 316:../src/StateMachine.c **** 			} else {
 317:../src/StateMachine.c **** 				newDate[0]--;
 1701                             		.loc 1 317 0
 1702 0cfd 8F 02 00                		mov	a, !_newDate
 1703 0d00 9D F0                   		mov	r8, a
 1704 0d02 B4 F0                   		dec	r8
 1705 0d04 8D F0                   		mov	a, r8
 1706 0d06 9F 02 00                		mov	!_newDate, a
 1707                             	.L116:
 318:../src/StateMachine.c **** 			}
 319:../src/StateMachine.c **** 		}
 320:../src/StateMachine.c **** 		sprintf(display_string, "Year: 20%02d\x0d\x0a", newDate[0]);
 1708                             		.loc 1 320 0
 1709 0d09 8F 02 00                		mov	a, !_newDate
 1710 0d0c 9D F0                   		mov	r8, a
 1711 0d0e CD F1 00                		mov	r9, #0
 1712 0d11 30 00 00                		movw	ax, #_display_string
 1713 0d14 B8 00                   		movw	[sp], ax
 1714 0d16 30 34 00                		movw	ax, #.LC2
 1715 0d19 B8 02                   		movw	[sp+2], ax
 1716 0d1b AD F0                   		movw	ax, r8
 1717 0d1d B8 04                   		movw	[sp+4], ax
 1718 0d1f FC 00 00 00             		call	!!%code(_sprintf)
 321:../src/StateMachine.c **** 		displayLCD(1);
 1719                             		.loc 1 321 0
 1720 0d23 E6                      		onew	ax
 1721 0d24 B8 00                   		movw	[sp], ax
 1722 0d26 FC 00 00 00             		call	!!%code(_displayLCD)
 322:../src/StateMachine.c **** 		break;
 1723                             		.loc 1 322 0
 1724 0d2a EC 82 13 00             		br	!!.L1
 1725                             	.L104:
 323:../src/StateMachine.c **** 
 324:../src/StateMachine.c **** 	case 14:
 325:../src/StateMachine.c **** 		if (instr == 4) {
 1726                             		.loc 1 325 0
 1727 0d2e A8 24                   		movw	ax, [sp+36]
 1728 0d30 44 04 00                		cmpw	ax, #4
 1729 0d33 61 E8                   		 skz
 1730 0d35 EC 57 0D 00             		 br	!!.L118
 326:../src/StateMachine.c **** 			newDate[1]++;
 1731                             		.loc 1 326 0
 1732 0d39 8F 03 00                		mov	a, !_newDate+1
 1733 0d3c 9D F0                   		mov	r8, a
 1734 0d3e A4 F0                   		inc	r8
 1735 0d40 8D F0                   		mov	a, r8
 1736 0d42 9F 03 00                		mov	!_newDate+1, a
 327:../src/StateMachine.c **** 			if (newDate[1] > 12) {
 1737                             		.loc 1 327 0
 1738 0d45 9D F0                   		mov	r8, a
 1739 0d47 4A F0 0C                		cmp	r8, #12
 1740 0d4a 61 E3                   		 skh
 1741 0d4c EC 84 0D 00             		 br	!!.L120
 328:../src/StateMachine.c **** 				newDate[1] = 0;
 1742                             		.loc 1 328 0
 1743 0d50 F5 03 00                		clrb	!_newDate+1
 1744 0d53 EC 84 0D 00             		br	!!.L120
 1745                             	.L118:
 329:../src/StateMachine.c **** 			}
 330:../src/StateMachine.c **** 		} else if (instr == 3) {
 1746                             		.loc 1 330 0
 1747 0d57 A8 24                   		movw	ax, [sp+36]
 1748 0d59 44 03 00                		cmpw	ax, #3
 1749 0d5c 61 E8                   		 skz
 1750 0d5e EC 84 0D 00             		 br	!!.L120
 331:../src/StateMachine.c **** 			if (newDate[1] == 0) {
 1751                             		.loc 1 331 0
 1752 0d62 8F 03 00                		mov	a, !_newDate+1
 1753 0d65 9D F0                   		mov	r8, a
 1754 0d67 D4 F0                   		cmp0	r8
 1755 0d69 61 E8                   		 skz
 1756 0d6b EC 78 0D 00             		 br	!!.L121
 332:../src/StateMachine.c **** 				newDate[1] = 12;
 1757                             		.loc 1 332 0
 1758 0d6f 51 0C                   		mov	a, #12
 1759 0d71 9F 03 00                		mov	!_newDate+1, a
 1760 0d74 EC 84 0D 00             		br	!!.L120
 1761                             	.L121:
 333:../src/StateMachine.c **** 			} else {
 334:../src/StateMachine.c **** 				newDate[1]--;
 1762                             		.loc 1 334 0
 1763 0d78 8F 03 00                		mov	a, !_newDate+1
 1764 0d7b 9D F0                   		mov	r8, a
 1765 0d7d B4 F0                   		dec	r8
 1766 0d7f 8D F0                   		mov	a, r8
 1767 0d81 9F 03 00                		mov	!_newDate+1, a
 1768                             	.L120:
 335:../src/StateMachine.c **** 			}
 336:../src/StateMachine.c **** 		}
 337:../src/StateMachine.c **** 		sprintf(display_string, "Month: %d\x0d\x0a", newDate[1]);
 1769                             		.loc 1 337 0
 1770 0d84 8F 03 00                		mov	a, !_newDate+1
 1771 0d87 9D F0                   		mov	r8, a
 1772 0d89 CD F1 00                		mov	r9, #0
 1773 0d8c 30 00 00                		movw	ax, #_display_string
 1774 0d8f B8 00                   		movw	[sp], ax
 1775 0d91 30 43 00                		movw	ax, #.LC3
 1776 0d94 B8 02                   		movw	[sp+2], ax
 1777 0d96 AD F0                   		movw	ax, r8
 1778 0d98 B8 04                   		movw	[sp+4], ax
 1779 0d9a FC 00 00 00             		call	!!%code(_sprintf)
 338:../src/StateMachine.c **** 		displayLCD(1);
 1780                             		.loc 1 338 0
 1781 0d9e E6                      		onew	ax
 1782 0d9f B8 00                   		movw	[sp], ax
 1783 0da1 FC 00 00 00             		call	!!%code(_displayLCD)
 339:../src/StateMachine.c **** 		break;
 1784                             		.loc 1 339 0
 1785 0da5 EC 82 13 00             		br	!!.L1
 1786                             	.L111:
 340:../src/StateMachine.c **** 	case 15:
 341:../src/StateMachine.c **** 		if (instr == 4) {
 1787                             		.loc 1 341 0
 1788 0da9 A8 24                   		movw	ax, [sp+36]
 1789 0dab 44 04 00                		cmpw	ax, #4
 1790 0dae 61 E8                   		 skz
 1791 0db0 EC 25 0E 00             		 br	!!.L122
 1792                             	.LBB8:
 342:../src/StateMachine.c **** 			uint8_t daysInMonth[12] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31,
 1793                             		.loc 1 342 0
 1794 0db4 51 1F                   		mov	a, #31
 1795 0db6 98 10                   		mov	[sp+16], a
 1796 0db8 51 1C                   		mov	a, #28
 1797 0dba 98 11                   		mov	[sp+17], a
 1798 0dbc 51 1F                   		mov	a, #31
 1799 0dbe 98 12                   		mov	[sp+18], a
 1800 0dc0 51 1E                   		mov	a, #30
 1801 0dc2 98 13                   		mov	[sp+19], a
 1802 0dc4 51 1F                   		mov	a, #31
 1803 0dc6 98 14                   		mov	[sp+20], a
 1804 0dc8 51 1E                   		mov	a, #30
 1805 0dca 98 15                   		mov	[sp+21], a
 1806 0dcc 51 1F                   		mov	a, #31
 1807 0dce 98 16                   		mov	[sp+22], a
 1808 0dd0 51 1F                   		mov	a, #31
 1809 0dd2 98 17                   		mov	[sp+23], a
 1810 0dd4 51 1E                   		mov	a, #30
 1811 0dd6 98 18                   		mov	[sp+24], a
 1812 0dd8 51 1F                   		mov	a, #31
 1813 0dda 98 19                   		mov	[sp+25], a
 1814 0ddc 51 1E                   		mov	a, #30
 1815 0dde 98 1A                   		mov	[sp+26], a
 1816 0de0 51 1F                   		mov	a, #31
 1817 0de2 98 1B                   		mov	[sp+27], a
 343:../src/StateMachine.c **** 					30, 31 };
 344:../src/StateMachine.c **** 			newDate[2]++;
 1818                             		.loc 1 344 0
 1819 0de4 8F 04 00                		mov	a, !_newDate+2
 1820 0de7 9D F0                   		mov	r8, a
 1821 0de9 A4 F0                   		inc	r8
 1822 0deb 8D F0                   		mov	a, r8
 1823 0ded 9F 04 00                		mov	!_newDate+2, a
 345:../src/StateMachine.c **** 			if (newDate[2] > daysInMonth[newDate[1] - 1]) {
 1824                             		.loc 1 345 0
 1825 0df0 9D F4                   		mov	r12, a
 1826 0df2 8F 03 00                		mov	a, !_newDate+1
 1827 0df5 9D F0                   		mov	r8, a
 1828 0df7 CD F1 00                		mov	r9, #0
 1829 0dfa B6 F0                   		decw	r8
 1830 0dfc AE F8                   		movw	ax, sp
 1831 0dfe BD F6                   		movw	r14, ax
 1832 0e00 04 10 00                		addw	ax, #16
 1833 0e03 BD F2                   		movw	r10, ax
 1834 0e05 06 F0                   		addw	ax, r8
 1835 0e07 BD F0                   		movw	r8, ax
 1836 0e09 BD F2                   		movw	r10, ax
 1837 0e0b FA F2                   		movw	hl, r10
 1838 0e0d 8B                      		mov	a, [hl]
 1839 0e0e 9D F0                   		mov	r8, a
 1840 0e10 8D F4                   		mov	a, r12
 1841 0e12 4B F0                   		cmp	a, r8
 1842 0e14 61 E3                   		 skh
 1843 0e16 EC 21 0E 00             		 br	!!.L123
 346:../src/StateMachine.c **** 				newDate[2] = 0;
 1844                             		.loc 1 346 0
 1845 0e1a F5 04 00                		clrb	!_newDate+2
 1846                             	.LBE8:
 1847 0e1d EC 52 0E 00             		br	!!.L124
 1848                             	.L123:
 1849 0e21 EC 52 0E 00             		br	!!.L124
 1850                             	.L122:
 347:../src/StateMachine.c **** 			}
 348:../src/StateMachine.c **** 		} else if (instr == 3) {
 1851                             		.loc 1 348 0
 1852 0e25 A8 24                   		movw	ax, [sp+36]
 1853 0e27 44 03 00                		cmpw	ax, #3
 1854 0e2a 61 E8                   		 skz
 1855 0e2c EC 52 0E 00             		 br	!!.L124
 349:../src/StateMachine.c **** 			if (newDate[2] == 0) {
 1856                             		.loc 1 349 0
 1857 0e30 8F 04 00                		mov	a, !_newDate+2
 1858 0e33 9D F0                   		mov	r8, a
 1859 0e35 D4 F0                   		cmp0	r8
 1860 0e37 61 E8                   		 skz
 1861 0e39 EC 46 0E 00             		 br	!!.L125
 350:../src/StateMachine.c **** 				newDate[2] = 12;
 1862                             		.loc 1 350 0
 1863 0e3d 51 0C                   		mov	a, #12
 1864 0e3f 9F 04 00                		mov	!_newDate+2, a
 1865 0e42 EC 52 0E 00             		br	!!.L124
 1866                             	.L125:
 351:../src/StateMachine.c **** 			} else {
 352:../src/StateMachine.c **** 				newDate[2]--;
 1867                             		.loc 1 352 0
 1868 0e46 8F 04 00                		mov	a, !_newDate+2
 1869 0e49 9D F0                   		mov	r8, a
 1870 0e4b B4 F0                   		dec	r8
 1871 0e4d 8D F0                   		mov	a, r8
 1872 0e4f 9F 04 00                		mov	!_newDate+2, a
 1873                             	.L124:
 353:../src/StateMachine.c **** 			}
 354:../src/StateMachine.c **** 		}
 355:../src/StateMachine.c **** 		sprintf(display_string, "Day: %d\x0d\x0a", newDate[2]);
 1874                             		.loc 1 355 0
 1875 0e52 8F 04 00                		mov	a, !_newDate+2
 1876 0e55 9D F0                   		mov	r8, a
 1877 0e57 CD F1 00                		mov	r9, #0
 1878 0e5a 30 00 00                		movw	ax, #_display_string
 1879 0e5d B8 00                   		movw	[sp], ax
 1880 0e5f 30 4F 00                		movw	ax, #.LC4
 1881 0e62 B8 02                   		movw	[sp+2], ax
 1882 0e64 AD F0                   		movw	ax, r8
 1883 0e66 B8 04                   		movw	[sp+4], ax
 1884 0e68 FC 00 00 00             		call	!!%code(_sprintf)
 356:../src/StateMachine.c **** 		displayLCD(1);
 1885                             		.loc 1 356 0
 1886 0e6c E6                      		onew	ax
 1887 0e6d B8 00                   		movw	[sp], ax
 1888 0e6f FC 00 00 00             		call	!!%code(_displayLCD)
 357:../src/StateMachine.c **** 		break;
 1889                             		.loc 1 357 0
 1890 0e73 EC 82 13 00             		br	!!.L1
 1891                             	.L110:
 358:../src/StateMachine.c **** 	case 16:
 359:../src/StateMachine.c **** 		if (instr == 4) {
 1892                             		.loc 1 359 0
 1893 0e77 A8 24                   		movw	ax, [sp+36]
 1894 0e79 44 04 00                		cmpw	ax, #4
 1895 0e7c 61 E8                   		 skz
 1896 0e7e EC A0 0E 00             		 br	!!.L126
 360:../src/StateMachine.c **** 			newDate[3]++;
 1897                             		.loc 1 360 0
 1898 0e82 8F 05 00                		mov	a, !_newDate+3
 1899 0e85 9D F0                   		mov	r8, a
 1900 0e87 A4 F0                   		inc	r8
 1901 0e89 8D F0                   		mov	a, r8
 1902 0e8b 9F 05 00                		mov	!_newDate+3, a
 361:../src/StateMachine.c **** 			if (newDate[3] > 24) {
 1903                             		.loc 1 361 0
 1904 0e8e 9D F0                   		mov	r8, a
 1905 0e90 4A F0 18                		cmp	r8, #24
 1906 0e93 61 E3                   		 skh
 1907 0e95 EC CD 0E 00             		 br	!!.L128
 362:../src/StateMachine.c **** 				newDate[3] = 0;
 1908                             		.loc 1 362 0
 1909 0e99 F5 05 00                		clrb	!_newDate+3
 1910 0e9c EC CD 0E 00             		br	!!.L128
 1911                             	.L126:
 363:../src/StateMachine.c **** 			}
 364:../src/StateMachine.c **** 		} else if (instr == 3) {
 1912                             		.loc 1 364 0
 1913 0ea0 A8 24                   		movw	ax, [sp+36]
 1914 0ea2 44 03 00                		cmpw	ax, #3
 1915 0ea5 61 E8                   		 skz
 1916 0ea7 EC CD 0E 00             		 br	!!.L128
 365:../src/StateMachine.c **** 			if (newDate[3] == 0) {
 1917                             		.loc 1 365 0
 1918 0eab 8F 05 00                		mov	a, !_newDate+3
 1919 0eae 9D F0                   		mov	r8, a
 1920 0eb0 D4 F0                   		cmp0	r8
 1921 0eb2 61 E8                   		 skz
 1922 0eb4 EC C1 0E 00             		 br	!!.L129
 366:../src/StateMachine.c **** 				newDate[3] = 24;
 1923                             		.loc 1 366 0
 1924 0eb8 51 18                   		mov	a, #24
 1925 0eba 9F 05 00                		mov	!_newDate+3, a
 1926 0ebd EC CD 0E 00             		br	!!.L128
 1927                             	.L129:
 367:../src/StateMachine.c **** 			} else {
 368:../src/StateMachine.c **** 				newDate[3]--;
 1928                             		.loc 1 368 0
 1929 0ec1 8F 05 00                		mov	a, !_newDate+3
 1930 0ec4 9D F0                   		mov	r8, a
 1931 0ec6 B4 F0                   		dec	r8
 1932 0ec8 8D F0                   		mov	a, r8
 1933 0eca 9F 05 00                		mov	!_newDate+3, a
 1934                             	.L128:
 369:../src/StateMachine.c **** 			}
 370:../src/StateMachine.c **** 		}
 371:../src/StateMachine.c **** 		sprintf(display_string, "Hour: %d\x0d\x0a", newDate[3]);
 1935                             		.loc 1 371 0
 1936 0ecd 8F 05 00                		mov	a, !_newDate+3
 1937 0ed0 9D F0                   		mov	r8, a
 1938 0ed2 CD F1 00                		mov	r9, #0
 1939 0ed5 30 00 00                		movw	ax, #_display_string
 1940 0ed8 B8 00                   		movw	[sp], ax
 1941 0eda 30 59 00                		movw	ax, #.LC5
 1942 0edd B8 02                   		movw	[sp+2], ax
 1943 0edf AD F0                   		movw	ax, r8
 1944 0ee1 B8 04                   		movw	[sp+4], ax
 1945 0ee3 FC 00 00 00             		call	!!%code(_sprintf)
 372:../src/StateMachine.c **** 		displayLCD(1);
 1946                             		.loc 1 372 0
 1947 0ee7 E6                      		onew	ax
 1948 0ee8 B8 00                   		movw	[sp], ax
 1949 0eea FC 00 00 00             		call	!!%code(_displayLCD)
 373:../src/StateMachine.c **** 		break;
 1950                             		.loc 1 373 0
 1951 0eee EC 82 13 00             		br	!!.L1
 1952                             	.L112:
 374:../src/StateMachine.c **** 	case 17:
 375:../src/StateMachine.c **** 		if (instr == 4) {
 1953                             		.loc 1 375 0
 1954 0ef2 A8 24                   		movw	ax, [sp+36]
 1955 0ef4 44 04 00                		cmpw	ax, #4
 1956 0ef7 61 E8                   		 skz
 1957 0ef9 EC 1B 0F 00             		 br	!!.L130
 376:../src/StateMachine.c **** 			newDate[4]++;
 1958                             		.loc 1 376 0
 1959 0efd 8F 06 00                		mov	a, !_newDate+4
 1960 0f00 9D F0                   		mov	r8, a
 1961 0f02 A4 F0                   		inc	r8
 1962 0f04 8D F0                   		mov	a, r8
 1963 0f06 9F 06 00                		mov	!_newDate+4, a
 377:../src/StateMachine.c **** 			if (newDate[4] > 59) {
 1964                             		.loc 1 377 0
 1965 0f09 9D F0                   		mov	r8, a
 1966 0f0b 4A F0 3B                		cmp	r8, #59
 1967 0f0e 61 E3                   		 skh
 1968 0f10 EC 48 0F 00             		 br	!!.L132
 378:../src/StateMachine.c **** 				newDate[4] = 0;
 1969                             		.loc 1 378 0
 1970 0f14 F5 06 00                		clrb	!_newDate+4
 1971 0f17 EC 48 0F 00             		br	!!.L132
 1972                             	.L130:
 379:../src/StateMachine.c **** 			}
 380:../src/StateMachine.c **** 		} else if (instr == 3) {
 1973                             		.loc 1 380 0
 1974 0f1b A8 24                   		movw	ax, [sp+36]
 1975 0f1d 44 03 00                		cmpw	ax, #3
 1976 0f20 61 E8                   		 skz
 1977 0f22 EC 48 0F 00             		 br	!!.L132
 381:../src/StateMachine.c **** 			if (newDate[4] == 0) {
 1978                             		.loc 1 381 0
 1979 0f26 8F 06 00                		mov	a, !_newDate+4
 1980 0f29 9D F0                   		mov	r8, a
 1981 0f2b D4 F0                   		cmp0	r8
 1982 0f2d 61 E8                   		 skz
 1983 0f2f EC 3C 0F 00             		 br	!!.L133
 382:../src/StateMachine.c **** 				newDate[4] = 59;
 1984                             		.loc 1 382 0
 1985 0f33 51 3B                   		mov	a, #59
 1986 0f35 9F 06 00                		mov	!_newDate+4, a
 1987 0f38 EC 48 0F 00             		br	!!.L132
 1988                             	.L133:
 383:../src/StateMachine.c **** 			} else {
 384:../src/StateMachine.c **** 				newDate[4]--;
 1989                             		.loc 1 384 0
 1990 0f3c 8F 06 00                		mov	a, !_newDate+4
 1991 0f3f 9D F0                   		mov	r8, a
 1992 0f41 B4 F0                   		dec	r8
 1993 0f43 8D F0                   		mov	a, r8
 1994 0f45 9F 06 00                		mov	!_newDate+4, a
 1995                             	.L132:
 385:../src/StateMachine.c **** 			}
 386:../src/StateMachine.c **** 		}
 387:../src/StateMachine.c **** 		sprintf(display_string, "Minute: %d\x0d\x0a", newDate[4]);
 1996                             		.loc 1 387 0
 1997 0f48 8F 06 00                		mov	a, !_newDate+4
 1998 0f4b 9D F0                   		mov	r8, a
 1999 0f4d CD F1 00                		mov	r9, #0
 2000 0f50 30 00 00                		movw	ax, #_display_string
 2001 0f53 B8 00                   		movw	[sp], ax
 2002 0f55 30 64 00                		movw	ax, #.LC6
 2003 0f58 B8 02                   		movw	[sp+2], ax
 2004 0f5a AD F0                   		movw	ax, r8
 2005 0f5c B8 04                   		movw	[sp+4], ax
 2006 0f5e FC 00 00 00             		call	!!%code(_sprintf)
 388:../src/StateMachine.c **** 		displayLCD(1);
 2007                             		.loc 1 388 0
 2008 0f62 E6                      		onew	ax
 2009 0f63 B8 00                   		movw	[sp], ax
 2010 0f65 FC 00 00 00             		call	!!%code(_displayLCD)
 389:../src/StateMachine.c **** 		break;
 2011                             		.loc 1 389 0
 2012 0f69 EC 82 13 00             		br	!!.L1
 2013                             	.L113:
 390:../src/StateMachine.c **** 	case 18:
 391:../src/StateMachine.c **** 		if (instr == 4) {
 2014                             		.loc 1 391 0
 2015 0f6d A8 24                   		movw	ax, [sp+36]
 2016 0f6f 44 04 00                		cmpw	ax, #4
 2017 0f72 61 E8                   		 skz
 2018 0f74 EC 96 0F 00             		 br	!!.L134
 392:../src/StateMachine.c **** 			newDate[5]++;
 2019                             		.loc 1 392 0
 2020 0f78 8F 07 00                		mov	a, !_newDate+5
 2021 0f7b 9D F0                   		mov	r8, a
 2022 0f7d A4 F0                   		inc	r8
 2023 0f7f 8D F0                   		mov	a, r8
 2024 0f81 9F 07 00                		mov	!_newDate+5, a
 393:../src/StateMachine.c **** 			if (newDate[5] > 59) {
 2025                             		.loc 1 393 0
 2026 0f84 9D F0                   		mov	r8, a
 2027 0f86 4A F0 3B                		cmp	r8, #59
 2028 0f89 61 E3                   		 skh
 2029 0f8b EC C3 0F 00             		 br	!!.L136
 394:../src/StateMachine.c **** 				newDate[5] = 0;
 2030                             		.loc 1 394 0
 2031 0f8f F5 07 00                		clrb	!_newDate+5
 2032 0f92 EC C3 0F 00             		br	!!.L136
 2033                             	.L134:
 395:../src/StateMachine.c **** 			}
 396:../src/StateMachine.c **** 		} else if (instr == 3) {
 2034                             		.loc 1 396 0
 2035 0f96 A8 24                   		movw	ax, [sp+36]
 2036 0f98 44 03 00                		cmpw	ax, #3
 2037 0f9b 61 E8                   		 skz
 2038 0f9d EC C3 0F 00             		 br	!!.L136
 397:../src/StateMachine.c **** 			if (newDate[5] == 0) {
 2039                             		.loc 1 397 0
 2040 0fa1 8F 07 00                		mov	a, !_newDate+5
 2041 0fa4 9D F0                   		mov	r8, a
 2042 0fa6 D4 F0                   		cmp0	r8
 2043 0fa8 61 E8                   		 skz
 2044 0faa EC B7 0F 00             		 br	!!.L137
 398:../src/StateMachine.c **** 				newDate[5] = 59;
 2045                             		.loc 1 398 0
 2046 0fae 51 3B                   		mov	a, #59
 2047 0fb0 9F 07 00                		mov	!_newDate+5, a
 2048 0fb3 EC C3 0F 00             		br	!!.L136
 2049                             	.L137:
 399:../src/StateMachine.c **** 			} else {
 400:../src/StateMachine.c **** 				newDate[5]--;
 2050                             		.loc 1 400 0
 2051 0fb7 8F 07 00                		mov	a, !_newDate+5
 2052 0fba 9D F0                   		mov	r8, a
 2053 0fbc B4 F0                   		dec	r8
 2054 0fbe 8D F0                   		mov	a, r8
 2055 0fc0 9F 07 00                		mov	!_newDate+5, a
 2056                             	.L136:
 401:../src/StateMachine.c **** 			}
 402:../src/StateMachine.c **** 		}
 403:../src/StateMachine.c **** 		sprintf(display_string, "Second: %d\x0d\x0a", newDate[5]);
 2057                             		.loc 1 403 0
 2058 0fc3 8F 07 00                		mov	a, !_newDate+5
 2059 0fc6 9D F0                   		mov	r8, a
 2060 0fc8 CD F1 00                		mov	r9, #0
 2061 0fcb 30 00 00                		movw	ax, #_display_string
 2062 0fce B8 00                   		movw	[sp], ax
 2063 0fd0 30 71 00                		movw	ax, #.LC7
 2064 0fd3 B8 02                   		movw	[sp+2], ax
 2065 0fd5 AD F0                   		movw	ax, r8
 2066 0fd7 B8 04                   		movw	[sp+4], ax
 2067 0fd9 FC 00 00 00             		call	!!%code(_sprintf)
 404:../src/StateMachine.c **** 		displayLCD(1);
 2068                             		.loc 1 404 0
 2069 0fdd E6                      		onew	ax
 2070 0fde B8 00                   		movw	[sp], ax
 2071 0fe0 FC 00 00 00             		call	!!%code(_displayLCD)
 405:../src/StateMachine.c **** 		break;
 2072                             		.loc 1 405 0
 2073 0fe4 EC 82 13 00             		br	!!.L1
 2074                             	.L101:
 406:../src/StateMachine.c **** 	case 5:
 407:../src/StateMachine.c **** 		strcpy(display_string, "Switch state = 0\x0d\x0a");
 2075                             		.loc 1 407 0
 2076 0fe8 51 53                   		mov	a, #83
 2077 0fea 9F 00 00                		mov	!_display_string, a
 2078 0fed 51 77                   		mov	a, #119
 2079 0fef 9F 00 00                		mov	!_display_string+1, a
 2080 0ff2 51 69                   		mov	a, #105
 2081 0ff4 9F 00 00                		mov	!_display_string+2, a
 2082 0ff7 51 74                   		mov	a, #116
 2083 0ff9 9F 00 00                		mov	!_display_string+3, a
 2084 0ffc 51 63                   		mov	a, #99
 2085 0ffe 9F 00 00                		mov	!_display_string+4, a
 2086 1001 51 68                   		mov	a, #104
 2087 1003 9F 00 00                		mov	!_display_string+5, a
 2088 1006 51 20                   		mov	a, #32
 2089 1008 9F 00 00                		mov	!_display_string+6, a
 2090 100b 51 73                   		mov	a, #115
 2091 100d 9F 00 00                		mov	!_display_string+7, a
 2092 1010 51 74                   		mov	a, #116
 2093 1012 9F 00 00                		mov	!_display_string+8, a
 2094 1015 51 61                   		mov	a, #97
 2095 1017 9F 00 00                		mov	!_display_string+9, a
 2096 101a 51 74                   		mov	a, #116
 2097 101c 9F 00 00                		mov	!_display_string+10, a
 2098 101f 51 65                   		mov	a, #101
 2099 1021 9F 00 00                		mov	!_display_string+11, a
 2100 1024 51 20                   		mov	a, #32
 2101 1026 9F 00 00                		mov	!_display_string+12, a
 2102 1029 51 3D                   		mov	a, #61
 2103 102b 9F 00 00                		mov	!_display_string+13, a
 2104 102e 51 20                   		mov	a, #32
 2105 1030 9F 00 00                		mov	!_display_string+14, a
 2106 1033 51 30                   		mov	a, #48
 2107 1035 9F 00 00                		mov	!_display_string+15, a
 2108 1038 51 0D                   		mov	a, #13
 2109 103a 9F 00 00                		mov	!_display_string+16, a
 2110 103d 51 0A                   		mov	a, #10
 2111 103f 9F 00 00                		mov	!_display_string+17, a
 2112 1042 F5 00 00                		clrb	!_display_string+18
 408:../src/StateMachine.c **** 		displayLCD(1);
 2113                             		.loc 1 408 0
 2114 1045 E6                      		onew	ax
 2115 1046 B8 00                   		movw	[sp], ax
 2116 1048 FC 00 00 00             		call	!!%code(_displayLCD)
 409:../src/StateMachine.c **** 		P4_bit.no1 = 0;
 2117                             		.loc 1 409 0
 2118 104c C9 F0 04 FF             		movw	r8, #-252
 2119 1050 AD F0                   		movw	ax, r8
 2120 1052 BD F4                   		movw	r12, ax
 2121 1054 FA F4                   		movw	hl, r12
 2122 1056 8B                      		mov	a, [hl]
 2123 1057 9D F2                   		mov	r10, a
 2124 1059 5A F2 FD                		and	r10, #-3
 2125 105c AD F0                   		movw	ax, r8
 2126 105e BD F6                   		movw	r14, ax
 2127 1060 DA F6                   		movw	bc, r14
 2128 1062 8D F2                   		mov	a, r10
 2129 1064 48 00 00                		mov	[bc], a
 410:../src/StateMachine.c **** 		P4_bit.no2 = 0;
 2130                             		.loc 1 410 0
 2131 1067 C9 F0 04 FF             		movw	r8, #-252
 2132 106b AD F0                   		movw	ax, r8
 2133 106d BD F4                   		movw	r12, ax
 2134 106f FA F4                   		movw	hl, r12
 2135 1071 8B                      		mov	a, [hl]
 2136 1072 9D F2                   		mov	r10, a
 2137 1074 5A F2 FB                		and	r10, #-5
 2138 1077 AD F0                   		movw	ax, r8
 2139 1079 BD F6                   		movw	r14, ax
 2140 107b DA F6                   		movw	bc, r14
 2141 107d 8D F2                   		mov	a, r10
 2142 107f 48 00 00                		mov	[bc], a
 411:../src/StateMachine.c **** 		P4_bit.no3 = 0;
 2143                             		.loc 1 411 0
 2144 1082 C9 F0 04 FF             		movw	r8, #-252
 2145 1086 AD F0                   		movw	ax, r8
 2146 1088 BD F4                   		movw	r12, ax
 2147 108a FA F4                   		movw	hl, r12
 2148 108c 8B                      		mov	a, [hl]
 2149 108d 9D F2                   		mov	r10, a
 2150 108f 5A F2 F7                		and	r10, #-9
 2151 1092 AD F0                   		movw	ax, r8
 2152 1094 BD F6                   		movw	r14, ax
 2153 1096 DA F6                   		movw	bc, r14
 2154 1098 8D F2                   		mov	a, r10
 2155 109a 48 00 00                		mov	[bc], a
 412:../src/StateMachine.c **** 		break;
 2156                             		.loc 1 412 0
 2157 109d EC 82 13 00             		br	!!.L1
 2158                             	.L100:
 413:../src/StateMachine.c **** 	case 6:
 414:../src/StateMachine.c **** 		strcpy(display_string, "Switch state = 1\x0d\x0a");
 2159                             		.loc 1 414 0
 2160 10a1 51 53                   		mov	a, #83
 2161 10a3 9F 00 00                		mov	!_display_string, a
 2162 10a6 51 77                   		mov	a, #119
 2163 10a8 9F 00 00                		mov	!_display_string+1, a
 2164 10ab 51 69                   		mov	a, #105
 2165 10ad 9F 00 00                		mov	!_display_string+2, a
 2166 10b0 51 74                   		mov	a, #116
 2167 10b2 9F 00 00                		mov	!_display_string+3, a
 2168 10b5 51 63                   		mov	a, #99
 2169 10b7 9F 00 00                		mov	!_display_string+4, a
 2170 10ba 51 68                   		mov	a, #104
 2171 10bc 9F 00 00                		mov	!_display_string+5, a
 2172 10bf 51 20                   		mov	a, #32
 2173 10c1 9F 00 00                		mov	!_display_string+6, a
 2174 10c4 51 73                   		mov	a, #115
 2175 10c6 9F 00 00                		mov	!_display_string+7, a
 2176 10c9 51 74                   		mov	a, #116
 2177 10cb 9F 00 00                		mov	!_display_string+8, a
 2178 10ce 51 61                   		mov	a, #97
 2179 10d0 9F 00 00                		mov	!_display_string+9, a
 2180 10d3 51 74                   		mov	a, #116
 2181 10d5 9F 00 00                		mov	!_display_string+10, a
 2182 10d8 51 65                   		mov	a, #101
 2183 10da 9F 00 00                		mov	!_display_string+11, a
 2184 10dd 51 20                   		mov	a, #32
 2185 10df 9F 00 00                		mov	!_display_string+12, a
 2186 10e2 51 3D                   		mov	a, #61
 2187 10e4 9F 00 00                		mov	!_display_string+13, a
 2188 10e7 51 20                   		mov	a, #32
 2189 10e9 9F 00 00                		mov	!_display_string+14, a
 2190 10ec 51 31                   		mov	a, #49
 2191 10ee 9F 00 00                		mov	!_display_string+15, a
 2192 10f1 51 0D                   		mov	a, #13
 2193 10f3 9F 00 00                		mov	!_display_string+16, a
 2194 10f6 51 0A                   		mov	a, #10
 2195 10f8 9F 00 00                		mov	!_display_string+17, a
 2196 10fb F5 00 00                		clrb	!_display_string+18
 415:../src/StateMachine.c **** 		displayLCD(1);
 2197                             		.loc 1 415 0
 2198 10fe E6                      		onew	ax
 2199 10ff B8 00                   		movw	[sp], ax
 2200 1101 FC 00 00 00             		call	!!%code(_displayLCD)
 416:../src/StateMachine.c **** 		P4_bit.no1 = 0;
 2201                             		.loc 1 416 0
 2202 1105 C9 F0 04 FF             		movw	r8, #-252
 2203 1109 AD F0                   		movw	ax, r8
 2204 110b BD F4                   		movw	r12, ax
 2205 110d FA F4                   		movw	hl, r12
 2206 110f 8B                      		mov	a, [hl]
 2207 1110 9D F2                   		mov	r10, a
 2208 1112 5A F2 FD                		and	r10, #-3
 2209 1115 AD F0                   		movw	ax, r8
 2210 1117 BD F6                   		movw	r14, ax
 2211 1119 DA F6                   		movw	bc, r14
 2212 111b 8D F2                   		mov	a, r10
 2213 111d 48 00 00                		mov	[bc], a
 417:../src/StateMachine.c **** 		P4_bit.no2 = 0;
 2214                             		.loc 1 417 0
 2215 1120 C9 F0 04 FF             		movw	r8, #-252
 2216 1124 AD F0                   		movw	ax, r8
 2217 1126 BD F4                   		movw	r12, ax
 2218 1128 FA F4                   		movw	hl, r12
 2219 112a 8B                      		mov	a, [hl]
 2220 112b 9D F2                   		mov	r10, a
 2221 112d 5A F2 FB                		and	r10, #-5
 2222 1130 AD F0                   		movw	ax, r8
 2223 1132 BD F6                   		movw	r14, ax
 2224 1134 DA F6                   		movw	bc, r14
 2225 1136 8D F2                   		mov	a, r10
 2226 1138 48 00 00                		mov	[bc], a
 418:../src/StateMachine.c **** 		P4_bit.no3 = 1;
 2227                             		.loc 1 418 0
 2228 113b C9 F0 04 FF             		movw	r8, #-252
 2229 113f AD F0                   		movw	ax, r8
 2230 1141 BD F4                   		movw	r12, ax
 2231 1143 FA F4                   		movw	hl, r12
 2232 1145 8B                      		mov	a, [hl]
 2233 1146 9D F2                   		mov	r10, a
 2234 1148 6A F2 08                		or	r10, #8
 2235 114b AD F0                   		movw	ax, r8
 2236 114d BD F6                   		movw	r14, ax
 2237 114f DA F6                   		movw	bc, r14
 2238 1151 8D F2                   		mov	a, r10
 2239 1153 48 00 00                		mov	[bc], a
 419:../src/StateMachine.c **** 		break;
 2240                             		.loc 1 419 0
 2241 1156 EC 82 13 00             		br	!!.L1
 2242                             	.L102:
 420:../src/StateMachine.c **** 	case 7:
 421:../src/StateMachine.c **** 		strcpy(display_string, "Switch state = 2\x0d\x0a");
 2243                             		.loc 1 421 0
 2244 115a 51 53                   		mov	a, #83
 2245 115c 9F 00 00                		mov	!_display_string, a
 2246 115f 51 77                   		mov	a, #119
 2247 1161 9F 00 00                		mov	!_display_string+1, a
 2248 1164 51 69                   		mov	a, #105
 2249 1166 9F 00 00                		mov	!_display_string+2, a
 2250 1169 51 74                   		mov	a, #116
 2251 116b 9F 00 00                		mov	!_display_string+3, a
 2252 116e 51 63                   		mov	a, #99
 2253 1170 9F 00 00                		mov	!_display_string+4, a
 2254 1173 51 68                   		mov	a, #104
 2255 1175 9F 00 00                		mov	!_display_string+5, a
 2256 1178 51 20                   		mov	a, #32
 2257 117a 9F 00 00                		mov	!_display_string+6, a
 2258 117d 51 73                   		mov	a, #115
 2259 117f 9F 00 00                		mov	!_display_string+7, a
 2260 1182 51 74                   		mov	a, #116
 2261 1184 9F 00 00                		mov	!_display_string+8, a
 2262 1187 51 61                   		mov	a, #97
 2263 1189 9F 00 00                		mov	!_display_string+9, a
 2264 118c 51 74                   		mov	a, #116
 2265 118e 9F 00 00                		mov	!_display_string+10, a
 2266 1191 51 65                   		mov	a, #101
 2267 1193 9F 00 00                		mov	!_display_string+11, a
 2268 1196 51 20                   		mov	a, #32
 2269 1198 9F 00 00                		mov	!_display_string+12, a
 2270 119b 51 3D                   		mov	a, #61
 2271 119d 9F 00 00                		mov	!_display_string+13, a
 2272 11a0 51 20                   		mov	a, #32
 2273 11a2 9F 00 00                		mov	!_display_string+14, a
 2274 11a5 51 32                   		mov	a, #50
 2275 11a7 9F 00 00                		mov	!_display_string+15, a
 2276 11aa 51 0D                   		mov	a, #13
 2277 11ac 9F 00 00                		mov	!_display_string+16, a
 2278 11af 51 0A                   		mov	a, #10
 2279 11b1 9F 00 00                		mov	!_display_string+17, a
 2280 11b4 F5 00 00                		clrb	!_display_string+18
 422:../src/StateMachine.c **** 		displayLCD(1);
 2281                             		.loc 1 422 0
 2282 11b7 E6                      		onew	ax
 2283 11b8 B8 00                   		movw	[sp], ax
 2284 11ba FC 00 00 00             		call	!!%code(_displayLCD)
 423:../src/StateMachine.c **** 		P4_bit.no1 = 1;
 2285                             		.loc 1 423 0
 2286 11be C9 F0 04 FF             		movw	r8, #-252
 2287 11c2 AD F0                   		movw	ax, r8
 2288 11c4 BD F4                   		movw	r12, ax
 2289 11c6 FA F4                   		movw	hl, r12
 2290 11c8 8B                      		mov	a, [hl]
 2291 11c9 9D F2                   		mov	r10, a
 2292 11cb 6A F2 02                		or	r10, #2
 2293 11ce AD F0                   		movw	ax, r8
 2294 11d0 BD F6                   		movw	r14, ax
 2295 11d2 DA F6                   		movw	bc, r14
 2296 11d4 8D F2                   		mov	a, r10
 2297 11d6 48 00 00                		mov	[bc], a
 424:../src/StateMachine.c **** 		P4_bit.no2 = 0;
 2298                             		.loc 1 424 0
 2299 11d9 C9 F0 04 FF             		movw	r8, #-252
 2300 11dd AD F0                   		movw	ax, r8
 2301 11df BD F4                   		movw	r12, ax
 2302 11e1 FA F4                   		movw	hl, r12
 2303 11e3 8B                      		mov	a, [hl]
 2304 11e4 9D F2                   		mov	r10, a
 2305 11e6 5A F2 FB                		and	r10, #-5
 2306 11e9 AD F0                   		movw	ax, r8
 2307 11eb BD F6                   		movw	r14, ax
 2308 11ed DA F6                   		movw	bc, r14
 2309 11ef 8D F2                   		mov	a, r10
 2310 11f1 48 00 00                		mov	[bc], a
 425:../src/StateMachine.c **** 		P4_bit.no3 = 0;
 2311                             		.loc 1 425 0
 2312 11f4 C9 F0 04 FF             		movw	r8, #-252
 2313 11f8 AD F0                   		movw	ax, r8
 2314 11fa BD F4                   		movw	r12, ax
 2315 11fc FA F4                   		movw	hl, r12
 2316 11fe 8B                      		mov	a, [hl]
 2317 11ff 9D F2                   		mov	r10, a
 2318 1201 5A F2 F7                		and	r10, #-9
 2319 1204 AD F0                   		movw	ax, r8
 2320 1206 BD F6                   		movw	r14, ax
 2321 1208 DA F6                   		movw	bc, r14
 2322 120a 8D F2                   		mov	a, r10
 2323 120c 48 00 00                		mov	[bc], a
 426:../src/StateMachine.c **** 		break;
 2324                             		.loc 1 426 0
 2325 120f EC 82 13 00             		br	!!.L1
 2326                             	.L103:
 427:../src/StateMachine.c **** 	case 8:
 428:../src/StateMachine.c **** 		strcpy(display_string, "Switch state = 3\x0d\x0a");
 2327                             		.loc 1 428 0
 2328 1213 51 53                   		mov	a, #83
 2329 1215 9F 00 00                		mov	!_display_string, a
 2330 1218 51 77                   		mov	a, #119
 2331 121a 9F 00 00                		mov	!_display_string+1, a
 2332 121d 51 69                   		mov	a, #105
 2333 121f 9F 00 00                		mov	!_display_string+2, a
 2334 1222 51 74                   		mov	a, #116
 2335 1224 9F 00 00                		mov	!_display_string+3, a
 2336 1227 51 63                   		mov	a, #99
 2337 1229 9F 00 00                		mov	!_display_string+4, a
 2338 122c 51 68                   		mov	a, #104
 2339 122e 9F 00 00                		mov	!_display_string+5, a
 2340 1231 51 20                   		mov	a, #32
 2341 1233 9F 00 00                		mov	!_display_string+6, a
 2342 1236 51 73                   		mov	a, #115
 2343 1238 9F 00 00                		mov	!_display_string+7, a
 2344 123b 51 74                   		mov	a, #116
 2345 123d 9F 00 00                		mov	!_display_string+8, a
 2346 1240 51 61                   		mov	a, #97
 2347 1242 9F 00 00                		mov	!_display_string+9, a
 2348 1245 51 74                   		mov	a, #116
 2349 1247 9F 00 00                		mov	!_display_string+10, a
 2350 124a 51 65                   		mov	a, #101
 2351 124c 9F 00 00                		mov	!_display_string+11, a
 2352 124f 51 20                   		mov	a, #32
 2353 1251 9F 00 00                		mov	!_display_string+12, a
 2354 1254 51 3D                   		mov	a, #61
 2355 1256 9F 00 00                		mov	!_display_string+13, a
 2356 1259 51 20                   		mov	a, #32
 2357 125b 9F 00 00                		mov	!_display_string+14, a
 2358 125e 51 33                   		mov	a, #51
 2359 1260 9F 00 00                		mov	!_display_string+15, a
 2360 1263 51 0D                   		mov	a, #13
 2361 1265 9F 00 00                		mov	!_display_string+16, a
 2362 1268 51 0A                   		mov	a, #10
 2363 126a 9F 00 00                		mov	!_display_string+17, a
 2364 126d F5 00 00                		clrb	!_display_string+18
 429:../src/StateMachine.c **** 		displayLCD(1);
 2365                             		.loc 1 429 0
 2366 1270 E6                      		onew	ax
 2367 1271 B8 00                   		movw	[sp], ax
 2368 1273 FC 00 00 00             		call	!!%code(_displayLCD)
 430:../src/StateMachine.c **** 		P4_bit.no1 = 0;
 2369                             		.loc 1 430 0
 2370 1277 C9 F0 04 FF             		movw	r8, #-252
 2371 127b AD F0                   		movw	ax, r8
 2372 127d BD F4                   		movw	r12, ax
 2373 127f FA F4                   		movw	hl, r12
 2374 1281 8B                      		mov	a, [hl]
 2375 1282 9D F2                   		mov	r10, a
 2376 1284 5A F2 FD                		and	r10, #-3
 2377 1287 AD F0                   		movw	ax, r8
 2378 1289 BD F6                   		movw	r14, ax
 2379 128b DA F6                   		movw	bc, r14
 2380 128d 8D F2                   		mov	a, r10
 2381 128f 48 00 00                		mov	[bc], a
 431:../src/StateMachine.c **** 		P4_bit.no2 = 1;
 2382                             		.loc 1 431 0
 2383 1292 C9 F0 04 FF             		movw	r8, #-252
 2384 1296 AD F0                   		movw	ax, r8
 2385 1298 BD F4                   		movw	r12, ax
 2386 129a FA F4                   		movw	hl, r12
 2387 129c 8B                      		mov	a, [hl]
 2388 129d 9D F2                   		mov	r10, a
 2389 129f 6A F2 04                		or	r10, #4
 2390 12a2 AD F0                   		movw	ax, r8
 2391 12a4 BD F6                   		movw	r14, ax
 2392 12a6 DA F6                   		movw	bc, r14
 2393 12a8 8D F2                   		mov	a, r10
 2394 12aa 48 00 00                		mov	[bc], a
 432:../src/StateMachine.c **** 		P4_bit.no3 = 0;
 2395                             		.loc 1 432 0
 2396 12ad C9 F0 04 FF             		movw	r8, #-252
 2397 12b1 AD F0                   		movw	ax, r8
 2398 12b3 BD F4                   		movw	r12, ax
 2399 12b5 FA F4                   		movw	hl, r12
 2400 12b7 8B                      		mov	a, [hl]
 2401 12b8 9D F2                   		mov	r10, a
 2402 12ba 5A F2 F7                		and	r10, #-9
 2403 12bd AD F0                   		movw	ax, r8
 2404 12bf BD F6                   		movw	r14, ax
 2405 12c1 DA F6                   		movw	bc, r14
 2406 12c3 8D F2                   		mov	a, r10
 2407 12c5 48 00 00                		mov	[bc], a
 433:../src/StateMachine.c **** 		break;
 2408                             		.loc 1 433 0
 2409 12c8 EC 82 13 00             		br	!!.L1
 2410                             	.L91:
 434:../src/StateMachine.c **** 	case 9:
 435:../src/StateMachine.c **** 		strcpy(display_string, "Switch state = 4\x0d\x0a");
 2411                             		.loc 1 435 0
 2412 12cc 51 53                   		mov	a, #83
 2413 12ce 9F 00 00                		mov	!_display_string, a
 2414 12d1 51 77                   		mov	a, #119
 2415 12d3 9F 00 00                		mov	!_display_string+1, a
 2416 12d6 51 69                   		mov	a, #105
 2417 12d8 9F 00 00                		mov	!_display_string+2, a
 2418 12db 51 74                   		mov	a, #116
 2419 12dd 9F 00 00                		mov	!_display_string+3, a
 2420 12e0 51 63                   		mov	a, #99
 2421 12e2 9F 00 00                		mov	!_display_string+4, a
 2422 12e5 51 68                   		mov	a, #104
 2423 12e7 9F 00 00                		mov	!_display_string+5, a
 2424 12ea 51 20                   		mov	a, #32
 2425 12ec 9F 00 00                		mov	!_display_string+6, a
 2426 12ef 51 73                   		mov	a, #115
 2427 12f1 9F 00 00                		mov	!_display_string+7, a
 2428 12f4 51 74                   		mov	a, #116
 2429 12f6 9F 00 00                		mov	!_display_string+8, a
 2430 12f9 51 61                   		mov	a, #97
 2431 12fb 9F 00 00                		mov	!_display_string+9, a
 2432 12fe 51 74                   		mov	a, #116
 2433 1300 9F 00 00                		mov	!_display_string+10, a
 2434 1303 51 65                   		mov	a, #101
 2435 1305 9F 00 00                		mov	!_display_string+11, a
 2436 1308 51 20                   		mov	a, #32
 2437 130a 9F 00 00                		mov	!_display_string+12, a
 2438 130d 51 3D                   		mov	a, #61
 2439 130f 9F 00 00                		mov	!_display_string+13, a
 2440 1312 51 20                   		mov	a, #32
 2441 1314 9F 00 00                		mov	!_display_string+14, a
 2442 1317 51 34                   		mov	a, #52
 2443 1319 9F 00 00                		mov	!_display_string+15, a
 2444 131c 51 0D                   		mov	a, #13
 2445 131e 9F 00 00                		mov	!_display_string+16, a
 2446 1321 51 0A                   		mov	a, #10
 2447 1323 9F 00 00                		mov	!_display_string+17, a
 2448 1326 F5 00 00                		clrb	!_display_string+18
 436:../src/StateMachine.c **** 		displayLCD(1);
 2449                             		.loc 1 436 0
 2450 1329 E6                      		onew	ax
 2451 132a B8 00                   		movw	[sp], ax
 2452 132c FC 00 00 00             		call	!!%code(_displayLCD)
 437:../src/StateMachine.c **** 		P4_bit.no1 = 1;
 2453                             		.loc 1 437 0
 2454 1330 C9 F0 04 FF             		movw	r8, #-252
 2455 1334 AD F0                   		movw	ax, r8
 2456 1336 BD F4                   		movw	r12, ax
 2457 1338 FA F4                   		movw	hl, r12
 2458 133a 8B                      		mov	a, [hl]
 2459 133b 9D F2                   		mov	r10, a
 2460 133d 6A F2 02                		or	r10, #2
 2461 1340 AD F0                   		movw	ax, r8
 2462 1342 BD F6                   		movw	r14, ax
 2463 1344 DA F6                   		movw	bc, r14
 2464 1346 8D F2                   		mov	a, r10
 2465 1348 48 00 00                		mov	[bc], a
 438:../src/StateMachine.c **** 		P4_bit.no2 = 1;
 2466                             		.loc 1 438 0
 2467 134b C9 F0 04 FF             		movw	r8, #-252
 2468 134f AD F0                   		movw	ax, r8
 2469 1351 BD F4                   		movw	r12, ax
 2470 1353 FA F4                   		movw	hl, r12
 2471 1355 8B                      		mov	a, [hl]
 2472 1356 9D F2                   		mov	r10, a
 2473 1358 6A F2 04                		or	r10, #4
 2474 135b AD F0                   		movw	ax, r8
 2475 135d BD F6                   		movw	r14, ax
 2476 135f DA F6                   		movw	bc, r14
 2477 1361 8D F2                   		mov	a, r10
 2478 1363 48 00 00                		mov	[bc], a
 439:../src/StateMachine.c **** 		P4_bit.no3 = 0;
 2479                             		.loc 1 439 0
 2480 1366 C9 F0 04 FF             		movw	r8, #-252
 2481 136a AD F0                   		movw	ax, r8
 2482 136c BD F4                   		movw	r12, ax
 2483 136e FA F4                   		movw	hl, r12
 2484 1370 8B                      		mov	a, [hl]
 2485 1371 9D F2                   		mov	r10, a
 2486 1373 5A F2 F7                		and	r10, #-9
 2487 1376 AD F0                   		movw	ax, r8
 2488 1378 BD F6                   		movw	r14, ax
 2489 137a DA F6                   		movw	bc, r14
 2490 137c 8D F2                   		mov	a, r10
 2491 137e 48 00 00                		mov	[bc], a
 440:../src/StateMachine.c **** 		break;
 2492                             		.loc 1 440 0
 2493 1381 00                      		nop
 2494                             	.L1:
 441:../src/StateMachine.c **** 	}
 442:../src/StateMachine.c **** }
 2495                             		.loc 1 442 0
 2496 1382 10 1C                   		addw	sp, #28
 2497 1384 61 EF                   		sel	rb2
 2498 1386 C2                      		pop	bc ; r18
 2499 1387 C0                      		pop	ax ; r16
 2500 1388 61 CF                   		sel	rb0
 2501 138a D7                      		ret
 2502                             	.LFE0:
 2542                             	.Letext0:
 2543                             		.file 2 "../src/iodefine.h"
 2544                             		.file 3 "../src/r_cg_macrodriver.h"
 2545                             		.file 4 "../src/globals.h"
