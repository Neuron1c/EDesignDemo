   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.comm	_record,50,1
  28                             		.comm	_mem,50,1
  29                             		.comm	_display_string,50,1
  30                             		.comm	_voltage,1,1
  31                             		.comm	_current1,1,1
  32                             		.comm	_current2,1,1
  33                             		.comm	_date,6,1
  34                             		.comm	_scrollFlag,1,1
  35                             		.comm	_tempFlag,1,1
  36                             		.comm	_secFlag,1,1
  37                             		.comm	_scrollCount,2,2
  38                             		.comm	_timerFlag,2,2
  39                             		.local	_state
  40                             		.comm	_state,2,2
  41                             		.local	_newDate
  42                             		.comm	_newDate,6,1
  43                             		.section	.rodata
  44                             	.LC0:
  45 0000 24 42 32 30 25 30 32 64 		.string	"$B20%02d,%d,%d,%d,%d,%d\r\n"
  45      2C 25 64 2C 25 64 2C 25 
  45      64 2C 25 64 2C 25 64 0D 
  45      0A 00 
  46                             	.LC1:
  47 001a 53 50 3A 56 6F 63 3D 25 		.string	"SP:Voc=%d mV, Isc=%d mA\r\n"
  47      64 20 6D 56 2C 20 49 73 
  47      63 3D 25 64 20 6D 41 0D 
  47      0A 00 
  48                             	.LC2:
  49 0034 59 65 61 72 3A 20 32 30 		.string	"Year: 20%02d\r\n"
  49      25 30 32 64 0D 0A 00 
  50                             	.LC3:
  51 0043 4D 6F 6E 74 68 3A 20 25 		.string	"Month: %d\r\n"
  51      64 0D 0A 00 
  52                             	.LC4:
  53 004f 44 61 79 3A 20 25 64 0D 		.string	"Day: %d\r\n"
  53      0A 00 
  54                             	.LC5:
  55 0059 48 6F 75 72 3A 20 25 64 		.string	"Hour: %d\r\n"
  55      0D 0A 00 
  56                             	.LC6:
  57 0064 4D 69 6E 75 74 65 3A 20 		.string	"Minute: %d\r\n"
  57      25 64 0D 0A 00 
  58                             	.LC7:
  59 0071 53 65 63 6F 6E 64 3A 20 		.string	"Second: %d\r\n"
  59      25 64 0D 0A 00 
  60                             	.text
  61                             		.global	_recieveInstruction
  63                             	_recieveInstruction:
  64                             	.LFB0:
  65                             		.file 1 "../src/StateMachine.c"
   1:../src/StateMachine.c **** /*
   2:../src/StateMachine.c ****  * StateMachine.c
   3:../src/StateMachine.c ****  *
   4:../src/StateMachine.c ****  *  Created on: 15 Apr 2017
   5:../src/StateMachine.c ****  *      Author: Neuron1c
   6:../src/StateMachine.c ****  */
   7:../src/StateMachine.c **** 
   8:../src/StateMachine.c **** #include "r_cg_userdefine.h"
   9:../src/StateMachine.c **** #include <string.h>
  10:../src/StateMachine.c **** #include <stdio.h>
  11:../src/StateMachine.c **** 
  12:../src/StateMachine.c **** static int state = 0;
  13:../src/StateMachine.c **** extern uint8_t display_string[RX_BUF_LEN];
  14:../src/StateMachine.c **** extern uint8_t record[RX_BUF_LEN];
  15:../src/StateMachine.c **** extern uint8_t voltage, current2;
  16:../src/StateMachine.c **** extern uint8_t date[6];
  17:../src/StateMachine.c **** static uint8_t newDate[6];
  18:../src/StateMachine.c **** 
  19:../src/StateMachine.c **** //Recieve instruction, value from 1 to 7
  20:../src/StateMachine.c **** //1 = right button (accept/okay) (pin 2)
  21:../src/StateMachine.c **** //2 = middle button
  22:../src/StateMachine.c **** //3 = down button (pin 4)
  23:../src/StateMachine.c **** //4 = up button (pin 3)
  24:../src/StateMachine.c **** //5 = left button (back/cancel) (pin 5)
  25:../src/StateMachine.c **** //6 = switch to test mode
  26:../src/StateMachine.c **** //7 = switch to normal mode
  27:../src/StateMachine.c **** 
  28:../src/StateMachine.c **** void recieveInstruction(int instr) {
  66                             		.loc 1 28 0
  67                             		; start of function
  68                             		; push 4: r16 r18
  69                             		; locals: 14 bytes
  70                             		; outgoing: 16 bytes
  71 0000 61 EF                   		sel	rb2
  72 0002 C1                      		push	ax ; r16
  73                             	.LCFI0:
  74 0003 C3                      		push	bc ; r18
  75                             	.LCFI1:
  76 0004 61 CF                   		sel	rb0
  77 0006 20 1E                   		subw	sp, #30
  78                             	.LCFI2:
  29:../src/StateMachine.c **** 	switch (state) {
  79                             		.loc 1 29 0
  80 0008 AF 00 00                		movw	ax, !_state
  81 000b BD F0                   		movw	r8, ax
  82 000d 44 09 00                		cmpw	ax, #9
  83 0010 61 F8                   		 sknz
  84 0012 EC 2D 09 00             		 br	!!.L3
  85 0016 AD F0                   		movw	ax, r8
  86 0018 44 09 00                		cmpw	ax, #9
  87 001b 71 FF                   		 xor1	CY, a.7
  88 001d 61 F3                   		 sknh
  89 001f EC AE 00 00             		 br	!!.L4
  90 0023 AD F0                   		movw	ax, r8
  91 0025 44 04 00                		cmpw	ax, #4
  92 0028 61 F8                   		 sknz
  93 002a EC AF 02 00             		 br	!!.L5
  94 002e AD F0                   		movw	ax, r8
  95 0030 44 04 00                		cmpw	ax, #4
  96 0033 71 FF                   		 xor1	CY, a.7
  97 0035 61 F3                   		 sknh
  98 0037 EC 7C 00 00             		 br	!!.L6
  99 003b AD F0                   		movw	ax, r8
 100 003d 44 01 00                		cmpw	ax, #1
 101 0040 61 F8                   		 sknz
 102 0042 EC 69 01 00             		 br	!!.L7
 103 0046 AD F0                   		movw	ax, r8
 104 0048 44 01 00                		cmpw	ax, #1
 105 004b 71 FF                   		 xor1	CY, a.7
 106 004d 61 F3                   		 sknh
 107 004f EC 62 00 00             		 br	!!.L8
 108 0053 AD F0                   		movw	ax, r8
 109 0055 44 00 00                		cmpw	ax, #0
 110 0058 61 F8                   		 sknz
 111 005a EC 2A 01 00             		 br	!!.L9
 112 005e EC 71 09 00             		br	!!.L2
 113                             	.L8:
 114 0062 AD F0                   		movw	ax, r8
 115 0064 44 02 00                		cmpw	ax, #2
 116 0067 61 F8                   		 sknz
 117 0069 EC BD 01 00             		 br	!!.L10
 118 006d AD F0                   		movw	ax, r8
 119 006f 44 03 00                		cmpw	ax, #3
 120 0072 61 F8                   		 sknz
 121 0074 EC 36 02 00             		 br	!!.L11
 122 0078 EC 71 09 00             		br	!!.L2
 123                             	.L6:
 124 007c AD F0                   		movw	ax, r8
 125 007e 44 06 00                		cmpw	ax, #6
 126 0081 61 F8                   		 sknz
 127 0083 EC 46 08 00             		 br	!!.L12
 128 0087 AD F0                   		movw	ax, r8
 129 0089 44 06 00                		cmpw	ax, #6
 130 008c 71 FF                   		 xor1	CY, a.7
 131 008e 61 D8                   		 sknc
 132 0090 EC FF 07 00             		 br	!!.L13
 133 0094 AD F0                   		movw	ax, r8
 134 0096 44 07 00                		cmpw	ax, #7
 135 0099 61 F8                   		 sknz
 136 009b EC 93 08 00             		 br	!!.L14
 137 009f AD F0                   		movw	ax, r8
 138 00a1 44 08 00                		cmpw	ax, #8
 139 00a4 61 F8                   		 sknz
 140 00a6 EC E0 08 00             		 br	!!.L15
 141 00aa EC 71 09 00             		br	!!.L2
 142                             	.L4:
 143 00ae AD F0                   		movw	ax, r8
 144 00b0 44 0E 00                		cmpw	ax, #14
 145 00b3 61 F8                   		 sknz
 146 00b5 EC 25 05 00             		 br	!!.L16
 147 00b9 AD F0                   		movw	ax, r8
 148 00bb 44 0E 00                		cmpw	ax, #14
 149 00be 71 FF                   		 xor1	CY, a.7
 150 00c0 61 F3                   		 sknh
 151 00c2 EC F8 00 00             		 br	!!.L17
 152 00c6 AD F0                   		movw	ax, r8
 153 00c8 44 0B 00                		cmpw	ax, #11
 154 00cb 61 F8                   		 sknz
 155 00cd EC A1 03 00             		 br	!!.L18
 156 00d1 AD F0                   		movw	ax, r8
 157 00d3 44 0B 00                		cmpw	ax, #11
 158 00d6 71 FF                   		 xor1	CY, a.7
 159 00d8 61 D8                   		 sknc
 160 00da EC 28 03 00             		 br	!!.L19
 161 00de AD F0                   		movw	ax, r8
 162 00e0 44 0C 00                		cmpw	ax, #12
 163 00e3 61 F8                   		 sknz
 164 00e5 EC 1A 04 00             		 br	!!.L20
 165 00e9 AD F0                   		movw	ax, r8
 166 00eb 44 0D 00                		cmpw	ax, #13
 167 00ee 61 F8                   		 sknz
 168 00f0 EC 93 04 00             		 br	!!.L21
 169 00f4 EC 71 09 00             		br	!!.L2
 170                             	.L17:
 171 00f8 AD F0                   		movw	ax, r8
 172 00fa 44 10 00                		cmpw	ax, #16
 173 00fd 61 F8                   		 sknz
 174 00ff EC 49 06 00             		 br	!!.L22
 175 0103 AD F0                   		movw	ax, r8
 176 0105 44 10 00                		cmpw	ax, #16
 177 0108 71 FF                   		 xor1	CY, a.7
 178 010a 61 D8                   		 sknc
 179 010c EC B7 05 00             		 br	!!.L23
 180 0110 AD F0                   		movw	ax, r8
 181 0112 44 11 00                		cmpw	ax, #17
 182 0115 61 F8                   		 sknz
 183 0117 EC DB 06 00             		 br	!!.L24
 184 011b AD F0                   		movw	ax, r8
 185 011d 44 12 00                		cmpw	ax, #18
 186 0120 61 F8                   		 sknz
 187 0122 EC 6D 07 00             		 br	!!.L25
 188 0126 EC 71 09 00             		br	!!.L2
 189                             	.L9:
  30:../src/StateMachine.c **** 
  31:../src/StateMachine.c **** 	//---------------------------------------------------- normal mode
  32:../src/StateMachine.c **** 
  33:../src/StateMachine.c **** 	case 0:
  34:../src/StateMachine.c **** 		if (instr == 3)
 190                             		.loc 1 34 0
 191 012a A8 26                   		movw	ax, [sp+38]
 192 012c 44 03 00                		cmpw	ax, #3
 193 012f 61 E8                   		 skz
 194 0131 EC 3D 01 00             		 br	!!.L26
  35:../src/StateMachine.c **** 			state = 1;
 195                             		.loc 1 35 0
 196 0135 E6                      		onew	ax
 197 0136 BF 00 00                		movw	!_state, ax
 198 0139 EC 65 01 00             		br	!!.L27
 199                             	.L26:
  36:../src/StateMachine.c **** 		else if (instr == 4)
 200                             		.loc 1 36 0
 201 013d A8 26                   		movw	ax, [sp+38]
 202 013f 44 04 00                		cmpw	ax, #4
 203 0142 61 E8                   		 skz
 204 0144 EC 50 01 00             		 br	!!.L28
  37:../src/StateMachine.c **** 			state = 1;
 205                             		.loc 1 37 0
 206 0148 E6                      		onew	ax
 207 0149 BF 00 00                		movw	!_state, ax
 208 014c EC 65 01 00             		br	!!.L27
 209                             	.L28:
  38:../src/StateMachine.c **** 		else if (instr == 6)
 210                             		.loc 1 38 0
 211 0150 A8 26                   		movw	ax, [sp+38]
 212 0152 44 06 00                		cmpw	ax, #6
 213 0155 61 E8                   		 skz
 214 0157 EC 65 01 00             		 br	!!.L27
  39:../src/StateMachine.c **** 			state = 5;
 215                             		.loc 1 39 0
 216 015b 30 05 00                		movw	ax, #5
 217 015e BF 00 00                		movw	!_state, ax
  40:../src/StateMachine.c **** 		break;
 218                             		.loc 1 40 0
 219 0161 EC 71 09 00             		br	!!.L2
 220                             	.L27:
 221 0165 EC 71 09 00             		br	!!.L2
 222                             	.L7:
  41:../src/StateMachine.c **** 	case 1:
  42:../src/StateMachine.c **** 		if (instr == 3)
 223                             		.loc 1 42 0
 224 0169 A8 26                   		movw	ax, [sp+38]
 225 016b 44 03 00                		cmpw	ax, #3
 226 016e 61 E8                   		 skz
 227 0170 EC 7C 01 00             		 br	!!.L29
  43:../src/StateMachine.c **** 			state = 0;
 228                             		.loc 1 43 0
 229 0174 F6                      		clrw	ax
 230 0175 BF 00 00                		movw	!_state, ax
 231 0178 EC B9 01 00             		br	!!.L30
 232                             	.L29:
  44:../src/StateMachine.c **** 		else if (instr == 4)
 233                             		.loc 1 44 0
 234 017c A8 26                   		movw	ax, [sp+38]
 235 017e 44 04 00                		cmpw	ax, #4
 236 0181 61 E8                   		 skz
 237 0183 EC 8F 01 00             		 br	!!.L31
  45:../src/StateMachine.c **** 			state = 0;
 238                             		.loc 1 45 0
 239 0187 F6                      		clrw	ax
 240 0188 BF 00 00                		movw	!_state, ax
 241 018b EC B9 01 00             		br	!!.L30
 242                             	.L31:
  46:../src/StateMachine.c **** 		else if (instr == 1) {
 243                             		.loc 1 46 0
 244 018f A8 26                   		movw	ax, [sp+38]
 245 0191 44 01 00                		cmpw	ax, #1
 246 0194 61 E8                   		 skz
 247 0196 EC A4 01 00             		 br	!!.L32
  47:../src/StateMachine.c **** 			state = 2;
 248                             		.loc 1 47 0
 249 019a 30 02 00                		movw	ax, #2
 250 019d BF 00 00                		movw	!_state, ax
 251 01a0 EC B9 01 00             		br	!!.L30
 252                             	.L32:
  48:../src/StateMachine.c **** 		}
  49:../src/StateMachine.c **** 
  50:../src/StateMachine.c **** 		else if (instr == 6)
 253                             		.loc 1 50 0
 254 01a4 A8 26                   		movw	ax, [sp+38]
 255 01a6 44 06 00                		cmpw	ax, #6
 256 01a9 61 E8                   		 skz
 257 01ab EC B9 01 00             		 br	!!.L30
  51:../src/StateMachine.c **** 			state = 5;
 258                             		.loc 1 51 0
 259 01af 30 05 00                		movw	ax, #5
 260 01b2 BF 00 00                		movw	!_state, ax
  52:../src/StateMachine.c **** 		break;
 261                             		.loc 1 52 0
 262 01b5 EC 71 09 00             		br	!!.L2
 263                             	.L30:
 264 01b9 EC 71 09 00             		br	!!.L2
 265                             	.L10:
  53:../src/StateMachine.c **** 	case 2:
  54:../src/StateMachine.c **** 		if (instr == 1) {
 266                             		.loc 1 54 0
 267 01bd A8 26                   		movw	ax, [sp+38]
 268 01bf 44 01 00                		cmpw	ax, #1
 269 01c2 61 E8                   		 skz
 270 01c4 EC E0 01 00             		 br	!!.L33
  55:../src/StateMachine.c **** 			state = 13;
 271                             		.loc 1 55 0
 272 01c8 30 0D 00                		movw	ax, #13
 273 01cb BF 00 00                		movw	!_state, ax
  56:../src/StateMachine.c **** 			strcpy(newDate, date);
 274                             		.loc 1 56 0
 275 01ce 30 02 00                		movw	ax, #_newDate
 276 01d1 B8 00                   		movw	[sp], ax
 277 01d3 30 00 00                		movw	ax, #_date
 278 01d6 B8 02                   		movw	[sp+2], ax
 279 01d8 FC 00 00 00             		call	!!%code(_strcpy)
 280 01dc EC 32 02 00             		br	!!.L34
 281                             	.L33:
  57:../src/StateMachine.c **** 		} else if (instr == 4) {
 282                             		.loc 1 57 0
 283 01e0 A8 26                   		movw	ax, [sp+38]
 284 01e2 44 04 00                		cmpw	ax, #4
 285 01e5 61 E8                   		 skz
 286 01e7 EC F5 01 00             		 br	!!.L35
  58:../src/StateMachine.c **** 			state = 12;
 287                             		.loc 1 58 0
 288 01eb 30 0C 00                		movw	ax, #12
 289 01ee BF 00 00                		movw	!_state, ax
 290 01f1 EC 32 02 00             		br	!!.L34
 291                             	.L35:
  59:../src/StateMachine.c **** 		} else if (instr == 3) {
 292                             		.loc 1 59 0
 293 01f5 A8 26                   		movw	ax, [sp+38]
 294 01f7 44 03 00                		cmpw	ax, #3
 295 01fa 61 E8                   		 skz
 296 01fc EC 0A 02 00             		 br	!!.L36
  60:../src/StateMachine.c **** 			state = 3;
 297                             		.loc 1 60 0
 298 0200 30 03 00                		movw	ax, #3
 299 0203 BF 00 00                		movw	!_state, ax
 300 0206 EC 32 02 00             		br	!!.L34
 301                             	.L36:
  61:../src/StateMachine.c **** 		} else if (instr == 5) {
 302                             		.loc 1 61 0
 303 020a A8 26                   		movw	ax, [sp+38]
 304 020c 44 05 00                		cmpw	ax, #5
 305 020f 61 E8                   		 skz
 306 0211 EC 1D 02 00             		 br	!!.L37
  62:../src/StateMachine.c **** 			state = 1;
 307                             		.loc 1 62 0
 308 0215 E6                      		onew	ax
 309 0216 BF 00 00                		movw	!_state, ax
 310 0219 EC 32 02 00             		br	!!.L34
 311                             	.L37:
  63:../src/StateMachine.c **** 		} else if (instr == 6) {
 312                             		.loc 1 63 0
 313 021d A8 26                   		movw	ax, [sp+38]
 314 021f 44 06 00                		cmpw	ax, #6
 315 0222 61 E8                   		 skz
 316 0224 EC 32 02 00             		 br	!!.L34
  64:../src/StateMachine.c **** 			state = 5;
 317                             		.loc 1 64 0
 318 0228 30 05 00                		movw	ax, #5
 319 022b BF 00 00                		movw	!_state, ax
  65:../src/StateMachine.c **** 		}
  66:../src/StateMachine.c **** 		break;
 320                             		.loc 1 66 0
 321 022e EC 71 09 00             		br	!!.L2
 322                             	.L34:
 323 0232 EC 71 09 00             		br	!!.L2
 324                             	.L11:
  67:../src/StateMachine.c **** 	case 3:
  68:../src/StateMachine.c **** 		if (instr == 1) {
 325                             		.loc 1 68 0
 326 0236 A8 26                   		movw	ax, [sp+38]
 327 0238 44 01 00                		cmpw	ax, #1
 328 023b 61 E8                   		 skz
 329 023d EC 59 02 00             		 br	!!.L38
  69:../src/StateMachine.c **** 			state = 14;
 330                             		.loc 1 69 0
 331 0241 30 0E 00                		movw	ax, #14
 332 0244 BF 00 00                		movw	!_state, ax
  70:../src/StateMachine.c **** 			strcpy(newDate, date);
 333                             		.loc 1 70 0
 334 0247 30 02 00                		movw	ax, #_newDate
 335 024a B8 00                   		movw	[sp], ax
 336 024c 30 00 00                		movw	ax, #_date
 337 024f B8 02                   		movw	[sp+2], ax
 338 0251 FC 00 00 00             		call	!!%code(_strcpy)
 339 0255 EC AB 02 00             		br	!!.L39
 340                             	.L38:
  71:../src/StateMachine.c **** 		} else if (instr == 4) {
 341                             		.loc 1 71 0
 342 0259 A8 26                   		movw	ax, [sp+38]
 343 025b 44 04 00                		cmpw	ax, #4
 344 025e 61 E8                   		 skz
 345 0260 EC 6E 02 00             		 br	!!.L40
  72:../src/StateMachine.c **** 			state = 2;
 346                             		.loc 1 72 0
 347 0264 30 02 00                		movw	ax, #2
 348 0267 BF 00 00                		movw	!_state, ax
 349 026a EC AB 02 00             		br	!!.L39
 350                             	.L40:
  73:../src/StateMachine.c **** 		} else if (instr == 3) {
 351                             		.loc 1 73 0
 352 026e A8 26                   		movw	ax, [sp+38]
 353 0270 44 03 00                		cmpw	ax, #3
 354 0273 61 E8                   		 skz
 355 0275 EC 83 02 00             		 br	!!.L41
  74:../src/StateMachine.c **** 			state = 4;
 356                             		.loc 1 74 0
 357 0279 30 04 00                		movw	ax, #4
 358 027c BF 00 00                		movw	!_state, ax
 359 027f EC AB 02 00             		br	!!.L39
 360                             	.L41:
  75:../src/StateMachine.c **** 		} else if (instr == 5) {
 361                             		.loc 1 75 0
 362 0283 A8 26                   		movw	ax, [sp+38]
 363 0285 44 05 00                		cmpw	ax, #5
 364 0288 61 E8                   		 skz
 365 028a EC 96 02 00             		 br	!!.L42
  76:../src/StateMachine.c **** 			state = 1;
 366                             		.loc 1 76 0
 367 028e E6                      		onew	ax
 368 028f BF 00 00                		movw	!_state, ax
 369 0292 EC AB 02 00             		br	!!.L39
 370                             	.L42:
  77:../src/StateMachine.c **** 		} else if (instr == 6) {
 371                             		.loc 1 77 0
 372 0296 A8 26                   		movw	ax, [sp+38]
 373 0298 44 06 00                		cmpw	ax, #6
 374 029b 61 E8                   		 skz
 375 029d EC AB 02 00             		 br	!!.L39
  78:../src/StateMachine.c **** 			state = 5;
 376                             		.loc 1 78 0
 377 02a1 30 05 00                		movw	ax, #5
 378 02a4 BF 00 00                		movw	!_state, ax
  79:../src/StateMachine.c **** 		}
  80:../src/StateMachine.c **** 		break;
 379                             		.loc 1 80 0
 380 02a7 EC 71 09 00             		br	!!.L2
 381                             	.L39:
 382 02ab EC 71 09 00             		br	!!.L2
 383                             	.L5:
  81:../src/StateMachine.c **** 	case 4:
  82:../src/StateMachine.c **** 		if (instr == 1) {
 384                             		.loc 1 82 0
 385 02af A8 26                   		movw	ax, [sp+38]
 386 02b1 44 01 00                		cmpw	ax, #1
 387 02b4 61 E8                   		 skz
 388 02b6 EC D2 02 00             		 br	!!.L43
  83:../src/StateMachine.c **** 			state = 15;
 389                             		.loc 1 83 0
 390 02ba 30 0F 00                		movw	ax, #15
 391 02bd BF 00 00                		movw	!_state, ax
  84:../src/StateMachine.c **** 			strcpy(newDate, date);
 392                             		.loc 1 84 0
 393 02c0 30 02 00                		movw	ax, #_newDate
 394 02c3 B8 00                   		movw	[sp], ax
 395 02c5 30 00 00                		movw	ax, #_date
 396 02c8 B8 02                   		movw	[sp+2], ax
 397 02ca FC 00 00 00             		call	!!%code(_strcpy)
 398 02ce EC 24 03 00             		br	!!.L44
 399                             	.L43:
  85:../src/StateMachine.c **** 		} else if (instr == 4) {
 400                             		.loc 1 85 0
 401 02d2 A8 26                   		movw	ax, [sp+38]
 402 02d4 44 04 00                		cmpw	ax, #4
 403 02d7 61 E8                   		 skz
 404 02d9 EC E7 02 00             		 br	!!.L45
  86:../src/StateMachine.c **** 			state = 3;
 405                             		.loc 1 86 0
 406 02dd 30 03 00                		movw	ax, #3
 407 02e0 BF 00 00                		movw	!_state, ax
 408 02e3 EC 24 03 00             		br	!!.L44
 409                             	.L45:
  87:../src/StateMachine.c **** 		} else if (instr == 3) {
 410                             		.loc 1 87 0
 411 02e7 A8 26                   		movw	ax, [sp+38]
 412 02e9 44 03 00                		cmpw	ax, #3
 413 02ec 61 E8                   		 skz
 414 02ee EC FC 02 00             		 br	!!.L46
  88:../src/StateMachine.c **** 			state = 10;
 415                             		.loc 1 88 0
 416 02f2 30 0A 00                		movw	ax, #10
 417 02f5 BF 00 00                		movw	!_state, ax
 418 02f8 EC 24 03 00             		br	!!.L44
 419                             	.L46:
  89:../src/StateMachine.c **** 		} else if (instr == 5) {
 420                             		.loc 1 89 0
 421 02fc A8 26                   		movw	ax, [sp+38]
 422 02fe 44 05 00                		cmpw	ax, #5
 423 0301 61 E8                   		 skz
 424 0303 EC 0F 03 00             		 br	!!.L47
  90:../src/StateMachine.c **** 			state = 1;
 425                             		.loc 1 90 0
 426 0307 E6                      		onew	ax
 427 0308 BF 00 00                		movw	!_state, ax
 428 030b EC 24 03 00             		br	!!.L44
 429                             	.L47:
  91:../src/StateMachine.c **** 		} else if (instr == 6) {
 430                             		.loc 1 91 0
 431 030f A8 26                   		movw	ax, [sp+38]
 432 0311 44 06 00                		cmpw	ax, #6
 433 0314 61 E8                   		 skz
 434 0316 EC 24 03 00             		 br	!!.L44
  92:../src/StateMachine.c **** 			state = 5;
 435                             		.loc 1 92 0
 436 031a 30 05 00                		movw	ax, #5
 437 031d BF 00 00                		movw	!_state, ax
  93:../src/StateMachine.c **** 		}
  94:../src/StateMachine.c **** 		break;
 438                             		.loc 1 94 0
 439 0320 EC 71 09 00             		br	!!.L2
 440                             	.L44:
 441 0324 EC 71 09 00             		br	!!.L2
 442                             	.L19:
  95:../src/StateMachine.c **** 	case 10:
  96:../src/StateMachine.c **** 		if (instr == 1) {
 443                             		.loc 1 96 0
 444 0328 A8 26                   		movw	ax, [sp+38]
 445 032a 44 01 00                		cmpw	ax, #1
 446 032d 61 E8                   		 skz
 447 032f EC 4B 03 00             		 br	!!.L48
  97:../src/StateMachine.c **** 			state = 16;
 448                             		.loc 1 97 0
 449 0333 30 10 00                		movw	ax, #16
 450 0336 BF 00 00                		movw	!_state, ax
  98:../src/StateMachine.c **** 			strcpy(newDate, date);
 451                             		.loc 1 98 0
 452 0339 30 02 00                		movw	ax, #_newDate
 453 033c B8 00                   		movw	[sp], ax
 454 033e 30 00 00                		movw	ax, #_date
 455 0341 B8 02                   		movw	[sp+2], ax
 456 0343 FC 00 00 00             		call	!!%code(_strcpy)
 457 0347 EC 9D 03 00             		br	!!.L49
 458                             	.L48:
  99:../src/StateMachine.c **** 		} else if (instr == 4) {
 459                             		.loc 1 99 0
 460 034b A8 26                   		movw	ax, [sp+38]
 461 034d 44 04 00                		cmpw	ax, #4
 462 0350 61 E8                   		 skz
 463 0352 EC 60 03 00             		 br	!!.L50
 100:../src/StateMachine.c **** 			state = 4;
 464                             		.loc 1 100 0
 465 0356 30 04 00                		movw	ax, #4
 466 0359 BF 00 00                		movw	!_state, ax
 467 035c EC 9D 03 00             		br	!!.L49
 468                             	.L50:
 101:../src/StateMachine.c **** 		} else if (instr == 3) {
 469                             		.loc 1 101 0
 470 0360 A8 26                   		movw	ax, [sp+38]
 471 0362 44 03 00                		cmpw	ax, #3
 472 0365 61 E8                   		 skz
 473 0367 EC 75 03 00             		 br	!!.L51
 102:../src/StateMachine.c **** 			state = 11;
 474                             		.loc 1 102 0
 475 036b 30 0B 00                		movw	ax, #11
 476 036e BF 00 00                		movw	!_state, ax
 477 0371 EC 9D 03 00             		br	!!.L49
 478                             	.L51:
 103:../src/StateMachine.c **** 		} else if (instr == 5) {
 479                             		.loc 1 103 0
 480 0375 A8 26                   		movw	ax, [sp+38]
 481 0377 44 05 00                		cmpw	ax, #5
 482 037a 61 E8                   		 skz
 483 037c EC 88 03 00             		 br	!!.L52
 104:../src/StateMachine.c **** 			state = 1;
 484                             		.loc 1 104 0
 485 0380 E6                      		onew	ax
 486 0381 BF 00 00                		movw	!_state, ax
 487 0384 EC 9D 03 00             		br	!!.L49
 488                             	.L52:
 105:../src/StateMachine.c **** 		} else if (instr == 6) {
 489                             		.loc 1 105 0
 490 0388 A8 26                   		movw	ax, [sp+38]
 491 038a 44 06 00                		cmpw	ax, #6
 492 038d 61 E8                   		 skz
 493 038f EC 9D 03 00             		 br	!!.L49
 106:../src/StateMachine.c **** 			state = 5;
 494                             		.loc 1 106 0
 495 0393 30 05 00                		movw	ax, #5
 496 0396 BF 00 00                		movw	!_state, ax
 107:../src/StateMachine.c **** 		}
 108:../src/StateMachine.c **** 		break;
 497                             		.loc 1 108 0
 498 0399 EC 71 09 00             		br	!!.L2
 499                             	.L49:
 500 039d EC 71 09 00             		br	!!.L2
 501                             	.L18:
 109:../src/StateMachine.c **** 	case 11:
 110:../src/StateMachine.c **** 		if (instr == 1) {
 502                             		.loc 1 110 0
 503 03a1 A8 26                   		movw	ax, [sp+38]
 504 03a3 44 01 00                		cmpw	ax, #1
 505 03a6 61 E8                   		 skz
 506 03a8 EC C4 03 00             		 br	!!.L53
 111:../src/StateMachine.c **** 			state = 17;
 507                             		.loc 1 111 0
 508 03ac 30 11 00                		movw	ax, #17
 509 03af BF 00 00                		movw	!_state, ax
 112:../src/StateMachine.c **** 			strcpy(newDate, date);
 510                             		.loc 1 112 0
 511 03b2 30 02 00                		movw	ax, #_newDate
 512 03b5 B8 00                   		movw	[sp], ax
 513 03b7 30 00 00                		movw	ax, #_date
 514 03ba B8 02                   		movw	[sp+2], ax
 515 03bc FC 00 00 00             		call	!!%code(_strcpy)
 516 03c0 EC 16 04 00             		br	!!.L54
 517                             	.L53:
 113:../src/StateMachine.c **** 		} else if (instr == 4) {
 518                             		.loc 1 113 0
 519 03c4 A8 26                   		movw	ax, [sp+38]
 520 03c6 44 04 00                		cmpw	ax, #4
 521 03c9 61 E8                   		 skz
 522 03cb EC D9 03 00             		 br	!!.L55
 114:../src/StateMachine.c **** 			state = 10;
 523                             		.loc 1 114 0
 524 03cf 30 0A 00                		movw	ax, #10
 525 03d2 BF 00 00                		movw	!_state, ax
 526 03d5 EC 16 04 00             		br	!!.L54
 527                             	.L55:
 115:../src/StateMachine.c **** 		} else if (instr == 3) {
 528                             		.loc 1 115 0
 529 03d9 A8 26                   		movw	ax, [sp+38]
 530 03db 44 03 00                		cmpw	ax, #3
 531 03de 61 E8                   		 skz
 532 03e0 EC EE 03 00             		 br	!!.L56
 116:../src/StateMachine.c **** 			state = 12;
 533                             		.loc 1 116 0
 534 03e4 30 0C 00                		movw	ax, #12
 535 03e7 BF 00 00                		movw	!_state, ax
 536 03ea EC 16 04 00             		br	!!.L54
 537                             	.L56:
 117:../src/StateMachine.c **** 		} else if (instr == 5) {
 538                             		.loc 1 117 0
 539 03ee A8 26                   		movw	ax, [sp+38]
 540 03f0 44 05 00                		cmpw	ax, #5
 541 03f3 61 E8                   		 skz
 542 03f5 EC 01 04 00             		 br	!!.L57
 118:../src/StateMachine.c **** 			state = 1;
 543                             		.loc 1 118 0
 544 03f9 E6                      		onew	ax
 545 03fa BF 00 00                		movw	!_state, ax
 546 03fd EC 16 04 00             		br	!!.L54
 547                             	.L57:
 119:../src/StateMachine.c **** 		} else if (instr == 6) {
 548                             		.loc 1 119 0
 549 0401 A8 26                   		movw	ax, [sp+38]
 550 0403 44 06 00                		cmpw	ax, #6
 551 0406 61 E8                   		 skz
 552 0408 EC 16 04 00             		 br	!!.L54
 120:../src/StateMachine.c **** 			state = 5;
 553                             		.loc 1 120 0
 554 040c 30 05 00                		movw	ax, #5
 555 040f BF 00 00                		movw	!_state, ax
 121:../src/StateMachine.c **** 		}
 122:../src/StateMachine.c **** 		break;
 556                             		.loc 1 122 0
 557 0412 EC 71 09 00             		br	!!.L2
 558                             	.L54:
 559 0416 EC 71 09 00             		br	!!.L2
 560                             	.L20:
 123:../src/StateMachine.c **** 	case 12:
 124:../src/StateMachine.c **** 		if (instr == 1) {
 561                             		.loc 1 124 0
 562 041a A8 26                   		movw	ax, [sp+38]
 563 041c 44 01 00                		cmpw	ax, #1
 564 041f 61 E8                   		 skz
 565 0421 EC 3D 04 00             		 br	!!.L58
 125:../src/StateMachine.c **** 			state = 18;
 566                             		.loc 1 125 0
 567 0425 30 12 00                		movw	ax, #18
 568 0428 BF 00 00                		movw	!_state, ax
 126:../src/StateMachine.c **** 			strcpy(newDate, date);
 569                             		.loc 1 126 0
 570 042b 30 02 00                		movw	ax, #_newDate
 571 042e B8 00                   		movw	[sp], ax
 572 0430 30 00 00                		movw	ax, #_date
 573 0433 B8 02                   		movw	[sp+2], ax
 574 0435 FC 00 00 00             		call	!!%code(_strcpy)
 575 0439 EC 8F 04 00             		br	!!.L59
 576                             	.L58:
 127:../src/StateMachine.c **** 		} else if (instr == 4) {
 577                             		.loc 1 127 0
 578 043d A8 26                   		movw	ax, [sp+38]
 579 043f 44 04 00                		cmpw	ax, #4
 580 0442 61 E8                   		 skz
 581 0444 EC 52 04 00             		 br	!!.L60
 128:../src/StateMachine.c **** 			state = 11;
 582                             		.loc 1 128 0
 583 0448 30 0B 00                		movw	ax, #11
 584 044b BF 00 00                		movw	!_state, ax
 585 044e EC 8F 04 00             		br	!!.L59
 586                             	.L60:
 129:../src/StateMachine.c **** 		} else if (instr == 3) {
 587                             		.loc 1 129 0
 588 0452 A8 26                   		movw	ax, [sp+38]
 589 0454 44 03 00                		cmpw	ax, #3
 590 0457 61 E8                   		 skz
 591 0459 EC 67 04 00             		 br	!!.L61
 130:../src/StateMachine.c **** 			state = 2;
 592                             		.loc 1 130 0
 593 045d 30 02 00                		movw	ax, #2
 594 0460 BF 00 00                		movw	!_state, ax
 595 0463 EC 8F 04 00             		br	!!.L59
 596                             	.L61:
 131:../src/StateMachine.c **** 		} else if (instr == 5) {
 597                             		.loc 1 131 0
 598 0467 A8 26                   		movw	ax, [sp+38]
 599 0469 44 05 00                		cmpw	ax, #5
 600 046c 61 E8                   		 skz
 601 046e EC 7A 04 00             		 br	!!.L62
 132:../src/StateMachine.c **** 			state = 1;
 602                             		.loc 1 132 0
 603 0472 E6                      		onew	ax
 604 0473 BF 00 00                		movw	!_state, ax
 605 0476 EC 8F 04 00             		br	!!.L59
 606                             	.L62:
 133:../src/StateMachine.c **** 		} else if (instr == 6) {
 607                             		.loc 1 133 0
 608 047a A8 26                   		movw	ax, [sp+38]
 609 047c 44 06 00                		cmpw	ax, #6
 610 047f 61 E8                   		 skz
 611 0481 EC 8F 04 00             		 br	!!.L59
 134:../src/StateMachine.c **** 			state = 5;
 612                             		.loc 1 134 0
 613 0485 30 05 00                		movw	ax, #5
 614 0488 BF 00 00                		movw	!_state, ax
 135:../src/StateMachine.c **** 		}
 136:../src/StateMachine.c **** 		break;
 615                             		.loc 1 136 0
 616 048b EC 71 09 00             		br	!!.L2
 617                             	.L59:
 618 048f EC 71 09 00             		br	!!.L2
 619                             	.L21:
 137:../src/StateMachine.c **** 	case 13:
 138:../src/StateMachine.c **** 		if (instr == 1) { //accept command
 620                             		.loc 1 138 0
 621 0493 A8 26                   		movw	ax, [sp+38]
 622 0495 44 01 00                		cmpw	ax, #1
 623 0498 61 E8                   		 skz
 624 049a EC 0C 05 00             		 br	!!.L63
 625                             	.LBB2:
 139:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 626                             		.loc 1 139 0
 627 049e 8F 02 00                		mov	a, !_newDate
 628 04a1 9D F0                   		mov	r8, a
 629 04a3 70                      		mov	x, a 
 630 04a4 51 00                   		mov	a, #0
 631 04a6 BD EA                   		movw	r18, ax
 140:../src/StateMachine.c **** 					newDate[1], newDate[2], newDate[3], newDate[4], newDate[5]);
 632                             		.loc 1 140 0
 633 04a8 8F 03 00                		mov	a, !_newDate+1
 634 04ab 9D F0                   		mov	r8, a
 139:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 635                             		.loc 1 139 0
 636 04ad 70                      		mov	x, a 
 637 04ae 51 00                   		mov	a, #0
 638 04b0 BD E8                   		movw	r16, ax
 639                             		.loc 1 140 0
 640 04b2 8F 04 00                		mov	a, !_newDate+2
 641 04b5 9D F0                   		mov	r8, a
 139:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 642                             		.loc 1 139 0
 643 04b7 70                      		mov	x, a 
 644 04b8 51 00                   		mov	a, #0
 645 04ba BD F6                   		movw	r14, ax
 646                             		.loc 1 140 0
 647 04bc 8F 05 00                		mov	a, !_newDate+3
 648 04bf 9D F0                   		mov	r8, a
 139:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 649                             		.loc 1 139 0
 650 04c1 70                      		mov	x, a 
 651 04c2 51 00                   		mov	a, #0
 652 04c4 BD F4                   		movw	r12, ax
 653                             		.loc 1 140 0
 654 04c6 8F 06 00                		mov	a, !_newDate+4
 655 04c9 9D F0                   		mov	r8, a
 139:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 656                             		.loc 1 139 0
 657 04cb 70                      		mov	x, a 
 658 04cc 51 00                   		mov	a, #0
 659 04ce BD F2                   		movw	r10, ax
 660                             		.loc 1 140 0
 661 04d0 8F 07 00                		mov	a, !_newDate+5
 662 04d3 9D F0                   		mov	r8, a
 139:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 663                             		.loc 1 139 0
 664 04d5 CD F1 00                		mov	r9, #0
 665 04d8 30 00 00                		movw	ax, #_record
 666 04db B8 00                   		movw	[sp], ax
 667 04dd 30 00 00                		movw	ax, #.LC0
 668 04e0 B8 02                   		movw	[sp+2], ax
 669 04e2 AD EA                   		movw	ax, r18
 670 04e4 B8 04                   		movw	[sp+4], ax
 671 04e6 AD E8                   		movw	ax, r16
 672 04e8 B8 06                   		movw	[sp+6], ax
 673 04ea AD F6                   		movw	ax, r14
 674 04ec B8 08                   		movw	[sp+8], ax
 675 04ee AD F4                   		movw	ax, r12
 676 04f0 B8 0A                   		movw	[sp+10], ax
 677 04f2 AD F2                   		movw	ax, r10
 678 04f4 B8 0C                   		movw	[sp+12], ax
 679 04f6 AD F0                   		movw	ax, r8
 680 04f8 B8 0E                   		movw	[sp+14], ax
 681 04fa FC 00 00 00             		call	!!%code(_sprintf)
 141:../src/StateMachine.c **** 			setRTC();
 682                             		.loc 1 141 0
 683 04fe FC 00 00 00             		call	!!%code(_setRTC)
 142:../src/StateMachine.c **** 			state = 2;
 684                             		.loc 1 142 0
 685 0502 30 02 00                		movw	ax, #2
 686 0505 BF 00 00                		movw	!_state, ax
 687                             	.LBE2:
 688 0508 EC 21 05 00             		br	!!.L64
 689                             	.L63:
 143:../src/StateMachine.c **** 		} else if (instr == 5) {
 690                             		.loc 1 143 0
 691 050c A8 26                   		movw	ax, [sp+38]
 692 050e 44 05 00                		cmpw	ax, #5
 693 0511 61 E8                   		 skz
 694 0513 EC 21 05 00             		 br	!!.L64
 144:../src/StateMachine.c **** 			state = 2;
 695                             		.loc 1 144 0
 696 0517 30 02 00                		movw	ax, #2
 697 051a BF 00 00                		movw	!_state, ax
 145:../src/StateMachine.c **** 		}
 146:../src/StateMachine.c **** 		break;
 698                             		.loc 1 146 0
 699 051d EC 71 09 00             		br	!!.L2
 700                             	.L64:
 701 0521 EC 71 09 00             		br	!!.L2
 702                             	.L16:
 147:../src/StateMachine.c **** 	case 14:
 148:../src/StateMachine.c **** 		if (instr == 1) { //accept command
 703                             		.loc 1 148 0
 704 0525 A8 26                   		movw	ax, [sp+38]
 705 0527 44 01 00                		cmpw	ax, #1
 706 052a 61 E8                   		 skz
 707 052c EC 9E 05 00             		 br	!!.L65
 708                             	.LBB3:
 149:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 709                             		.loc 1 149 0
 710 0530 8F 02 00                		mov	a, !_newDate
 711 0533 9D F0                   		mov	r8, a
 712 0535 70                      		mov	x, a 
 713 0536 51 00                   		mov	a, #0
 714 0538 BD EA                   		movw	r18, ax
 150:../src/StateMachine.c **** 					newDate[1], newDate[2], newDate[3], newDate[4], newDate[5]);
 715                             		.loc 1 150 0
 716 053a 8F 03 00                		mov	a, !_newDate+1
 717 053d 9D F0                   		mov	r8, a
 149:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 718                             		.loc 1 149 0
 719 053f 70                      		mov	x, a 
 720 0540 51 00                   		mov	a, #0
 721 0542 BD E8                   		movw	r16, ax
 722                             		.loc 1 150 0
 723 0544 8F 04 00                		mov	a, !_newDate+2
 724 0547 9D F0                   		mov	r8, a
 149:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 725                             		.loc 1 149 0
 726 0549 70                      		mov	x, a 
 727 054a 51 00                   		mov	a, #0
 728 054c BD F6                   		movw	r14, ax
 729                             		.loc 1 150 0
 730 054e 8F 05 00                		mov	a, !_newDate+3
 731 0551 9D F0                   		mov	r8, a
 149:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 732                             		.loc 1 149 0
 733 0553 70                      		mov	x, a 
 734 0554 51 00                   		mov	a, #0
 735 0556 BD F4                   		movw	r12, ax
 736                             		.loc 1 150 0
 737 0558 8F 06 00                		mov	a, !_newDate+4
 738 055b 9D F0                   		mov	r8, a
 149:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 739                             		.loc 1 149 0
 740 055d 70                      		mov	x, a 
 741 055e 51 00                   		mov	a, #0
 742 0560 BD F2                   		movw	r10, ax
 743                             		.loc 1 150 0
 744 0562 8F 07 00                		mov	a, !_newDate+5
 745 0565 9D F0                   		mov	r8, a
 149:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 746                             		.loc 1 149 0
 747 0567 CD F1 00                		mov	r9, #0
 748 056a 30 00 00                		movw	ax, #_record
 749 056d B8 00                   		movw	[sp], ax
 750 056f 30 00 00                		movw	ax, #.LC0
 751 0572 B8 02                   		movw	[sp+2], ax
 752 0574 AD EA                   		movw	ax, r18
 753 0576 B8 04                   		movw	[sp+4], ax
 754 0578 AD E8                   		movw	ax, r16
 755 057a B8 06                   		movw	[sp+6], ax
 756 057c AD F6                   		movw	ax, r14
 757 057e B8 08                   		movw	[sp+8], ax
 758 0580 AD F4                   		movw	ax, r12
 759 0582 B8 0A                   		movw	[sp+10], ax
 760 0584 AD F2                   		movw	ax, r10
 761 0586 B8 0C                   		movw	[sp+12], ax
 762 0588 AD F0                   		movw	ax, r8
 763 058a B8 0E                   		movw	[sp+14], ax
 764 058c FC 00 00 00             		call	!!%code(_sprintf)
 151:../src/StateMachine.c **** 			setRTC();
 765                             		.loc 1 151 0
 766 0590 FC 00 00 00             		call	!!%code(_setRTC)
 152:../src/StateMachine.c **** 			state = 3;
 767                             		.loc 1 152 0
 768 0594 30 03 00                		movw	ax, #3
 769 0597 BF 00 00                		movw	!_state, ax
 770                             	.LBE3:
 771 059a EC B3 05 00             		br	!!.L66
 772                             	.L65:
 153:../src/StateMachine.c **** 		} else if (instr == 5) {
 773                             		.loc 1 153 0
 774 059e A8 26                   		movw	ax, [sp+38]
 775 05a0 44 05 00                		cmpw	ax, #5
 776 05a3 61 E8                   		 skz
 777 05a5 EC B3 05 00             		 br	!!.L66
 154:../src/StateMachine.c **** 			state = 3;
 778                             		.loc 1 154 0
 779 05a9 30 03 00                		movw	ax, #3
 780 05ac BF 00 00                		movw	!_state, ax
 155:../src/StateMachine.c **** 		}
 156:../src/StateMachine.c **** 		break;
 781                             		.loc 1 156 0
 782 05af EC 71 09 00             		br	!!.L2
 783                             	.L66:
 784 05b3 EC 71 09 00             		br	!!.L2
 785                             	.L23:
 157:../src/StateMachine.c **** 	case 15:
 158:../src/StateMachine.c **** 		if (instr == 1) { //accept command
 786                             		.loc 1 158 0
 787 05b7 A8 26                   		movw	ax, [sp+38]
 788 05b9 44 01 00                		cmpw	ax, #1
 789 05bc 61 E8                   		 skz
 790 05be EC 30 06 00             		 br	!!.L67
 791                             	.LBB4:
 159:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 792                             		.loc 1 159 0
 793 05c2 8F 02 00                		mov	a, !_newDate
 794 05c5 9D F0                   		mov	r8, a
 795 05c7 70                      		mov	x, a 
 796 05c8 51 00                   		mov	a, #0
 797 05ca BD EA                   		movw	r18, ax
 160:../src/StateMachine.c **** 					newDate[1], newDate[2], newDate[3], newDate[4], newDate[5]);
 798                             		.loc 1 160 0
 799 05cc 8F 03 00                		mov	a, !_newDate+1
 800 05cf 9D F0                   		mov	r8, a
 159:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 801                             		.loc 1 159 0
 802 05d1 70                      		mov	x, a 
 803 05d2 51 00                   		mov	a, #0
 804 05d4 BD E8                   		movw	r16, ax
 805                             		.loc 1 160 0
 806 05d6 8F 04 00                		mov	a, !_newDate+2
 807 05d9 9D F0                   		mov	r8, a
 159:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 808                             		.loc 1 159 0
 809 05db 70                      		mov	x, a 
 810 05dc 51 00                   		mov	a, #0
 811 05de BD F6                   		movw	r14, ax
 812                             		.loc 1 160 0
 813 05e0 8F 05 00                		mov	a, !_newDate+3
 814 05e3 9D F0                   		mov	r8, a
 159:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 815                             		.loc 1 159 0
 816 05e5 70                      		mov	x, a 
 817 05e6 51 00                   		mov	a, #0
 818 05e8 BD F4                   		movw	r12, ax
 819                             		.loc 1 160 0
 820 05ea 8F 06 00                		mov	a, !_newDate+4
 821 05ed 9D F0                   		mov	r8, a
 159:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 822                             		.loc 1 159 0
 823 05ef 70                      		mov	x, a 
 824 05f0 51 00                   		mov	a, #0
 825 05f2 BD F2                   		movw	r10, ax
 826                             		.loc 1 160 0
 827 05f4 8F 07 00                		mov	a, !_newDate+5
 828 05f7 9D F0                   		mov	r8, a
 159:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 829                             		.loc 1 159 0
 830 05f9 CD F1 00                		mov	r9, #0
 831 05fc 30 00 00                		movw	ax, #_record
 832 05ff B8 00                   		movw	[sp], ax
 833 0601 30 00 00                		movw	ax, #.LC0
 834 0604 B8 02                   		movw	[sp+2], ax
 835 0606 AD EA                   		movw	ax, r18
 836 0608 B8 04                   		movw	[sp+4], ax
 837 060a AD E8                   		movw	ax, r16
 838 060c B8 06                   		movw	[sp+6], ax
 839 060e AD F6                   		movw	ax, r14
 840 0610 B8 08                   		movw	[sp+8], ax
 841 0612 AD F4                   		movw	ax, r12
 842 0614 B8 0A                   		movw	[sp+10], ax
 843 0616 AD F2                   		movw	ax, r10
 844 0618 B8 0C                   		movw	[sp+12], ax
 845 061a AD F0                   		movw	ax, r8
 846 061c B8 0E                   		movw	[sp+14], ax
 847 061e FC 00 00 00             		call	!!%code(_sprintf)
 161:../src/StateMachine.c **** 			setRTC();
 848                             		.loc 1 161 0
 849 0622 FC 00 00 00             		call	!!%code(_setRTC)
 162:../src/StateMachine.c **** 			state = 4;
 850                             		.loc 1 162 0
 851 0626 30 04 00                		movw	ax, #4
 852 0629 BF 00 00                		movw	!_state, ax
 853                             	.LBE4:
 854 062c EC 45 06 00             		br	!!.L68
 855                             	.L67:
 163:../src/StateMachine.c **** 		} else if (instr == 5) {
 856                             		.loc 1 163 0
 857 0630 A8 26                   		movw	ax, [sp+38]
 858 0632 44 05 00                		cmpw	ax, #5
 859 0635 61 E8                   		 skz
 860 0637 EC 45 06 00             		 br	!!.L68
 164:../src/StateMachine.c **** 			state = 4;
 861                             		.loc 1 164 0
 862 063b 30 04 00                		movw	ax, #4
 863 063e BF 00 00                		movw	!_state, ax
 165:../src/StateMachine.c **** 		}
 166:../src/StateMachine.c **** 		break;
 864                             		.loc 1 166 0
 865 0641 EC 71 09 00             		br	!!.L2
 866                             	.L68:
 867 0645 EC 71 09 00             		br	!!.L2
 868                             	.L22:
 167:../src/StateMachine.c **** 	case 16:
 168:../src/StateMachine.c **** 		if (instr == 1) { //accept command
 869                             		.loc 1 168 0
 870 0649 A8 26                   		movw	ax, [sp+38]
 871 064b 44 01 00                		cmpw	ax, #1
 872 064e 61 E8                   		 skz
 873 0650 EC C2 06 00             		 br	!!.L69
 874                             	.LBB5:
 169:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 875                             		.loc 1 169 0
 876 0654 8F 02 00                		mov	a, !_newDate
 877 0657 9D F0                   		mov	r8, a
 878 0659 70                      		mov	x, a 
 879 065a 51 00                   		mov	a, #0
 880 065c BD EA                   		movw	r18, ax
 170:../src/StateMachine.c **** 					newDate[1], newDate[2], newDate[3], newDate[4], newDate[5]);
 881                             		.loc 1 170 0
 882 065e 8F 03 00                		mov	a, !_newDate+1
 883 0661 9D F0                   		mov	r8, a
 169:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 884                             		.loc 1 169 0
 885 0663 70                      		mov	x, a 
 886 0664 51 00                   		mov	a, #0
 887 0666 BD E8                   		movw	r16, ax
 888                             		.loc 1 170 0
 889 0668 8F 04 00                		mov	a, !_newDate+2
 890 066b 9D F0                   		mov	r8, a
 169:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 891                             		.loc 1 169 0
 892 066d 70                      		mov	x, a 
 893 066e 51 00                   		mov	a, #0
 894 0670 BD F6                   		movw	r14, ax
 895                             		.loc 1 170 0
 896 0672 8F 05 00                		mov	a, !_newDate+3
 897 0675 9D F0                   		mov	r8, a
 169:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 898                             		.loc 1 169 0
 899 0677 70                      		mov	x, a 
 900 0678 51 00                   		mov	a, #0
 901 067a BD F4                   		movw	r12, ax
 902                             		.loc 1 170 0
 903 067c 8F 06 00                		mov	a, !_newDate+4
 904 067f 9D F0                   		mov	r8, a
 169:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 905                             		.loc 1 169 0
 906 0681 70                      		mov	x, a 
 907 0682 51 00                   		mov	a, #0
 908 0684 BD F2                   		movw	r10, ax
 909                             		.loc 1 170 0
 910 0686 8F 07 00                		mov	a, !_newDate+5
 911 0689 9D F0                   		mov	r8, a
 169:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 912                             		.loc 1 169 0
 913 068b CD F1 00                		mov	r9, #0
 914 068e 30 00 00                		movw	ax, #_record
 915 0691 B8 00                   		movw	[sp], ax
 916 0693 30 00 00                		movw	ax, #.LC0
 917 0696 B8 02                   		movw	[sp+2], ax
 918 0698 AD EA                   		movw	ax, r18
 919 069a B8 04                   		movw	[sp+4], ax
 920 069c AD E8                   		movw	ax, r16
 921 069e B8 06                   		movw	[sp+6], ax
 922 06a0 AD F6                   		movw	ax, r14
 923 06a2 B8 08                   		movw	[sp+8], ax
 924 06a4 AD F4                   		movw	ax, r12
 925 06a6 B8 0A                   		movw	[sp+10], ax
 926 06a8 AD F2                   		movw	ax, r10
 927 06aa B8 0C                   		movw	[sp+12], ax
 928 06ac AD F0                   		movw	ax, r8
 929 06ae B8 0E                   		movw	[sp+14], ax
 930 06b0 FC 00 00 00             		call	!!%code(_sprintf)
 171:../src/StateMachine.c **** 			setRTC();
 931                             		.loc 1 171 0
 932 06b4 FC 00 00 00             		call	!!%code(_setRTC)
 172:../src/StateMachine.c **** 			state = 10;
 933                             		.loc 1 172 0
 934 06b8 30 0A 00                		movw	ax, #10
 935 06bb BF 00 00                		movw	!_state, ax
 936                             	.LBE5:
 937 06be EC D7 06 00             		br	!!.L70
 938                             	.L69:
 173:../src/StateMachine.c **** 		} else if (instr == 5) {
 939                             		.loc 1 173 0
 940 06c2 A8 26                   		movw	ax, [sp+38]
 941 06c4 44 05 00                		cmpw	ax, #5
 942 06c7 61 E8                   		 skz
 943 06c9 EC D7 06 00             		 br	!!.L70
 174:../src/StateMachine.c **** 			state = 10;
 944                             		.loc 1 174 0
 945 06cd 30 0A 00                		movw	ax, #10
 946 06d0 BF 00 00                		movw	!_state, ax
 175:../src/StateMachine.c **** 		}
 176:../src/StateMachine.c **** 		break;
 947                             		.loc 1 176 0
 948 06d3 EC 71 09 00             		br	!!.L2
 949                             	.L70:
 950 06d7 EC 71 09 00             		br	!!.L2
 951                             	.L24:
 177:../src/StateMachine.c **** 	case 17:
 178:../src/StateMachine.c **** 		if (instr == 1) { //accept command
 952                             		.loc 1 178 0
 953 06db A8 26                   		movw	ax, [sp+38]
 954 06dd 44 01 00                		cmpw	ax, #1
 955 06e0 61 E8                   		 skz
 956 06e2 EC 54 07 00             		 br	!!.L71
 957                             	.LBB6:
 179:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 958                             		.loc 1 179 0
 959 06e6 8F 02 00                		mov	a, !_newDate
 960 06e9 9D F0                   		mov	r8, a
 961 06eb 70                      		mov	x, a 
 962 06ec 51 00                   		mov	a, #0
 963 06ee BD EA                   		movw	r18, ax
 180:../src/StateMachine.c **** 					newDate[1], newDate[2], newDate[3], newDate[4], newDate[5]);
 964                             		.loc 1 180 0
 965 06f0 8F 03 00                		mov	a, !_newDate+1
 966 06f3 9D F0                   		mov	r8, a
 179:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 967                             		.loc 1 179 0
 968 06f5 70                      		mov	x, a 
 969 06f6 51 00                   		mov	a, #0
 970 06f8 BD E8                   		movw	r16, ax
 971                             		.loc 1 180 0
 972 06fa 8F 04 00                		mov	a, !_newDate+2
 973 06fd 9D F0                   		mov	r8, a
 179:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 974                             		.loc 1 179 0
 975 06ff 70                      		mov	x, a 
 976 0700 51 00                   		mov	a, #0
 977 0702 BD F6                   		movw	r14, ax
 978                             		.loc 1 180 0
 979 0704 8F 05 00                		mov	a, !_newDate+3
 980 0707 9D F0                   		mov	r8, a
 179:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 981                             		.loc 1 179 0
 982 0709 70                      		mov	x, a 
 983 070a 51 00                   		mov	a, #0
 984 070c BD F4                   		movw	r12, ax
 985                             		.loc 1 180 0
 986 070e 8F 06 00                		mov	a, !_newDate+4
 987 0711 9D F0                   		mov	r8, a
 179:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 988                             		.loc 1 179 0
 989 0713 70                      		mov	x, a 
 990 0714 51 00                   		mov	a, #0
 991 0716 BD F2                   		movw	r10, ax
 992                             		.loc 1 180 0
 993 0718 8F 07 00                		mov	a, !_newDate+5
 994 071b 9D F0                   		mov	r8, a
 179:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 995                             		.loc 1 179 0
 996 071d CD F1 00                		mov	r9, #0
 997 0720 30 00 00                		movw	ax, #_record
 998 0723 B8 00                   		movw	[sp], ax
 999 0725 30 00 00                		movw	ax, #.LC0
 1000 0728 B8 02                   		movw	[sp+2], ax
 1001 072a AD EA                   		movw	ax, r18
 1002 072c B8 04                   		movw	[sp+4], ax
 1003 072e AD E8                   		movw	ax, r16
 1004 0730 B8 06                   		movw	[sp+6], ax
 1005 0732 AD F6                   		movw	ax, r14
 1006 0734 B8 08                   		movw	[sp+8], ax
 1007 0736 AD F4                   		movw	ax, r12
 1008 0738 B8 0A                   		movw	[sp+10], ax
 1009 073a AD F2                   		movw	ax, r10
 1010 073c B8 0C                   		movw	[sp+12], ax
 1011 073e AD F0                   		movw	ax, r8
 1012 0740 B8 0E                   		movw	[sp+14], ax
 1013 0742 FC 00 00 00             		call	!!%code(_sprintf)
 181:../src/StateMachine.c **** 			setRTC();
 1014                             		.loc 1 181 0
 1015 0746 FC 00 00 00             		call	!!%code(_setRTC)
 182:../src/StateMachine.c **** 			state = 11;
 1016                             		.loc 1 182 0
 1017 074a 30 0B 00                		movw	ax, #11
 1018 074d BF 00 00                		movw	!_state, ax
 1019                             	.LBE6:
 1020 0750 EC 69 07 00             		br	!!.L72
 1021                             	.L71:
 183:../src/StateMachine.c **** 		} else if (instr == 5) {
 1022                             		.loc 1 183 0
 1023 0754 A8 26                   		movw	ax, [sp+38]
 1024 0756 44 05 00                		cmpw	ax, #5
 1025 0759 61 E8                   		 skz
 1026 075b EC 69 07 00             		 br	!!.L72
 184:../src/StateMachine.c **** 			state = 11;
 1027                             		.loc 1 184 0
 1028 075f 30 0B 00                		movw	ax, #11
 1029 0762 BF 00 00                		movw	!_state, ax
 185:../src/StateMachine.c **** 		}
 186:../src/StateMachine.c **** 		break;
 1030                             		.loc 1 186 0
 1031 0765 EC 71 09 00             		br	!!.L2
 1032                             	.L72:
 1033 0769 EC 71 09 00             		br	!!.L2
 1034                             	.L25:
 187:../src/StateMachine.c **** 	case 18:
 188:../src/StateMachine.c **** 		if (instr == 1) { //accept command
 1035                             		.loc 1 188 0
 1036 076d A8 26                   		movw	ax, [sp+38]
 1037 076f 44 01 00                		cmpw	ax, #1
 1038 0772 61 E8                   		 skz
 1039 0774 EC E6 07 00             		 br	!!.L73
 1040                             	.LBB7:
 189:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 1041                             		.loc 1 189 0
 1042 0778 8F 02 00                		mov	a, !_newDate
 1043 077b 9D F0                   		mov	r8, a
 1044 077d 70                      		mov	x, a 
 1045 077e 51 00                   		mov	a, #0
 1046 0780 BD EA                   		movw	r18, ax
 190:../src/StateMachine.c **** 					newDate[1], newDate[2], newDate[3], newDate[4], newDate[5]);
 1047                             		.loc 1 190 0
 1048 0782 8F 03 00                		mov	a, !_newDate+1
 1049 0785 9D F0                   		mov	r8, a
 189:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 1050                             		.loc 1 189 0
 1051 0787 70                      		mov	x, a 
 1052 0788 51 00                   		mov	a, #0
 1053 078a BD E8                   		movw	r16, ax
 1054                             		.loc 1 190 0
 1055 078c 8F 04 00                		mov	a, !_newDate+2
 1056 078f 9D F0                   		mov	r8, a
 189:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 1057                             		.loc 1 189 0
 1058 0791 70                      		mov	x, a 
 1059 0792 51 00                   		mov	a, #0
 1060 0794 BD F6                   		movw	r14, ax
 1061                             		.loc 1 190 0
 1062 0796 8F 05 00                		mov	a, !_newDate+3
 1063 0799 9D F0                   		mov	r8, a
 189:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 1064                             		.loc 1 189 0
 1065 079b 70                      		mov	x, a 
 1066 079c 51 00                   		mov	a, #0
 1067 079e BD F4                   		movw	r12, ax
 1068                             		.loc 1 190 0
 1069 07a0 8F 06 00                		mov	a, !_newDate+4
 1070 07a3 9D F0                   		mov	r8, a
 189:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 1071                             		.loc 1 189 0
 1072 07a5 70                      		mov	x, a 
 1073 07a6 51 00                   		mov	a, #0
 1074 07a8 BD F2                   		movw	r10, ax
 1075                             		.loc 1 190 0
 1076 07aa 8F 07 00                		mov	a, !_newDate+5
 1077 07ad 9D F0                   		mov	r8, a
 189:../src/StateMachine.c **** 			sprintf(record, "$B20%02d,%d,%d,%d,%d,%d\r\n", newDate[0],
 1078                             		.loc 1 189 0
 1079 07af CD F1 00                		mov	r9, #0
 1080 07b2 30 00 00                		movw	ax, #_record
 1081 07b5 B8 00                   		movw	[sp], ax
 1082 07b7 30 00 00                		movw	ax, #.LC0
 1083 07ba B8 02                   		movw	[sp+2], ax
 1084 07bc AD EA                   		movw	ax, r18
 1085 07be B8 04                   		movw	[sp+4], ax
 1086 07c0 AD E8                   		movw	ax, r16
 1087 07c2 B8 06                   		movw	[sp+6], ax
 1088 07c4 AD F6                   		movw	ax, r14
 1089 07c6 B8 08                   		movw	[sp+8], ax
 1090 07c8 AD F4                   		movw	ax, r12
 1091 07ca B8 0A                   		movw	[sp+10], ax
 1092 07cc AD F2                   		movw	ax, r10
 1093 07ce B8 0C                   		movw	[sp+12], ax
 1094 07d0 AD F0                   		movw	ax, r8
 1095 07d2 B8 0E                   		movw	[sp+14], ax
 1096 07d4 FC 00 00 00             		call	!!%code(_sprintf)
 191:../src/StateMachine.c **** 			setRTC();
 1097                             		.loc 1 191 0
 1098 07d8 FC 00 00 00             		call	!!%code(_setRTC)
 192:../src/StateMachine.c **** 			state = 12;
 1099                             		.loc 1 192 0
 1100 07dc 30 0C 00                		movw	ax, #12
 1101 07df BF 00 00                		movw	!_state, ax
 1102                             	.LBE7:
 1103 07e2 EC FB 07 00             		br	!!.L74
 1104                             	.L73:
 193:../src/StateMachine.c **** 		} else if (instr == 5) {
 1105                             		.loc 1 193 0
 1106 07e6 A8 26                   		movw	ax, [sp+38]
 1107 07e8 44 05 00                		cmpw	ax, #5
 1108 07eb 61 E8                   		 skz
 1109 07ed EC FB 07 00             		 br	!!.L74
 194:../src/StateMachine.c **** 			state = 12;
 1110                             		.loc 1 194 0
 1111 07f1 30 0C 00                		movw	ax, #12
 1112 07f4 BF 00 00                		movw	!_state, ax
 195:../src/StateMachine.c **** 		}
 196:../src/StateMachine.c **** 		break;
 1113                             		.loc 1 196 0
 1114 07f7 EC 71 09 00             		br	!!.L2
 1115                             	.L74:
 1116 07fb EC 71 09 00             		br	!!.L2
 1117                             	.L13:
 197:../src/StateMachine.c **** 
 198:../src/StateMachine.c **** 		//---------------------------------------------------- test mode
 199:../src/StateMachine.c **** 
 200:../src/StateMachine.c **** 	case 5:
 201:../src/StateMachine.c **** 		if (instr == 3)
 1118                             		.loc 1 201 0
 1119 07ff A8 26                   		movw	ax, [sp+38]
 1120 0801 44 03 00                		cmpw	ax, #3
 1121 0804 61 E8                   		 skz
 1122 0806 EC 1A 08 00             		 br	!!.L75
 202:../src/StateMachine.c **** 			state++;
 1123                             		.loc 1 202 0
 1124 080a AF 00 00                		movw	ax, !_state
 1125 080d BD F0                   		movw	r8, ax
 1126 080f A6 F0                   		incw	r8
 1127 0811 AD F0                   		movw	ax, r8
 1128 0813 BF 00 00                		movw	!_state, ax
 1129 0816 EC 42 08 00             		br	!!.L76
 1130                             	.L75:
 203:../src/StateMachine.c **** 		else if (instr == 4)
 1131                             		.loc 1 203 0
 1132 081a A8 26                   		movw	ax, [sp+38]
 1133 081c 44 04 00                		cmpw	ax, #4
 1134 081f 61 E8                   		 skz
 1135 0821 EC 2F 08 00             		 br	!!.L77
 204:../src/StateMachine.c **** 			state = 9;
 1136                             		.loc 1 204 0
 1137 0825 30 09 00                		movw	ax, #9
 1138 0828 BF 00 00                		movw	!_state, ax
 1139 082b EC 42 08 00             		br	!!.L76
 1140                             	.L77:
 205:../src/StateMachine.c **** 		else if (instr == 7)
 1141                             		.loc 1 205 0
 1142 082f A8 26                   		movw	ax, [sp+38]
 1143 0831 44 07 00                		cmpw	ax, #7
 1144 0834 61 E8                   		 skz
 1145 0836 EC 42 08 00             		 br	!!.L76
 206:../src/StateMachine.c **** 			state = 0;
 1146                             		.loc 1 206 0
 1147 083a F6                      		clrw	ax
 1148 083b BF 00 00                		movw	!_state, ax
 207:../src/StateMachine.c **** 		break;
 1149                             		.loc 1 207 0
 1150 083e EC 71 09 00             		br	!!.L2
 1151                             	.L76:
 1152 0842 EC 71 09 00             		br	!!.L2
 1153                             	.L12:
 208:../src/StateMachine.c **** 	case 6:
 209:../src/StateMachine.c **** 		if (instr == 3)
 1154                             		.loc 1 209 0
 1155 0846 A8 26                   		movw	ax, [sp+38]
 1156 0848 44 03 00                		cmpw	ax, #3
 1157 084b 61 E8                   		 skz
 1158 084d EC 61 08 00             		 br	!!.L78
 210:../src/StateMachine.c **** 			state++;
 1159                             		.loc 1 210 0
 1160 0851 AF 00 00                		movw	ax, !_state
 1161 0854 BD F0                   		movw	r8, ax
 1162 0856 A6 F0                   		incw	r8
 1163 0858 AD F0                   		movw	ax, r8
 1164 085a BF 00 00                		movw	!_state, ax
 1165 085d EC 8F 08 00             		br	!!.L79
 1166                             	.L78:
 211:../src/StateMachine.c **** 		else if (instr == 4)
 1167                             		.loc 1 211 0
 1168 0861 A8 26                   		movw	ax, [sp+38]
 1169 0863 44 04 00                		cmpw	ax, #4
 1170 0866 61 E8                   		 skz
 1171 0868 EC 7C 08 00             		 br	!!.L80
 212:../src/StateMachine.c **** 			state--;
 1172                             		.loc 1 212 0
 1173 086c AF 00 00                		movw	ax, !_state
 1174 086f BD F0                   		movw	r8, ax
 1175 0871 B6 F0                   		decw	r8
 1176 0873 AD F0                   		movw	ax, r8
 1177 0875 BF 00 00                		movw	!_state, ax
 1178 0878 EC 8F 08 00             		br	!!.L79
 1179                             	.L80:
 213:../src/StateMachine.c **** 		else if (instr == 7)
 1180                             		.loc 1 213 0
 1181 087c A8 26                   		movw	ax, [sp+38]
 1182 087e 44 07 00                		cmpw	ax, #7
 1183 0881 61 E8                   		 skz
 1184 0883 EC 8F 08 00             		 br	!!.L79
 214:../src/StateMachine.c **** 			state = 0;
 1185                             		.loc 1 214 0
 1186 0887 F6                      		clrw	ax
 1187 0888 BF 00 00                		movw	!_state, ax
 215:../src/StateMachine.c **** 		break;
 1188                             		.loc 1 215 0
 1189 088b EC 71 09 00             		br	!!.L2
 1190                             	.L79:
 1191 088f EC 71 09 00             		br	!!.L2
 1192                             	.L14:
 216:../src/StateMachine.c **** 	case 7:
 217:../src/StateMachine.c **** 		if (instr == 3)
 1193                             		.loc 1 217 0
 1194 0893 A8 26                   		movw	ax, [sp+38]
 1195 0895 44 03 00                		cmpw	ax, #3
 1196 0898 61 E8                   		 skz
 1197 089a EC AE 08 00             		 br	!!.L81
 218:../src/StateMachine.c **** 			state++;
 1198                             		.loc 1 218 0
 1199 089e AF 00 00                		movw	ax, !_state
 1200 08a1 BD F0                   		movw	r8, ax
 1201 08a3 A6 F0                   		incw	r8
 1202 08a5 AD F0                   		movw	ax, r8
 1203 08a7 BF 00 00                		movw	!_state, ax
 1204 08aa EC DC 08 00             		br	!!.L82
 1205                             	.L81:
 219:../src/StateMachine.c **** 		else if (instr == 4)
 1206                             		.loc 1 219 0
 1207 08ae A8 26                   		movw	ax, [sp+38]
 1208 08b0 44 04 00                		cmpw	ax, #4
 1209 08b3 61 E8                   		 skz
 1210 08b5 EC C9 08 00             		 br	!!.L83
 220:../src/StateMachine.c **** 			state--;
 1211                             		.loc 1 220 0
 1212 08b9 AF 00 00                		movw	ax, !_state
 1213 08bc BD F0                   		movw	r8, ax
 1214 08be B6 F0                   		decw	r8
 1215 08c0 AD F0                   		movw	ax, r8
 1216 08c2 BF 00 00                		movw	!_state, ax
 1217 08c5 EC DC 08 00             		br	!!.L82
 1218                             	.L83:
 221:../src/StateMachine.c **** 		else if (instr == 7)
 1219                             		.loc 1 221 0
 1220 08c9 A8 26                   		movw	ax, [sp+38]
 1221 08cb 44 07 00                		cmpw	ax, #7
 1222 08ce 61 E8                   		 skz
 1223 08d0 EC DC 08 00             		 br	!!.L82
 222:../src/StateMachine.c **** 			state = 0;
 1224                             		.loc 1 222 0
 1225 08d4 F6                      		clrw	ax
 1226 08d5 BF 00 00                		movw	!_state, ax
 223:../src/StateMachine.c **** 		break;
 1227                             		.loc 1 223 0
 1228 08d8 EC 71 09 00             		br	!!.L2
 1229                             	.L82:
 1230 08dc EC 71 09 00             		br	!!.L2
 1231                             	.L15:
 224:../src/StateMachine.c **** 	case 8:
 225:../src/StateMachine.c **** 		if (instr == 3)
 1232                             		.loc 1 225 0
 1233 08e0 A8 26                   		movw	ax, [sp+38]
 1234 08e2 44 03 00                		cmpw	ax, #3
 1235 08e5 61 E8                   		 skz
 1236 08e7 EC FB 08 00             		 br	!!.L84
 226:../src/StateMachine.c **** 			state++;
 1237                             		.loc 1 226 0
 1238 08eb AF 00 00                		movw	ax, !_state
 1239 08ee BD F0                   		movw	r8, ax
 1240 08f0 A6 F0                   		incw	r8
 1241 08f2 AD F0                   		movw	ax, r8
 1242 08f4 BF 00 00                		movw	!_state, ax
 1243 08f7 EC 29 09 00             		br	!!.L85
 1244                             	.L84:
 227:../src/StateMachine.c **** 		else if (instr == 4)
 1245                             		.loc 1 227 0
 1246 08fb A8 26                   		movw	ax, [sp+38]
 1247 08fd 44 04 00                		cmpw	ax, #4
 1248 0900 61 E8                   		 skz
 1249 0902 EC 16 09 00             		 br	!!.L86
 228:../src/StateMachine.c **** 			state--;
 1250                             		.loc 1 228 0
 1251 0906 AF 00 00                		movw	ax, !_state
 1252 0909 BD F0                   		movw	r8, ax
 1253 090b B6 F0                   		decw	r8
 1254 090d AD F0                   		movw	ax, r8
 1255 090f BF 00 00                		movw	!_state, ax
 1256 0912 EC 29 09 00             		br	!!.L85
 1257                             	.L86:
 229:../src/StateMachine.c **** 		else if (instr == 7)
 1258                             		.loc 1 229 0
 1259 0916 A8 26                   		movw	ax, [sp+38]
 1260 0918 44 07 00                		cmpw	ax, #7
 1261 091b 61 E8                   		 skz
 1262 091d EC 29 09 00             		 br	!!.L85
 230:../src/StateMachine.c **** 			state = 0;
 1263                             		.loc 1 230 0
 1264 0921 F6                      		clrw	ax
 1265 0922 BF 00 00                		movw	!_state, ax
 231:../src/StateMachine.c **** 		break;
 1266                             		.loc 1 231 0
 1267 0925 EC 71 09 00             		br	!!.L2
 1268                             	.L85:
 1269 0929 EC 71 09 00             		br	!!.L2
 1270                             	.L3:
 232:../src/StateMachine.c **** 	case 9:
 233:../src/StateMachine.c **** 		if (instr == 3)
 1271                             		.loc 1 233 0
 1272 092d A8 26                   		movw	ax, [sp+38]
 1273 092f 44 03 00                		cmpw	ax, #3
 1274 0932 61 E8                   		 skz
 1275 0934 EC 42 09 00             		 br	!!.L87
 234:../src/StateMachine.c **** 			state = 5;
 1276                             		.loc 1 234 0
 1277 0938 30 05 00                		movw	ax, #5
 1278 093b BF 00 00                		movw	!_state, ax
 1279 093e EC 70 09 00             		br	!!.L88
 1280                             	.L87:
 235:../src/StateMachine.c **** 		else if (instr == 4)
 1281                             		.loc 1 235 0
 1282 0942 A8 26                   		movw	ax, [sp+38]
 1283 0944 44 04 00                		cmpw	ax, #4
 1284 0947 61 E8                   		 skz
 1285 0949 EC 5D 09 00             		 br	!!.L89
 236:../src/StateMachine.c **** 			state--;
 1286                             		.loc 1 236 0
 1287 094d AF 00 00                		movw	ax, !_state
 1288 0950 BD F0                   		movw	r8, ax
 1289 0952 B6 F0                   		decw	r8
 1290 0954 AD F0                   		movw	ax, r8
 1291 0956 BF 00 00                		movw	!_state, ax
 1292 0959 EC 70 09 00             		br	!!.L88
 1293                             	.L89:
 237:../src/StateMachine.c **** 		else if (instr == 7)
 1294                             		.loc 1 237 0
 1295 095d A8 26                   		movw	ax, [sp+38]
 1296 095f 44 07 00                		cmpw	ax, #7
 1297 0962 61 E8                   		 skz
 1298 0964 EC 70 09 00             		 br	!!.L88
 238:../src/StateMachine.c **** 			state = 0;
 1299                             		.loc 1 238 0
 1300 0968 F6                      		clrw	ax
 1301 0969 BF 00 00                		movw	!_state, ax
 239:../src/StateMachine.c **** 		break;
 1302                             		.loc 1 239 0
 1303 096c EC 70 09 00             		br	!!.L138
 1304                             	.L88:
 1305                             	.L138:
 1306 0970 00                      		nop
 1307                             	.L2:
 240:../src/StateMachine.c **** 	}
 241:../src/StateMachine.c **** 
 242:../src/StateMachine.c **** 	//STATE FUNCTIONS
 243:../src/StateMachine.c **** 
 244:../src/StateMachine.c **** 	/*
 245:../src/StateMachine.c **** 	 * Normal mode functions
 246:../src/StateMachine.c **** 	 *
 247:../src/StateMachine.c **** 	 * 0 - adjust date time
 248:../src/StateMachine.c **** 	 * 1 - measure open circuit voltage and short circuit current
 249:../src/StateMachine.c **** 	 * 2 - Set Year
 250:../src/StateMachine.c **** 	 * 3 - Set Month
 251:../src/StateMachine.c **** 	 * 4 - Set Day
 252:../src/StateMachine.c **** 	 * 10 - Set Hour
 253:../src/StateMachine.c **** 	 * 11 - Set Minutes
 254:../src/StateMachine.c **** 	 * 12 - Set Seconds
 255:../src/StateMachine.c **** 	 * 13 - Year:
 256:../src/StateMachine.c **** 	 * 14 - Month:
 257:../src/StateMachine.c **** 	 * 15 - Day:
 258:../src/StateMachine.c **** 	 * 16 - Hour:
 259:../src/StateMachine.c **** 	 * 17 - Minute:
 260:../src/StateMachine.c **** 	 * 18 - Second:
 261:../src/StateMachine.c **** 	 *
 262:../src/StateMachine.c **** 	 *
 263:../src/StateMachine.c **** 	 *
 264:../src/StateMachine.c **** 	 * Test mode functions
 265:../src/StateMachine.c **** 	 *
 266:../src/StateMachine.c **** 	 * 5 - $L0
 267:../src/StateMachine.c **** 	 * 6 - $L1
 268:../src/StateMachine.c **** 	 * 7 - $L2
 269:../src/StateMachine.c **** 	 * 8 - $L3
 270:../src/StateMachine.c **** 	 * 9 - $L4
 271:../src/StateMachine.c **** 	 */
 272:../src/StateMachine.c **** 
 273:../src/StateMachine.c **** 	switch (state) {
 1308                             		.loc 1 273 0
 1309 0971 AF 00 00                		movw	ax, !_state
 1310 0974 BD F0                   		movw	r8, ax
 1311 0976 44 09 00                		cmpw	ax, #9
 1312 0979 61 F8                   		 sknz
 1313 097b EC D5 13 00             		 br	!!.L91
 1314 097f AD F0                   		movw	ax, r8
 1315 0981 44 09 00                		cmpw	ax, #9
 1316 0984 71 FF                   		 xor1	CY, a.7
 1317 0986 61 F3                   		 sknh
 1318 0988 EC 17 0A 00             		 br	!!.L92
 1319 098c AD F0                   		movw	ax, r8
 1320 098e 44 04 00                		cmpw	ax, #4
 1321 0991 61 F8                   		 sknz
 1322 0993 EC AD 0C 00             		 br	!!.L93
 1323 0997 AD F0                   		movw	ax, r8
 1324 0999 44 04 00                		cmpw	ax, #4
 1325 099c 71 FF                   		 xor1	CY, a.7
 1326 099e 61 F3                   		 sknh
 1327 09a0 EC E5 09 00             		 br	!!.L94
 1328 09a4 AD F0                   		movw	ax, r8
 1329 09a6 44 01 00                		cmpw	ax, #1
 1330 09a9 61 F8                   		 sknz
 1331 09ab EC CF 0B 00             		 br	!!.L95
 1332 09af AD F0                   		movw	ax, r8
 1333 09b1 44 01 00                		cmpw	ax, #1
 1334 09b4 71 FF                   		 xor1	CY, a.7
 1335 09b6 61 F3                   		 sknh
 1336 09b8 EC CB 09 00             		 br	!!.L96
 1337 09bc AD F0                   		movw	ax, r8
 1338 09be 44 00 00                		cmpw	ax, #0
 1339 09c1 61 F8                   		 sknz
 1340 09c3 EC 93 0A 00             		 br	!!.L97
 1341 09c7 EC 8B 14 00             		br	!!.L1
 1342                             	.L96:
 1343 09cb AD F0                   		movw	ax, r8
 1344 09cd 44 02 00                		cmpw	ax, #2
 1345 09d0 61 F8                   		 sknz
 1346 09d2 EC 28 0C 00             		 br	!!.L98
 1347 09d6 AD F0                   		movw	ax, r8
 1348 09d8 44 03 00                		cmpw	ax, #3
 1349 09db 61 F8                   		 sknz
 1350 09dd EC 68 0C 00             		 br	!!.L99
 1351 09e1 EC 8B 14 00             		br	!!.L1
 1352                             	.L94:
 1353 09e5 AD F0                   		movw	ax, r8
 1354 09e7 44 06 00                		cmpw	ax, #6
 1355 09ea 61 F8                   		 sknz
 1356 09ec EC AA 11 00             		 br	!!.L100
 1357 09f0 AD F0                   		movw	ax, r8
 1358 09f2 44 06 00                		cmpw	ax, #6
 1359 09f5 71 FF                   		 xor1	CY, a.7
 1360 09f7 61 D8                   		 sknc
 1361 09f9 EC F1 10 00             		 br	!!.L101
 1362 09fd AD F0                   		movw	ax, r8
 1363 09ff 44 07 00                		cmpw	ax, #7
 1364 0a02 61 F8                   		 sknz
 1365 0a04 EC 63 12 00             		 br	!!.L102
 1366 0a08 AD F0                   		movw	ax, r8
 1367 0a0a 44 08 00                		cmpw	ax, #8
 1368 0a0d 61 F8                   		 sknz
 1369 0a0f EC 1C 13 00             		 br	!!.L103
 1370 0a13 EC 8B 14 00             		br	!!.L1
 1371                             	.L92:
 1372 0a17 AD F0                   		movw	ax, r8
 1373 0a19 44 0E 00                		cmpw	ax, #14
 1374 0a1c 61 F8                   		 sknz
 1375 0a1e EC 37 0E 00             		 br	!!.L104
 1376 0a22 AD F0                   		movw	ax, r8
 1377 0a24 44 0E 00                		cmpw	ax, #14
 1378 0a27 71 FF                   		 xor1	CY, a.7
 1379 0a29 61 F3                   		 sknh
 1380 0a2b EC 61 0A 00             		 br	!!.L105
 1381 0a2f AD F0                   		movw	ax, r8
 1382 0a31 44 0B 00                		cmpw	ax, #11
 1383 0a34 61 F8                   		 sknz
 1384 0a36 EC 28 0D 00             		 br	!!.L106
 1385 0a3a AD F0                   		movw	ax, r8
 1386 0a3c 44 0B 00                		cmpw	ax, #11
 1387 0a3f 71 FF                   		 xor1	CY, a.7
 1388 0a41 61 D8                   		 sknc
 1389 0a43 EC E8 0C 00             		 br	!!.L107
 1390 0a47 AD F0                   		movw	ax, r8
 1391 0a49 44 0C 00                		cmpw	ax, #12
 1392 0a4c 61 F8                   		 sknz
 1393 0a4e EC 72 0D 00             		 br	!!.L108
 1394 0a52 AD F0                   		movw	ax, r8
 1395 0a54 44 0D 00                		cmpw	ax, #13
 1396 0a57 61 F8                   		 sknz
 1397 0a59 EC BC 0D 00             		 br	!!.L109
 1398 0a5d EC 8B 14 00             		br	!!.L1
 1399                             	.L105:
 1400 0a61 AD F0                   		movw	ax, r8
 1401 0a63 44 10 00                		cmpw	ax, #16
 1402 0a66 61 F8                   		 sknz
 1403 0a68 EC 80 0F 00             		 br	!!.L110
 1404 0a6c AD F0                   		movw	ax, r8
 1405 0a6e 44 10 00                		cmpw	ax, #16
 1406 0a71 71 FF                   		 xor1	CY, a.7
 1407 0a73 61 D8                   		 sknc
 1408 0a75 EC B2 0E 00             		 br	!!.L111
 1409 0a79 AD F0                   		movw	ax, r8
 1410 0a7b 44 11 00                		cmpw	ax, #17
 1411 0a7e 61 F8                   		 sknz
 1412 0a80 EC FB 0F 00             		 br	!!.L112
 1413 0a84 AD F0                   		movw	ax, r8
 1414 0a86 44 12 00                		cmpw	ax, #18
 1415 0a89 61 F8                   		 sknz
 1416 0a8b EC 76 10 00             		 br	!!.L113
 1417 0a8f EC 8B 14 00             		br	!!.L1
 1418                             	.L97:
 1419                             	.LBB8:
 274:../src/StateMachine.c **** 	case 0:
 275:../src/StateMachine.c **** 		P4_bit.no1 = 0;
 1420                             		.loc 1 275 0
 1421 0a93 C9 F0 04 FF             		movw	r8, #-252
 1422 0a97 AD F0                   		movw	ax, r8
 1423 0a99 BD F4                   		movw	r12, ax
 1424 0a9b FA F4                   		movw	hl, r12
 1425 0a9d 8B                      		mov	a, [hl]
 1426 0a9e 9D F2                   		mov	r10, a
 1427 0aa0 5A F2 FD                		and	r10, #-3
 1428 0aa3 AD F0                   		movw	ax, r8
 1429 0aa5 BD F6                   		movw	r14, ax
 1430 0aa7 DA F6                   		movw	bc, r14
 1431 0aa9 8D F2                   		mov	a, r10
 1432 0aab 48 00 00                		mov	[bc], a
 276:../src/StateMachine.c **** 		P4_bit.no2 = 0;
 1433                             		.loc 1 276 0
 1434 0aae C9 F0 04 FF             		movw	r8, #-252
 1435 0ab2 AD F0                   		movw	ax, r8
 1436 0ab4 BD F4                   		movw	r12, ax
 1437 0ab6 FA F4                   		movw	hl, r12
 1438 0ab8 8B                      		mov	a, [hl]
 1439 0ab9 9D F2                   		mov	r10, a
 1440 0abb 5A F2 FB                		and	r10, #-5
 1441 0abe AD F0                   		movw	ax, r8
 1442 0ac0 BD F6                   		movw	r14, ax
 1443 0ac2 DA F6                   		movw	bc, r14
 1444 0ac4 8D F2                   		mov	a, r10
 1445 0ac6 48 00 00                		mov	[bc], a
 277:../src/StateMachine.c **** 		P4_bit.no3 = 0;
 1446                             		.loc 1 277 0
 1447 0ac9 C9 F0 04 FF             		movw	r8, #-252
 1448 0acd AD F0                   		movw	ax, r8
 1449 0acf BD F4                   		movw	r12, ax
 1450 0ad1 FA F4                   		movw	hl, r12
 1451 0ad3 8B                      		mov	a, [hl]
 1452 0ad4 9D F2                   		mov	r10, a
 1453 0ad6 5A F2 F7                		and	r10, #-9
 1454 0ad9 AD F0                   		movw	ax, r8
 1455 0adb BD F6                   		movw	r14, ax
 1456 0add DA F6                   		movw	bc, r14
 1457 0adf 8D F2                   		mov	a, r10
 1458 0ae1 48 00 00                		mov	[bc], a
 278:../src/StateMachine.c **** 		delayNoInt(1000);
 1459                             		.loc 1 278 0
 1460 0ae4 30 E8 03                		movw	ax, #1000
 1461 0ae7 B8 00                   		movw	[sp], ax
 1462 0ae9 FC 00 00 00             		call	!!%code(_delayNoInt)
 279:../src/StateMachine.c **** 		delayNoInt(1000);
 1463                             		.loc 1 279 0
 1464 0aed 30 E8 03                		movw	ax, #1000
 1465 0af0 B8 00                   		movw	[sp], ax
 1466 0af2 FC 00 00 00             		call	!!%code(_delayNoInt)
 280:../src/StateMachine.c **** 		delayNoInt(1000);
 1467                             		.loc 1 280 0
 1468 0af6 30 E8 03                		movw	ax, #1000
 1469 0af9 B8 00                   		movw	[sp], ax
 1470 0afb FC 00 00 00             		call	!!%code(_delayNoInt)
 281:../src/StateMachine.c **** 		collectADC();
 1471                             		.loc 1 281 0
 1472 0aff FC 00 00 00             		call	!!%code(_collectADC)
 282:../src/StateMachine.c **** 		collectADC();
 1473                             		.loc 1 282 0
 1474 0b03 FC 00 00 00             		call	!!%code(_collectADC)
 283:../src/StateMachine.c **** 		uint8_t newVolt = voltage;
 1475                             		.loc 1 283 0
 1476 0b07 8F 00 00                		mov	a, !_voltage
 1477 0b0a 9D F0                   		mov	r8, a
 1478 0b0c 98 1D                   		mov	[sp+29], a
 284:../src/StateMachine.c **** 
 285:../src/StateMachine.c **** 		P4_bit.no1 = 0;
 1479                             		.loc 1 285 0
 1480 0b0e C9 F0 04 FF             		movw	r8, #-252
 1481 0b12 AD F0                   		movw	ax, r8
 1482 0b14 BD F4                   		movw	r12, ax
 1483 0b16 FA F4                   		movw	hl, r12
 1484 0b18 8B                      		mov	a, [hl]
 1485 0b19 9D F2                   		mov	r10, a
 1486 0b1b 5A F2 FD                		and	r10, #-3
 1487 0b1e AD F0                   		movw	ax, r8
 1488 0b20 BD F6                   		movw	r14, ax
 1489 0b22 DA F6                   		movw	bc, r14
 1490 0b24 8D F2                   		mov	a, r10
 1491 0b26 48 00 00                		mov	[bc], a
 286:../src/StateMachine.c **** 		P4_bit.no2 = 0;
 1492                             		.loc 1 286 0
 1493 0b29 C9 F0 04 FF             		movw	r8, #-252
 1494 0b2d AD F0                   		movw	ax, r8
 1495 0b2f BD F4                   		movw	r12, ax
 1496 0b31 FA F4                   		movw	hl, r12
 1497 0b33 8B                      		mov	a, [hl]
 1498 0b34 9D F2                   		mov	r10, a
 1499 0b36 5A F2 FB                		and	r10, #-5
 1500 0b39 AD F0                   		movw	ax, r8
 1501 0b3b BD F6                   		movw	r14, ax
 1502 0b3d DA F6                   		movw	bc, r14
 1503 0b3f 8D F2                   		mov	a, r10
 1504 0b41 48 00 00                		mov	[bc], a
 287:../src/StateMachine.c **** 		P4_bit.no3 = 1;
 1505                             		.loc 1 287 0
 1506 0b44 C9 F0 04 FF             		movw	r8, #-252
 1507 0b48 AD F0                   		movw	ax, r8
 1508 0b4a BD F4                   		movw	r12, ax
 1509 0b4c FA F4                   		movw	hl, r12
 1510 0b4e 8B                      		mov	a, [hl]
 1511 0b4f 9D F2                   		mov	r10, a
 1512 0b51 6A F2 08                		or	r10, #8
 1513 0b54 AD F0                   		movw	ax, r8
 1514 0b56 BD F6                   		movw	r14, ax
 1515 0b58 DA F6                   		movw	bc, r14
 1516 0b5a 8D F2                   		mov	a, r10
 1517 0b5c 48 00 00                		mov	[bc], a
 288:../src/StateMachine.c **** 		delayNoInt(1000);
 1518                             		.loc 1 288 0
 1519 0b5f 30 E8 03                		movw	ax, #1000
 1520 0b62 B8 00                   		movw	[sp], ax
 1521 0b64 FC 00 00 00             		call	!!%code(_delayNoInt)
 289:../src/StateMachine.c **** 		delayNoInt(1000);
 1522                             		.loc 1 289 0
 1523 0b68 30 E8 03                		movw	ax, #1000
 1524 0b6b B8 00                   		movw	[sp], ax
 1525 0b6d FC 00 00 00             		call	!!%code(_delayNoInt)
 290:../src/StateMachine.c **** 		delayNoInt(1000);
 1526                             		.loc 1 290 0
 1527 0b71 30 E8 03                		movw	ax, #1000
 1528 0b74 B8 00                   		movw	[sp], ax
 1529 0b76 FC 00 00 00             		call	!!%code(_delayNoInt)
 291:../src/StateMachine.c **** 		collectADC();
 1530                             		.loc 1 291 0
 1531 0b7a FC 00 00 00             		call	!!%code(_collectADC)
 292:../src/StateMachine.c **** 		uint8_t newCurrent = current2;
 1532                             		.loc 1 292 0
 1533 0b7e 8F 00 00                		mov	a, !_current2
 1534 0b81 9D F0                   		mov	r8, a
 1535 0b83 98 1C                   		mov	[sp+28], a
 293:../src/StateMachine.c **** 
 294:../src/StateMachine.c **** 
 295:../src/StateMachine.c **** 		sprintf(display_string, "SP:Voc=%d mV, Isc=%d mA\x0d\x0a", newVolt * 40,
 1536                             		.loc 1 295 0
 1537 0b85 88 1D                   		mov	a, [sp+29]
 1538 0b87 70                      		mov	x, a 
 1539 0b88 51 00                   		mov	a, #0
 1540 0b8a BD F0                   		movw	r8, ax
 1541 0b8c 31 3D                   		shlw	ax, 3
 1542 0b8e BD F0                   		movw	r8, ax
 1543 0b90 31 2D                   		shlw	ax, 2
 1544 0b92 BD F2                   		movw	r10, ax
 1545 0b94 AD F0                   		movw	ax, r8
 1546 0b96 06 F2                   		addw	ax, r10
 1547 0b98 BD F2                   		movw	r10, ax
 1548 0b9a 88 1C                   		mov	a, [sp+28]
 1549 0b9c 70                      		mov	x, a 
 1550 0b9d 51 00                   		mov	a, #0
 1551 0b9f BD F0                   		movw	r8, ax
 1552 0ba1 01                      		addw	ax, ax
 1553 0ba2 BD F0                   		movw	r8, ax
 1554 0ba4 31 2D                   		shlw	ax, 2
 1555 0ba6 BD F4                   		movw	r12, ax
 1556 0ba8 AD F0                   		movw	ax, r8
 1557 0baa 06 F4                   		addw	ax, r12
 1558 0bac BD F0                   		movw	r8, ax
 1559 0bae 30 00 00                		movw	ax, #_display_string
 1560 0bb1 B8 00                   		movw	[sp], ax
 1561 0bb3 30 1A 00                		movw	ax, #.LC1
 1562 0bb6 B8 02                   		movw	[sp+2], ax
 1563 0bb8 AD F2                   		movw	ax, r10
 1564 0bba B8 04                   		movw	[sp+4], ax
 1565 0bbc AD F0                   		movw	ax, r8
 1566 0bbe B8 06                   		movw	[sp+6], ax
 1567 0bc0 FC 00 00 00             		call	!!%code(_sprintf)
 296:../src/StateMachine.c **** 				newCurrent * 10);
 297:../src/StateMachine.c **** 		displayLCD(1);
 1568                             		.loc 1 297 0
 1569 0bc4 E6                      		onew	ax
 1570 0bc5 B8 00                   		movw	[sp], ax
 1571 0bc7 FC 00 00 00             		call	!!%code(_displayLCD)
 298:../src/StateMachine.c **** 		break;
 1572                             		.loc 1 298 0
 1573 0bcb EC 8B 14 00             		br	!!.L1
 1574                             	.L95:
 299:../src/StateMachine.c **** 	case 1:
 300:../src/StateMachine.c **** 		strcpy(display_string, "Set date/time\x0d\x0a");
 1575                             		.loc 1 300 0
 1576 0bcf 51 53                   		mov	a, #83
 1577 0bd1 9F 00 00                		mov	!_display_string, a
 1578 0bd4 51 65                   		mov	a, #101
 1579 0bd6 9F 00 00                		mov	!_display_string+1, a
 1580 0bd9 51 74                   		mov	a, #116
 1581 0bdb 9F 00 00                		mov	!_display_string+2, a
 1582 0bde 51 20                   		mov	a, #32
 1583 0be0 9F 00 00                		mov	!_display_string+3, a
 1584 0be3 51 64                   		mov	a, #100
 1585 0be5 9F 00 00                		mov	!_display_string+4, a
 1586 0be8 51 61                   		mov	a, #97
 1587 0bea 9F 00 00                		mov	!_display_string+5, a
 1588 0bed 51 74                   		mov	a, #116
 1589 0bef 9F 00 00                		mov	!_display_string+6, a
 1590 0bf2 51 65                   		mov	a, #101
 1591 0bf4 9F 00 00                		mov	!_display_string+7, a
 1592 0bf7 51 2F                   		mov	a, #47
 1593 0bf9 9F 00 00                		mov	!_display_string+8, a
 1594 0bfc 51 74                   		mov	a, #116
 1595 0bfe 9F 00 00                		mov	!_display_string+9, a
 1596 0c01 51 69                   		mov	a, #105
 1597 0c03 9F 00 00                		mov	!_display_string+10, a
 1598 0c06 51 6D                   		mov	a, #109
 1599 0c08 9F 00 00                		mov	!_display_string+11, a
 1600 0c0b 51 65                   		mov	a, #101
 1601 0c0d 9F 00 00                		mov	!_display_string+12, a
 1602 0c10 51 0D                   		mov	a, #13
 1603 0c12 9F 00 00                		mov	!_display_string+13, a
 1604 0c15 51 0A                   		mov	a, #10
 1605 0c17 9F 00 00                		mov	!_display_string+14, a
 1606 0c1a F5 00 00                		clrb	!_display_string+15
 301:../src/StateMachine.c **** 		displayLCD(1);
 1607                             		.loc 1 301 0
 1608 0c1d E6                      		onew	ax
 1609 0c1e B8 00                   		movw	[sp], ax
 1610 0c20 FC 00 00 00             		call	!!%code(_displayLCD)
 302:../src/StateMachine.c **** 		break;
 1611                             		.loc 1 302 0
 1612 0c24 EC 8B 14 00             		br	!!.L1
 1613                             	.L98:
 303:../src/StateMachine.c **** 	case 2:
 304:../src/StateMachine.c **** 		strcpy(display_string, "Set Year\x0d\x0a");
 1614                             		.loc 1 304 0
 1615 0c28 51 53                   		mov	a, #83
 1616 0c2a 9F 00 00                		mov	!_display_string, a
 1617 0c2d 51 65                   		mov	a, #101
 1618 0c2f 9F 00 00                		mov	!_display_string+1, a
 1619 0c32 51 74                   		mov	a, #116
 1620 0c34 9F 00 00                		mov	!_display_string+2, a
 1621 0c37 51 20                   		mov	a, #32
 1622 0c39 9F 00 00                		mov	!_display_string+3, a
 1623 0c3c 51 59                   		mov	a, #89
 1624 0c3e 9F 00 00                		mov	!_display_string+4, a
 1625 0c41 51 65                   		mov	a, #101
 1626 0c43 9F 00 00                		mov	!_display_string+5, a
 1627 0c46 51 61                   		mov	a, #97
 1628 0c48 9F 00 00                		mov	!_display_string+6, a
 1629 0c4b 51 72                   		mov	a, #114
 1630 0c4d 9F 00 00                		mov	!_display_string+7, a
 1631 0c50 51 0D                   		mov	a, #13
 1632 0c52 9F 00 00                		mov	!_display_string+8, a
 1633 0c55 51 0A                   		mov	a, #10
 1634 0c57 9F 00 00                		mov	!_display_string+9, a
 1635 0c5a F5 00 00                		clrb	!_display_string+10
 305:../src/StateMachine.c **** 		displayLCD(1);
 1636                             		.loc 1 305 0
 1637 0c5d E6                      		onew	ax
 1638 0c5e B8 00                   		movw	[sp], ax
 1639 0c60 FC 00 00 00             		call	!!%code(_displayLCD)
 306:../src/StateMachine.c **** 		break;
 1640                             		.loc 1 306 0
 1641 0c64 EC 8B 14 00             		br	!!.L1
 1642                             	.L99:
 307:../src/StateMachine.c **** 	case 3:
 308:../src/StateMachine.c **** 		strcpy(display_string, "Set Month\x0d\x0a");
 1643                             		.loc 1 308 0
 1644 0c68 51 53                   		mov	a, #83
 1645 0c6a 9F 00 00                		mov	!_display_string, a
 1646 0c6d 51 65                   		mov	a, #101
 1647 0c6f 9F 00 00                		mov	!_display_string+1, a
 1648 0c72 51 74                   		mov	a, #116
 1649 0c74 9F 00 00                		mov	!_display_string+2, a
 1650 0c77 51 20                   		mov	a, #32
 1651 0c79 9F 00 00                		mov	!_display_string+3, a
 1652 0c7c 51 4D                   		mov	a, #77
 1653 0c7e 9F 00 00                		mov	!_display_string+4, a
 1654 0c81 51 6F                   		mov	a, #111
 1655 0c83 9F 00 00                		mov	!_display_string+5, a
 1656 0c86 51 6E                   		mov	a, #110
 1657 0c88 9F 00 00                		mov	!_display_string+6, a
 1658 0c8b 51 74                   		mov	a, #116
 1659 0c8d 9F 00 00                		mov	!_display_string+7, a
 1660 0c90 51 68                   		mov	a, #104
 1661 0c92 9F 00 00                		mov	!_display_string+8, a
 1662 0c95 51 0D                   		mov	a, #13
 1663 0c97 9F 00 00                		mov	!_display_string+9, a
 1664 0c9a 51 0A                   		mov	a, #10
 1665 0c9c 9F 00 00                		mov	!_display_string+10, a
 1666 0c9f F5 00 00                		clrb	!_display_string+11
 309:../src/StateMachine.c **** 		displayLCD(1);
 1667                             		.loc 1 309 0
 1668 0ca2 E6                      		onew	ax
 1669 0ca3 B8 00                   		movw	[sp], ax
 1670 0ca5 FC 00 00 00             		call	!!%code(_displayLCD)
 310:../src/StateMachine.c **** 		break;
 1671                             		.loc 1 310 0
 1672 0ca9 EC 8B 14 00             		br	!!.L1
 1673                             	.L93:
 311:../src/StateMachine.c **** 	case 4:
 312:../src/StateMachine.c **** 		strcpy(display_string, "Set Day\x0d\x0a");
 1674                             		.loc 1 312 0
 1675 0cad 51 53                   		mov	a, #83
 1676 0caf 9F 00 00                		mov	!_display_string, a
 1677 0cb2 51 65                   		mov	a, #101
 1678 0cb4 9F 00 00                		mov	!_display_string+1, a
 1679 0cb7 51 74                   		mov	a, #116
 1680 0cb9 9F 00 00                		mov	!_display_string+2, a
 1681 0cbc 51 20                   		mov	a, #32
 1682 0cbe 9F 00 00                		mov	!_display_string+3, a
 1683 0cc1 51 44                   		mov	a, #68
 1684 0cc3 9F 00 00                		mov	!_display_string+4, a
 1685 0cc6 51 61                   		mov	a, #97
 1686 0cc8 9F 00 00                		mov	!_display_string+5, a
 1687 0ccb 51 79                   		mov	a, #121
 1688 0ccd 9F 00 00                		mov	!_display_string+6, a
 1689 0cd0 51 0D                   		mov	a, #13
 1690 0cd2 9F 00 00                		mov	!_display_string+7, a
 1691 0cd5 51 0A                   		mov	a, #10
 1692 0cd7 9F 00 00                		mov	!_display_string+8, a
 1693 0cda F5 00 00                		clrb	!_display_string+9
 313:../src/StateMachine.c **** 		displayLCD(1);
 1694                             		.loc 1 313 0
 1695 0cdd E6                      		onew	ax
 1696 0cde B8 00                   		movw	[sp], ax
 1697 0ce0 FC 00 00 00             		call	!!%code(_displayLCD)
 314:../src/StateMachine.c **** 		break;
 1698                             		.loc 1 314 0
 1699 0ce4 EC 8B 14 00             		br	!!.L1
 1700                             	.L107:
 315:../src/StateMachine.c **** 	case 10:
 316:../src/StateMachine.c **** 		strcpy(display_string, "Set Hour\x0d\x0a");
 1701                             		.loc 1 316 0
 1702 0ce8 51 53                   		mov	a, #83
 1703 0cea 9F 00 00                		mov	!_display_string, a
 1704 0ced 51 65                   		mov	a, #101
 1705 0cef 9F 00 00                		mov	!_display_string+1, a
 1706 0cf2 51 74                   		mov	a, #116
 1707 0cf4 9F 00 00                		mov	!_display_string+2, a
 1708 0cf7 51 20                   		mov	a, #32
 1709 0cf9 9F 00 00                		mov	!_display_string+3, a
 1710 0cfc 51 48                   		mov	a, #72
 1711 0cfe 9F 00 00                		mov	!_display_string+4, a
 1712 0d01 51 6F                   		mov	a, #111
 1713 0d03 9F 00 00                		mov	!_display_string+5, a
 1714 0d06 51 75                   		mov	a, #117
 1715 0d08 9F 00 00                		mov	!_display_string+6, a
 1716 0d0b 51 72                   		mov	a, #114
 1717 0d0d 9F 00 00                		mov	!_display_string+7, a
 1718 0d10 51 0D                   		mov	a, #13
 1719 0d12 9F 00 00                		mov	!_display_string+8, a
 1720 0d15 51 0A                   		mov	a, #10
 1721 0d17 9F 00 00                		mov	!_display_string+9, a
 1722 0d1a F5 00 00                		clrb	!_display_string+10
 317:../src/StateMachine.c **** 		displayLCD(1);
 1723                             		.loc 1 317 0
 1724 0d1d E6                      		onew	ax
 1725 0d1e B8 00                   		movw	[sp], ax
 1726 0d20 FC 00 00 00             		call	!!%code(_displayLCD)
 318:../src/StateMachine.c **** 		break;
 1727                             		.loc 1 318 0
 1728 0d24 EC 8B 14 00             		br	!!.L1
 1729                             	.L106:
 319:../src/StateMachine.c **** 	case 11:
 320:../src/StateMachine.c **** 		strcpy(display_string, "Set Minute\x0d\x0a");
 1730                             		.loc 1 320 0
 1731 0d28 51 53                   		mov	a, #83
 1732 0d2a 9F 00 00                		mov	!_display_string, a
 1733 0d2d 51 65                   		mov	a, #101
 1734 0d2f 9F 00 00                		mov	!_display_string+1, a
 1735 0d32 51 74                   		mov	a, #116
 1736 0d34 9F 00 00                		mov	!_display_string+2, a
 1737 0d37 51 20                   		mov	a, #32
 1738 0d39 9F 00 00                		mov	!_display_string+3, a
 1739 0d3c 51 4D                   		mov	a, #77
 1740 0d3e 9F 00 00                		mov	!_display_string+4, a
 1741 0d41 51 69                   		mov	a, #105
 1742 0d43 9F 00 00                		mov	!_display_string+5, a
 1743 0d46 51 6E                   		mov	a, #110
 1744 0d48 9F 00 00                		mov	!_display_string+6, a
 1745 0d4b 51 75                   		mov	a, #117
 1746 0d4d 9F 00 00                		mov	!_display_string+7, a
 1747 0d50 51 74                   		mov	a, #116
 1748 0d52 9F 00 00                		mov	!_display_string+8, a
 1749 0d55 51 65                   		mov	a, #101
 1750 0d57 9F 00 00                		mov	!_display_string+9, a
 1751 0d5a 51 0D                   		mov	a, #13
 1752 0d5c 9F 00 00                		mov	!_display_string+10, a
 1753 0d5f 51 0A                   		mov	a, #10
 1754 0d61 9F 00 00                		mov	!_display_string+11, a
 1755 0d64 F5 00 00                		clrb	!_display_string+12
 321:../src/StateMachine.c **** 		displayLCD(1);
 1756                             		.loc 1 321 0
 1757 0d67 E6                      		onew	ax
 1758 0d68 B8 00                   		movw	[sp], ax
 1759 0d6a FC 00 00 00             		call	!!%code(_displayLCD)
 322:../src/StateMachine.c **** 		break;
 1760                             		.loc 1 322 0
 1761 0d6e EC 8B 14 00             		br	!!.L1
 1762                             	.L108:
 323:../src/StateMachine.c **** 	case 12:
 324:../src/StateMachine.c **** 		strcpy(display_string, "Set Second\x0d\x0a");
 1763                             		.loc 1 324 0
 1764 0d72 51 53                   		mov	a, #83
 1765 0d74 9F 00 00                		mov	!_display_string, a
 1766 0d77 51 65                   		mov	a, #101
 1767 0d79 9F 00 00                		mov	!_display_string+1, a
 1768 0d7c 51 74                   		mov	a, #116
 1769 0d7e 9F 00 00                		mov	!_display_string+2, a
 1770 0d81 51 20                   		mov	a, #32
 1771 0d83 9F 00 00                		mov	!_display_string+3, a
 1772 0d86 51 53                   		mov	a, #83
 1773 0d88 9F 00 00                		mov	!_display_string+4, a
 1774 0d8b 51 65                   		mov	a, #101
 1775 0d8d 9F 00 00                		mov	!_display_string+5, a
 1776 0d90 51 63                   		mov	a, #99
 1777 0d92 9F 00 00                		mov	!_display_string+6, a
 1778 0d95 51 6F                   		mov	a, #111
 1779 0d97 9F 00 00                		mov	!_display_string+7, a
 1780 0d9a 51 6E                   		mov	a, #110
 1781 0d9c 9F 00 00                		mov	!_display_string+8, a
 1782 0d9f 51 64                   		mov	a, #100
 1783 0da1 9F 00 00                		mov	!_display_string+9, a
 1784 0da4 51 0D                   		mov	a, #13
 1785 0da6 9F 00 00                		mov	!_display_string+10, a
 1786 0da9 51 0A                   		mov	a, #10
 1787 0dab 9F 00 00                		mov	!_display_string+11, a
 1788 0dae F5 00 00                		clrb	!_display_string+12
 325:../src/StateMachine.c **** 		displayLCD(1);
 1789                             		.loc 1 325 0
 1790 0db1 E6                      		onew	ax
 1791 0db2 B8 00                   		movw	[sp], ax
 1792 0db4 FC 00 00 00             		call	!!%code(_displayLCD)
 326:../src/StateMachine.c **** 		break;
 1793                             		.loc 1 326 0
 1794 0db8 EC 8B 14 00             		br	!!.L1
 1795                             	.L109:
 327:../src/StateMachine.c **** 	case 13:
 328:../src/StateMachine.c **** 		if (instr == 4) {
 1796                             		.loc 1 328 0
 1797 0dbc A8 26                   		movw	ax, [sp+38]
 1798 0dbe 44 04 00                		cmpw	ax, #4
 1799 0dc1 61 E8                   		 skz
 1800 0dc3 EC E5 0D 00             		 br	!!.L114
 329:../src/StateMachine.c **** 			newDate[0]++;
 1801                             		.loc 1 329 0
 1802 0dc7 8F 02 00                		mov	a, !_newDate
 1803 0dca 9D F0                   		mov	r8, a
 1804 0dcc A4 F0                   		inc	r8
 1805 0dce 8D F0                   		mov	a, r8
 1806 0dd0 9F 02 00                		mov	!_newDate, a
 330:../src/StateMachine.c **** 			if (newDate[0] > 99) {
 1807                             		.loc 1 330 0
 1808 0dd3 9D F0                   		mov	r8, a
 1809 0dd5 4A F0 63                		cmp	r8, #99
 1810 0dd8 61 E3                   		 skh
 1811 0dda EC 12 0E 00             		 br	!!.L116
 331:../src/StateMachine.c **** 				newDate[0] = 0;
 1812                             		.loc 1 331 0
 1813 0dde F5 02 00                		clrb	!_newDate
 1814 0de1 EC 12 0E 00             		br	!!.L116
 1815                             	.L114:
 332:../src/StateMachine.c **** 			}
 333:../src/StateMachine.c **** 		} else if (instr == 3) {
 1816                             		.loc 1 333 0
 1817 0de5 A8 26                   		movw	ax, [sp+38]
 1818 0de7 44 03 00                		cmpw	ax, #3
 1819 0dea 61 E8                   		 skz
 1820 0dec EC 12 0E 00             		 br	!!.L116
 334:../src/StateMachine.c **** 			if (newDate[0] == 0) {
 1821                             		.loc 1 334 0
 1822 0df0 8F 02 00                		mov	a, !_newDate
 1823 0df3 9D F0                   		mov	r8, a
 1824 0df5 D4 F0                   		cmp0	r8
 1825 0df7 61 E8                   		 skz
 1826 0df9 EC 06 0E 00             		 br	!!.L117
 335:../src/StateMachine.c **** 				newDate[0] = 99;
 1827                             		.loc 1 335 0
 1828 0dfd 51 63                   		mov	a, #99
 1829 0dff 9F 02 00                		mov	!_newDate, a
 1830 0e02 EC 12 0E 00             		br	!!.L116
 1831                             	.L117:
 336:../src/StateMachine.c **** 			} else {
 337:../src/StateMachine.c **** 				newDate[0]--;
 1832                             		.loc 1 337 0
 1833 0e06 8F 02 00                		mov	a, !_newDate
 1834 0e09 9D F0                   		mov	r8, a
 1835 0e0b B4 F0                   		dec	r8
 1836 0e0d 8D F0                   		mov	a, r8
 1837 0e0f 9F 02 00                		mov	!_newDate, a
 1838                             	.L116:
 338:../src/StateMachine.c **** 			}
 339:../src/StateMachine.c **** 		}
 340:../src/StateMachine.c **** 		sprintf(display_string, "Year: 20%02d\x0d\x0a", newDate[0]);
 1839                             		.loc 1 340 0
 1840 0e12 8F 02 00                		mov	a, !_newDate
 1841 0e15 9D F0                   		mov	r8, a
 1842 0e17 CD F1 00                		mov	r9, #0
 1843 0e1a 30 00 00                		movw	ax, #_display_string
 1844 0e1d B8 00                   		movw	[sp], ax
 1845 0e1f 30 34 00                		movw	ax, #.LC2
 1846 0e22 B8 02                   		movw	[sp+2], ax
 1847 0e24 AD F0                   		movw	ax, r8
 1848 0e26 B8 04                   		movw	[sp+4], ax
 1849 0e28 FC 00 00 00             		call	!!%code(_sprintf)
 341:../src/StateMachine.c **** 		displayLCD(1);
 1850                             		.loc 1 341 0
 1851 0e2c E6                      		onew	ax
 1852 0e2d B8 00                   		movw	[sp], ax
 1853 0e2f FC 00 00 00             		call	!!%code(_displayLCD)
 342:../src/StateMachine.c **** 		break;
 1854                             		.loc 1 342 0
 1855 0e33 EC 8B 14 00             		br	!!.L1
 1856                             	.L104:
 343:../src/StateMachine.c **** 
 344:../src/StateMachine.c **** 	case 14:
 345:../src/StateMachine.c **** 		if (instr == 4) {
 1857                             		.loc 1 345 0
 1858 0e37 A8 26                   		movw	ax, [sp+38]
 1859 0e39 44 04 00                		cmpw	ax, #4
 1860 0e3c 61 E8                   		 skz
 1861 0e3e EC 60 0E 00             		 br	!!.L118
 346:../src/StateMachine.c **** 			newDate[1]++;
 1862                             		.loc 1 346 0
 1863 0e42 8F 03 00                		mov	a, !_newDate+1
 1864 0e45 9D F0                   		mov	r8, a
 1865 0e47 A4 F0                   		inc	r8
 1866 0e49 8D F0                   		mov	a, r8
 1867 0e4b 9F 03 00                		mov	!_newDate+1, a
 347:../src/StateMachine.c **** 			if (newDate[1] > 12) {
 1868                             		.loc 1 347 0
 1869 0e4e 9D F0                   		mov	r8, a
 1870 0e50 4A F0 0C                		cmp	r8, #12
 1871 0e53 61 E3                   		 skh
 1872 0e55 EC 8D 0E 00             		 br	!!.L120
 348:../src/StateMachine.c **** 				newDate[1] = 0;
 1873                             		.loc 1 348 0
 1874 0e59 F5 03 00                		clrb	!_newDate+1
 1875 0e5c EC 8D 0E 00             		br	!!.L120
 1876                             	.L118:
 349:../src/StateMachine.c **** 			}
 350:../src/StateMachine.c **** 		} else if (instr == 3) {
 1877                             		.loc 1 350 0
 1878 0e60 A8 26                   		movw	ax, [sp+38]
 1879 0e62 44 03 00                		cmpw	ax, #3
 1880 0e65 61 E8                   		 skz
 1881 0e67 EC 8D 0E 00             		 br	!!.L120
 351:../src/StateMachine.c **** 			if (newDate[1] == 0) {
 1882                             		.loc 1 351 0
 1883 0e6b 8F 03 00                		mov	a, !_newDate+1
 1884 0e6e 9D F0                   		mov	r8, a
 1885 0e70 D4 F0                   		cmp0	r8
 1886 0e72 61 E8                   		 skz
 1887 0e74 EC 81 0E 00             		 br	!!.L121
 352:../src/StateMachine.c **** 				newDate[1] = 12;
 1888                             		.loc 1 352 0
 1889 0e78 51 0C                   		mov	a, #12
 1890 0e7a 9F 03 00                		mov	!_newDate+1, a
 1891 0e7d EC 8D 0E 00             		br	!!.L120
 1892                             	.L121:
 353:../src/StateMachine.c **** 			} else {
 354:../src/StateMachine.c **** 				newDate[1]--;
 1893                             		.loc 1 354 0
 1894 0e81 8F 03 00                		mov	a, !_newDate+1
 1895 0e84 9D F0                   		mov	r8, a
 1896 0e86 B4 F0                   		dec	r8
 1897 0e88 8D F0                   		mov	a, r8
 1898 0e8a 9F 03 00                		mov	!_newDate+1, a
 1899                             	.L120:
 355:../src/StateMachine.c **** 			}
 356:../src/StateMachine.c **** 		}
 357:../src/StateMachine.c **** 		sprintf(display_string, "Month: %d\x0d\x0a", newDate[1]);
 1900                             		.loc 1 357 0
 1901 0e8d 8F 03 00                		mov	a, !_newDate+1
 1902 0e90 9D F0                   		mov	r8, a
 1903 0e92 CD F1 00                		mov	r9, #0
 1904 0e95 30 00 00                		movw	ax, #_display_string
 1905 0e98 B8 00                   		movw	[sp], ax
 1906 0e9a 30 43 00                		movw	ax, #.LC3
 1907 0e9d B8 02                   		movw	[sp+2], ax
 1908 0e9f AD F0                   		movw	ax, r8
 1909 0ea1 B8 04                   		movw	[sp+4], ax
 1910 0ea3 FC 00 00 00             		call	!!%code(_sprintf)
 358:../src/StateMachine.c **** 		displayLCD(1);
 1911                             		.loc 1 358 0
 1912 0ea7 E6                      		onew	ax
 1913 0ea8 B8 00                   		movw	[sp], ax
 1914 0eaa FC 00 00 00             		call	!!%code(_displayLCD)
 359:../src/StateMachine.c **** 		break;
 1915                             		.loc 1 359 0
 1916 0eae EC 8B 14 00             		br	!!.L1
 1917                             	.L111:
 360:../src/StateMachine.c **** 	case 15:
 361:../src/StateMachine.c **** 		if (instr == 4) {
 1918                             		.loc 1 361 0
 1919 0eb2 A8 26                   		movw	ax, [sp+38]
 1920 0eb4 44 04 00                		cmpw	ax, #4
 1921 0eb7 61 E8                   		 skz
 1922 0eb9 EC 2E 0F 00             		 br	!!.L122
 1923                             	.LBB9:
 362:../src/StateMachine.c **** 			uint8_t daysInMonth[12] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31,
 1924                             		.loc 1 362 0
 1925 0ebd 51 1F                   		mov	a, #31
 1926 0ebf 98 10                   		mov	[sp+16], a
 1927 0ec1 51 1C                   		mov	a, #28
 1928 0ec3 98 11                   		mov	[sp+17], a
 1929 0ec5 51 1F                   		mov	a, #31
 1930 0ec7 98 12                   		mov	[sp+18], a
 1931 0ec9 51 1E                   		mov	a, #30
 1932 0ecb 98 13                   		mov	[sp+19], a
 1933 0ecd 51 1F                   		mov	a, #31
 1934 0ecf 98 14                   		mov	[sp+20], a
 1935 0ed1 51 1E                   		mov	a, #30
 1936 0ed3 98 15                   		mov	[sp+21], a
 1937 0ed5 51 1F                   		mov	a, #31
 1938 0ed7 98 16                   		mov	[sp+22], a
 1939 0ed9 51 1F                   		mov	a, #31
 1940 0edb 98 17                   		mov	[sp+23], a
 1941 0edd 51 1E                   		mov	a, #30
 1942 0edf 98 18                   		mov	[sp+24], a
 1943 0ee1 51 1F                   		mov	a, #31
 1944 0ee3 98 19                   		mov	[sp+25], a
 1945 0ee5 51 1E                   		mov	a, #30
 1946 0ee7 98 1A                   		mov	[sp+26], a
 1947 0ee9 51 1F                   		mov	a, #31
 1948 0eeb 98 1B                   		mov	[sp+27], a
 363:../src/StateMachine.c **** 					30, 31 };
 364:../src/StateMachine.c **** 			newDate[2]++;
 1949                             		.loc 1 364 0
 1950 0eed 8F 04 00                		mov	a, !_newDate+2
 1951 0ef0 9D F0                   		mov	r8, a
 1952 0ef2 A4 F0                   		inc	r8
 1953 0ef4 8D F0                   		mov	a, r8
 1954 0ef6 9F 04 00                		mov	!_newDate+2, a
 365:../src/StateMachine.c **** 			if (newDate[2] > daysInMonth[newDate[1] - 1]) {
 1955                             		.loc 1 365 0
 1956 0ef9 9D F4                   		mov	r12, a
 1957 0efb 8F 03 00                		mov	a, !_newDate+1
 1958 0efe 9D F0                   		mov	r8, a
 1959 0f00 CD F1 00                		mov	r9, #0
 1960 0f03 B6 F0                   		decw	r8
 1961 0f05 AE F8                   		movw	ax, sp
 1962 0f07 BD F6                   		movw	r14, ax
 1963 0f09 04 10 00                		addw	ax, #16
 1964 0f0c BD F2                   		movw	r10, ax
 1965 0f0e 06 F0                   		addw	ax, r8
 1966 0f10 BD F0                   		movw	r8, ax
 1967 0f12 BD F2                   		movw	r10, ax
 1968 0f14 FA F2                   		movw	hl, r10
 1969 0f16 8B                      		mov	a, [hl]
 1970 0f17 9D F0                   		mov	r8, a
 1971 0f19 8D F4                   		mov	a, r12
 1972 0f1b 4B F0                   		cmp	a, r8
 1973 0f1d 61 E3                   		 skh
 1974 0f1f EC 2A 0F 00             		 br	!!.L123
 366:../src/StateMachine.c **** 				newDate[2] = 0;
 1975                             		.loc 1 366 0
 1976 0f23 F5 04 00                		clrb	!_newDate+2
 1977                             	.LBE9:
 1978 0f26 EC 5B 0F 00             		br	!!.L124
 1979                             	.L123:
 1980 0f2a EC 5B 0F 00             		br	!!.L124
 1981                             	.L122:
 367:../src/StateMachine.c **** 			}
 368:../src/StateMachine.c **** 		} else if (instr == 3) {
 1982                             		.loc 1 368 0
 1983 0f2e A8 26                   		movw	ax, [sp+38]
 1984 0f30 44 03 00                		cmpw	ax, #3
 1985 0f33 61 E8                   		 skz
 1986 0f35 EC 5B 0F 00             		 br	!!.L124
 369:../src/StateMachine.c **** 			if (newDate[2] == 0) {
 1987                             		.loc 1 369 0
 1988 0f39 8F 04 00                		mov	a, !_newDate+2
 1989 0f3c 9D F0                   		mov	r8, a
 1990 0f3e D4 F0                   		cmp0	r8
 1991 0f40 61 E8                   		 skz
 1992 0f42 EC 4F 0F 00             		 br	!!.L125
 370:../src/StateMachine.c **** 				newDate[2] = 12;
 1993                             		.loc 1 370 0
 1994 0f46 51 0C                   		mov	a, #12
 1995 0f48 9F 04 00                		mov	!_newDate+2, a
 1996 0f4b EC 5B 0F 00             		br	!!.L124
 1997                             	.L125:
 371:../src/StateMachine.c **** 			} else {
 372:../src/StateMachine.c **** 				newDate[2]--;
 1998                             		.loc 1 372 0
 1999 0f4f 8F 04 00                		mov	a, !_newDate+2
 2000 0f52 9D F0                   		mov	r8, a
 2001 0f54 B4 F0                   		dec	r8
 2002 0f56 8D F0                   		mov	a, r8
 2003 0f58 9F 04 00                		mov	!_newDate+2, a
 2004                             	.L124:
 373:../src/StateMachine.c **** 			}
 374:../src/StateMachine.c **** 		}
 375:../src/StateMachine.c **** 		sprintf(display_string, "Day: %d\x0d\x0a", newDate[2]);
 2005                             		.loc 1 375 0
 2006 0f5b 8F 04 00                		mov	a, !_newDate+2
 2007 0f5e 9D F0                   		mov	r8, a
 2008 0f60 CD F1 00                		mov	r9, #0
 2009 0f63 30 00 00                		movw	ax, #_display_string
 2010 0f66 B8 00                   		movw	[sp], ax
 2011 0f68 30 4F 00                		movw	ax, #.LC4
 2012 0f6b B8 02                   		movw	[sp+2], ax
 2013 0f6d AD F0                   		movw	ax, r8
 2014 0f6f B8 04                   		movw	[sp+4], ax
 2015 0f71 FC 00 00 00             		call	!!%code(_sprintf)
 376:../src/StateMachine.c **** 		displayLCD(1);
 2016                             		.loc 1 376 0
 2017 0f75 E6                      		onew	ax
 2018 0f76 B8 00                   		movw	[sp], ax
 2019 0f78 FC 00 00 00             		call	!!%code(_displayLCD)
 377:../src/StateMachine.c **** 		break;
 2020                             		.loc 1 377 0
 2021 0f7c EC 8B 14 00             		br	!!.L1
 2022                             	.L110:
 378:../src/StateMachine.c **** 	case 16:
 379:../src/StateMachine.c **** 		if (instr == 4) {
 2023                             		.loc 1 379 0
 2024 0f80 A8 26                   		movw	ax, [sp+38]
 2025 0f82 44 04 00                		cmpw	ax, #4
 2026 0f85 61 E8                   		 skz
 2027 0f87 EC A9 0F 00             		 br	!!.L126
 380:../src/StateMachine.c **** 			newDate[3]++;
 2028                             		.loc 1 380 0
 2029 0f8b 8F 05 00                		mov	a, !_newDate+3
 2030 0f8e 9D F0                   		mov	r8, a
 2031 0f90 A4 F0                   		inc	r8
 2032 0f92 8D F0                   		mov	a, r8
 2033 0f94 9F 05 00                		mov	!_newDate+3, a
 381:../src/StateMachine.c **** 			if (newDate[3] > 24) {
 2034                             		.loc 1 381 0
 2035 0f97 9D F0                   		mov	r8, a
 2036 0f99 4A F0 18                		cmp	r8, #24
 2037 0f9c 61 E3                   		 skh
 2038 0f9e EC D6 0F 00             		 br	!!.L128
 382:../src/StateMachine.c **** 				newDate[3] = 0;
 2039                             		.loc 1 382 0
 2040 0fa2 F5 05 00                		clrb	!_newDate+3
 2041 0fa5 EC D6 0F 00             		br	!!.L128
 2042                             	.L126:
 383:../src/StateMachine.c **** 			}
 384:../src/StateMachine.c **** 		} else if (instr == 3) {
 2043                             		.loc 1 384 0
 2044 0fa9 A8 26                   		movw	ax, [sp+38]
 2045 0fab 44 03 00                		cmpw	ax, #3
 2046 0fae 61 E8                   		 skz
 2047 0fb0 EC D6 0F 00             		 br	!!.L128
 385:../src/StateMachine.c **** 			if (newDate[3] == 0) {
 2048                             		.loc 1 385 0
 2049 0fb4 8F 05 00                		mov	a, !_newDate+3
 2050 0fb7 9D F0                   		mov	r8, a
 2051 0fb9 D4 F0                   		cmp0	r8
 2052 0fbb 61 E8                   		 skz
 2053 0fbd EC CA 0F 00             		 br	!!.L129
 386:../src/StateMachine.c **** 				newDate[3] = 24;
 2054                             		.loc 1 386 0
 2055 0fc1 51 18                   		mov	a, #24
 2056 0fc3 9F 05 00                		mov	!_newDate+3, a
 2057 0fc6 EC D6 0F 00             		br	!!.L128
 2058                             	.L129:
 387:../src/StateMachine.c **** 			} else {
 388:../src/StateMachine.c **** 				newDate[3]--;
 2059                             		.loc 1 388 0
 2060 0fca 8F 05 00                		mov	a, !_newDate+3
 2061 0fcd 9D F0                   		mov	r8, a
 2062 0fcf B4 F0                   		dec	r8
 2063 0fd1 8D F0                   		mov	a, r8
 2064 0fd3 9F 05 00                		mov	!_newDate+3, a
 2065                             	.L128:
 389:../src/StateMachine.c **** 			}
 390:../src/StateMachine.c **** 		}
 391:../src/StateMachine.c **** 		sprintf(display_string, "Hour: %d\x0d\x0a", newDate[3]);
 2066                             		.loc 1 391 0
 2067 0fd6 8F 05 00                		mov	a, !_newDate+3
 2068 0fd9 9D F0                   		mov	r8, a
 2069 0fdb CD F1 00                		mov	r9, #0
 2070 0fde 30 00 00                		movw	ax, #_display_string
 2071 0fe1 B8 00                   		movw	[sp], ax
 2072 0fe3 30 59 00                		movw	ax, #.LC5
 2073 0fe6 B8 02                   		movw	[sp+2], ax
 2074 0fe8 AD F0                   		movw	ax, r8
 2075 0fea B8 04                   		movw	[sp+4], ax
 2076 0fec FC 00 00 00             		call	!!%code(_sprintf)
 392:../src/StateMachine.c **** 		displayLCD(1);
 2077                             		.loc 1 392 0
 2078 0ff0 E6                      		onew	ax
 2079 0ff1 B8 00                   		movw	[sp], ax
 2080 0ff3 FC 00 00 00             		call	!!%code(_displayLCD)
 393:../src/StateMachine.c **** 		break;
 2081                             		.loc 1 393 0
 2082 0ff7 EC 8B 14 00             		br	!!.L1
 2083                             	.L112:
 394:../src/StateMachine.c **** 	case 17:
 395:../src/StateMachine.c **** 		if (instr == 4) {
 2084                             		.loc 1 395 0
 2085 0ffb A8 26                   		movw	ax, [sp+38]
 2086 0ffd 44 04 00                		cmpw	ax, #4
 2087 1000 61 E8                   		 skz
 2088 1002 EC 24 10 00             		 br	!!.L130
 396:../src/StateMachine.c **** 			newDate[4]++;
 2089                             		.loc 1 396 0
 2090 1006 8F 06 00                		mov	a, !_newDate+4
 2091 1009 9D F0                   		mov	r8, a
 2092 100b A4 F0                   		inc	r8
 2093 100d 8D F0                   		mov	a, r8
 2094 100f 9F 06 00                		mov	!_newDate+4, a
 397:../src/StateMachine.c **** 			if (newDate[4] > 59) {
 2095                             		.loc 1 397 0
 2096 1012 9D F0                   		mov	r8, a
 2097 1014 4A F0 3B                		cmp	r8, #59
 2098 1017 61 E3                   		 skh
 2099 1019 EC 51 10 00             		 br	!!.L132
 398:../src/StateMachine.c **** 				newDate[4] = 0;
 2100                             		.loc 1 398 0
 2101 101d F5 06 00                		clrb	!_newDate+4
 2102 1020 EC 51 10 00             		br	!!.L132
 2103                             	.L130:
 399:../src/StateMachine.c **** 			}
 400:../src/StateMachine.c **** 		} else if (instr == 3) {
 2104                             		.loc 1 400 0
 2105 1024 A8 26                   		movw	ax, [sp+38]
 2106 1026 44 03 00                		cmpw	ax, #3
 2107 1029 61 E8                   		 skz
 2108 102b EC 51 10 00             		 br	!!.L132
 401:../src/StateMachine.c **** 			if (newDate[4] == 0) {
 2109                             		.loc 1 401 0
 2110 102f 8F 06 00                		mov	a, !_newDate+4
 2111 1032 9D F0                   		mov	r8, a
 2112 1034 D4 F0                   		cmp0	r8
 2113 1036 61 E8                   		 skz
 2114 1038 EC 45 10 00             		 br	!!.L133
 402:../src/StateMachine.c **** 				newDate[4] = 59;
 2115                             		.loc 1 402 0
 2116 103c 51 3B                   		mov	a, #59
 2117 103e 9F 06 00                		mov	!_newDate+4, a
 2118 1041 EC 51 10 00             		br	!!.L132
 2119                             	.L133:
 403:../src/StateMachine.c **** 			} else {
 404:../src/StateMachine.c **** 				newDate[4]--;
 2120                             		.loc 1 404 0
 2121 1045 8F 06 00                		mov	a, !_newDate+4
 2122 1048 9D F0                   		mov	r8, a
 2123 104a B4 F0                   		dec	r8
 2124 104c 8D F0                   		mov	a, r8
 2125 104e 9F 06 00                		mov	!_newDate+4, a
 2126                             	.L132:
 405:../src/StateMachine.c **** 			}
 406:../src/StateMachine.c **** 		}
 407:../src/StateMachine.c **** 		sprintf(display_string, "Minute: %d\x0d\x0a", newDate[4]);
 2127                             		.loc 1 407 0
 2128 1051 8F 06 00                		mov	a, !_newDate+4
 2129 1054 9D F0                   		mov	r8, a
 2130 1056 CD F1 00                		mov	r9, #0
 2131 1059 30 00 00                		movw	ax, #_display_string
 2132 105c B8 00                   		movw	[sp], ax
 2133 105e 30 64 00                		movw	ax, #.LC6
 2134 1061 B8 02                   		movw	[sp+2], ax
 2135 1063 AD F0                   		movw	ax, r8
 2136 1065 B8 04                   		movw	[sp+4], ax
 2137 1067 FC 00 00 00             		call	!!%code(_sprintf)
 408:../src/StateMachine.c **** 		displayLCD(1);
 2138                             		.loc 1 408 0
 2139 106b E6                      		onew	ax
 2140 106c B8 00                   		movw	[sp], ax
 2141 106e FC 00 00 00             		call	!!%code(_displayLCD)
 409:../src/StateMachine.c **** 		break;
 2142                             		.loc 1 409 0
 2143 1072 EC 8B 14 00             		br	!!.L1
 2144                             	.L113:
 410:../src/StateMachine.c **** 	case 18:
 411:../src/StateMachine.c **** 		if (instr == 4) {
 2145                             		.loc 1 411 0
 2146 1076 A8 26                   		movw	ax, [sp+38]
 2147 1078 44 04 00                		cmpw	ax, #4
 2148 107b 61 E8                   		 skz
 2149 107d EC 9F 10 00             		 br	!!.L134
 412:../src/StateMachine.c **** 			newDate[5]++;
 2150                             		.loc 1 412 0
 2151 1081 8F 07 00                		mov	a, !_newDate+5
 2152 1084 9D F0                   		mov	r8, a
 2153 1086 A4 F0                   		inc	r8
 2154 1088 8D F0                   		mov	a, r8
 2155 108a 9F 07 00                		mov	!_newDate+5, a
 413:../src/StateMachine.c **** 			if (newDate[5] > 59) {
 2156                             		.loc 1 413 0
 2157 108d 9D F0                   		mov	r8, a
 2158 108f 4A F0 3B                		cmp	r8, #59
 2159 1092 61 E3                   		 skh
 2160 1094 EC CC 10 00             		 br	!!.L136
 414:../src/StateMachine.c **** 				newDate[5] = 0;
 2161                             		.loc 1 414 0
 2162 1098 F5 07 00                		clrb	!_newDate+5
 2163 109b EC CC 10 00             		br	!!.L136
 2164                             	.L134:
 415:../src/StateMachine.c **** 			}
 416:../src/StateMachine.c **** 		} else if (instr == 3) {
 2165                             		.loc 1 416 0
 2166 109f A8 26                   		movw	ax, [sp+38]
 2167 10a1 44 03 00                		cmpw	ax, #3
 2168 10a4 61 E8                   		 skz
 2169 10a6 EC CC 10 00             		 br	!!.L136
 417:../src/StateMachine.c **** 			if (newDate[5] == 0) {
 2170                             		.loc 1 417 0
 2171 10aa 8F 07 00                		mov	a, !_newDate+5
 2172 10ad 9D F0                   		mov	r8, a
 2173 10af D4 F0                   		cmp0	r8
 2174 10b1 61 E8                   		 skz
 2175 10b3 EC C0 10 00             		 br	!!.L137
 418:../src/StateMachine.c **** 				newDate[5] = 59;
 2176                             		.loc 1 418 0
 2177 10b7 51 3B                   		mov	a, #59
 2178 10b9 9F 07 00                		mov	!_newDate+5, a
 2179 10bc EC CC 10 00             		br	!!.L136
 2180                             	.L137:
 419:../src/StateMachine.c **** 			} else {
 420:../src/StateMachine.c **** 				newDate[5]--;
 2181                             		.loc 1 420 0
 2182 10c0 8F 07 00                		mov	a, !_newDate+5
 2183 10c3 9D F0                   		mov	r8, a
 2184 10c5 B4 F0                   		dec	r8
 2185 10c7 8D F0                   		mov	a, r8
 2186 10c9 9F 07 00                		mov	!_newDate+5, a
 2187                             	.L136:
 421:../src/StateMachine.c **** 			}
 422:../src/StateMachine.c **** 		}
 423:../src/StateMachine.c **** 		sprintf(display_string, "Second: %d\x0d\x0a", newDate[5]);
 2188                             		.loc 1 423 0
 2189 10cc 8F 07 00                		mov	a, !_newDate+5
 2190 10cf 9D F0                   		mov	r8, a
 2191 10d1 CD F1 00                		mov	r9, #0
 2192 10d4 30 00 00                		movw	ax, #_display_string
 2193 10d7 B8 00                   		movw	[sp], ax
 2194 10d9 30 71 00                		movw	ax, #.LC7
 2195 10dc B8 02                   		movw	[sp+2], ax
 2196 10de AD F0                   		movw	ax, r8
 2197 10e0 B8 04                   		movw	[sp+4], ax
 2198 10e2 FC 00 00 00             		call	!!%code(_sprintf)
 424:../src/StateMachine.c **** 		displayLCD(1);
 2199                             		.loc 1 424 0
 2200 10e6 E6                      		onew	ax
 2201 10e7 B8 00                   		movw	[sp], ax
 2202 10e9 FC 00 00 00             		call	!!%code(_displayLCD)
 425:../src/StateMachine.c **** 		break;
 2203                             		.loc 1 425 0
 2204 10ed EC 8B 14 00             		br	!!.L1
 2205                             	.L101:
 426:../src/StateMachine.c **** 	case 5:
 427:../src/StateMachine.c **** 		strcpy(display_string, "Switch state = 0\x0d\x0a");
 2206                             		.loc 1 427 0
 2207 10f1 51 53                   		mov	a, #83
 2208 10f3 9F 00 00                		mov	!_display_string, a
 2209 10f6 51 77                   		mov	a, #119
 2210 10f8 9F 00 00                		mov	!_display_string+1, a
 2211 10fb 51 69                   		mov	a, #105
 2212 10fd 9F 00 00                		mov	!_display_string+2, a
 2213 1100 51 74                   		mov	a, #116
 2214 1102 9F 00 00                		mov	!_display_string+3, a
 2215 1105 51 63                   		mov	a, #99
 2216 1107 9F 00 00                		mov	!_display_string+4, a
 2217 110a 51 68                   		mov	a, #104
 2218 110c 9F 00 00                		mov	!_display_string+5, a
 2219 110f 51 20                   		mov	a, #32
 2220 1111 9F 00 00                		mov	!_display_string+6, a
 2221 1114 51 73                   		mov	a, #115
 2222 1116 9F 00 00                		mov	!_display_string+7, a
 2223 1119 51 74                   		mov	a, #116
 2224 111b 9F 00 00                		mov	!_display_string+8, a
 2225 111e 51 61                   		mov	a, #97
 2226 1120 9F 00 00                		mov	!_display_string+9, a
 2227 1123 51 74                   		mov	a, #116
 2228 1125 9F 00 00                		mov	!_display_string+10, a
 2229 1128 51 65                   		mov	a, #101
 2230 112a 9F 00 00                		mov	!_display_string+11, a
 2231 112d 51 20                   		mov	a, #32
 2232 112f 9F 00 00                		mov	!_display_string+12, a
 2233 1132 51 3D                   		mov	a, #61
 2234 1134 9F 00 00                		mov	!_display_string+13, a
 2235 1137 51 20                   		mov	a, #32
 2236 1139 9F 00 00                		mov	!_display_string+14, a
 2237 113c 51 30                   		mov	a, #48
 2238 113e 9F 00 00                		mov	!_display_string+15, a
 2239 1141 51 0D                   		mov	a, #13
 2240 1143 9F 00 00                		mov	!_display_string+16, a
 2241 1146 51 0A                   		mov	a, #10
 2242 1148 9F 00 00                		mov	!_display_string+17, a
 2243 114b F5 00 00                		clrb	!_display_string+18
 428:../src/StateMachine.c **** 		displayLCD(1);
 2244                             		.loc 1 428 0
 2245 114e E6                      		onew	ax
 2246 114f B8 00                   		movw	[sp], ax
 2247 1151 FC 00 00 00             		call	!!%code(_displayLCD)
 429:../src/StateMachine.c **** 		P4_bit.no1 = 0;
 2248                             		.loc 1 429 0
 2249 1155 C9 F0 04 FF             		movw	r8, #-252
 2250 1159 AD F0                   		movw	ax, r8
 2251 115b BD F4                   		movw	r12, ax
 2252 115d FA F4                   		movw	hl, r12
 2253 115f 8B                      		mov	a, [hl]
 2254 1160 9D F2                   		mov	r10, a
 2255 1162 5A F2 FD                		and	r10, #-3
 2256 1165 AD F0                   		movw	ax, r8
 2257 1167 BD F6                   		movw	r14, ax
 2258 1169 DA F6                   		movw	bc, r14
 2259 116b 8D F2                   		mov	a, r10
 2260 116d 48 00 00                		mov	[bc], a
 430:../src/StateMachine.c **** 		P4_bit.no2 = 0;
 2261                             		.loc 1 430 0
 2262 1170 C9 F0 04 FF             		movw	r8, #-252
 2263 1174 AD F0                   		movw	ax, r8
 2264 1176 BD F4                   		movw	r12, ax
 2265 1178 FA F4                   		movw	hl, r12
 2266 117a 8B                      		mov	a, [hl]
 2267 117b 9D F2                   		mov	r10, a
 2268 117d 5A F2 FB                		and	r10, #-5
 2269 1180 AD F0                   		movw	ax, r8
 2270 1182 BD F6                   		movw	r14, ax
 2271 1184 DA F6                   		movw	bc, r14
 2272 1186 8D F2                   		mov	a, r10
 2273 1188 48 00 00                		mov	[bc], a
 431:../src/StateMachine.c **** 		P4_bit.no3 = 0;
 2274                             		.loc 1 431 0
 2275 118b C9 F0 04 FF             		movw	r8, #-252
 2276 118f AD F0                   		movw	ax, r8
 2277 1191 BD F4                   		movw	r12, ax
 2278 1193 FA F4                   		movw	hl, r12
 2279 1195 8B                      		mov	a, [hl]
 2280 1196 9D F2                   		mov	r10, a
 2281 1198 5A F2 F7                		and	r10, #-9
 2282 119b AD F0                   		movw	ax, r8
 2283 119d BD F6                   		movw	r14, ax
 2284 119f DA F6                   		movw	bc, r14
 2285 11a1 8D F2                   		mov	a, r10
 2286 11a3 48 00 00                		mov	[bc], a
 432:../src/StateMachine.c **** 		break;
 2287                             		.loc 1 432 0
 2288 11a6 EC 8B 14 00             		br	!!.L1
 2289                             	.L100:
 433:../src/StateMachine.c **** 	case 6:
 434:../src/StateMachine.c **** 		strcpy(display_string, "Switch state = 1\x0d\x0a");
 2290                             		.loc 1 434 0
 2291 11aa 51 53                   		mov	a, #83
 2292 11ac 9F 00 00                		mov	!_display_string, a
 2293 11af 51 77                   		mov	a, #119
 2294 11b1 9F 00 00                		mov	!_display_string+1, a
 2295 11b4 51 69                   		mov	a, #105
 2296 11b6 9F 00 00                		mov	!_display_string+2, a
 2297 11b9 51 74                   		mov	a, #116
 2298 11bb 9F 00 00                		mov	!_display_string+3, a
 2299 11be 51 63                   		mov	a, #99
 2300 11c0 9F 00 00                		mov	!_display_string+4, a
 2301 11c3 51 68                   		mov	a, #104
 2302 11c5 9F 00 00                		mov	!_display_string+5, a
 2303 11c8 51 20                   		mov	a, #32
 2304 11ca 9F 00 00                		mov	!_display_string+6, a
 2305 11cd 51 73                   		mov	a, #115
 2306 11cf 9F 00 00                		mov	!_display_string+7, a
 2307 11d2 51 74                   		mov	a, #116
 2308 11d4 9F 00 00                		mov	!_display_string+8, a
 2309 11d7 51 61                   		mov	a, #97
 2310 11d9 9F 00 00                		mov	!_display_string+9, a
 2311 11dc 51 74                   		mov	a, #116
 2312 11de 9F 00 00                		mov	!_display_string+10, a
 2313 11e1 51 65                   		mov	a, #101
 2314 11e3 9F 00 00                		mov	!_display_string+11, a
 2315 11e6 51 20                   		mov	a, #32
 2316 11e8 9F 00 00                		mov	!_display_string+12, a
 2317 11eb 51 3D                   		mov	a, #61
 2318 11ed 9F 00 00                		mov	!_display_string+13, a
 2319 11f0 51 20                   		mov	a, #32
 2320 11f2 9F 00 00                		mov	!_display_string+14, a
 2321 11f5 51 31                   		mov	a, #49
 2322 11f7 9F 00 00                		mov	!_display_string+15, a
 2323 11fa 51 0D                   		mov	a, #13
 2324 11fc 9F 00 00                		mov	!_display_string+16, a
 2325 11ff 51 0A                   		mov	a, #10
 2326 1201 9F 00 00                		mov	!_display_string+17, a
 2327 1204 F5 00 00                		clrb	!_display_string+18
 435:../src/StateMachine.c **** 		displayLCD(1);
 2328                             		.loc 1 435 0
 2329 1207 E6                      		onew	ax
 2330 1208 B8 00                   		movw	[sp], ax
 2331 120a FC 00 00 00             		call	!!%code(_displayLCD)
 436:../src/StateMachine.c **** 		P4_bit.no1 = 0;
 2332                             		.loc 1 436 0
 2333 120e C9 F0 04 FF             		movw	r8, #-252
 2334 1212 AD F0                   		movw	ax, r8
 2335 1214 BD F4                   		movw	r12, ax
 2336 1216 FA F4                   		movw	hl, r12
 2337 1218 8B                      		mov	a, [hl]
 2338 1219 9D F2                   		mov	r10, a
 2339 121b 5A F2 FD                		and	r10, #-3
 2340 121e AD F0                   		movw	ax, r8
 2341 1220 BD F6                   		movw	r14, ax
 2342 1222 DA F6                   		movw	bc, r14
 2343 1224 8D F2                   		mov	a, r10
 2344 1226 48 00 00                		mov	[bc], a
 437:../src/StateMachine.c **** 		P4_bit.no2 = 0;
 2345                             		.loc 1 437 0
 2346 1229 C9 F0 04 FF             		movw	r8, #-252
 2347 122d AD F0                   		movw	ax, r8
 2348 122f BD F4                   		movw	r12, ax
 2349 1231 FA F4                   		movw	hl, r12
 2350 1233 8B                      		mov	a, [hl]
 2351 1234 9D F2                   		mov	r10, a
 2352 1236 5A F2 FB                		and	r10, #-5
 2353 1239 AD F0                   		movw	ax, r8
 2354 123b BD F6                   		movw	r14, ax
 2355 123d DA F6                   		movw	bc, r14
 2356 123f 8D F2                   		mov	a, r10
 2357 1241 48 00 00                		mov	[bc], a
 438:../src/StateMachine.c **** 		P4_bit.no3 = 1;
 2358                             		.loc 1 438 0
 2359 1244 C9 F0 04 FF             		movw	r8, #-252
 2360 1248 AD F0                   		movw	ax, r8
 2361 124a BD F4                   		movw	r12, ax
 2362 124c FA F4                   		movw	hl, r12
 2363 124e 8B                      		mov	a, [hl]
 2364 124f 9D F2                   		mov	r10, a
 2365 1251 6A F2 08                		or	r10, #8
 2366 1254 AD F0                   		movw	ax, r8
 2367 1256 BD F6                   		movw	r14, ax
 2368 1258 DA F6                   		movw	bc, r14
 2369 125a 8D F2                   		mov	a, r10
 2370 125c 48 00 00                		mov	[bc], a
 439:../src/StateMachine.c **** 		break;
 2371                             		.loc 1 439 0
 2372 125f EC 8B 14 00             		br	!!.L1
 2373                             	.L102:
 440:../src/StateMachine.c **** 	case 7:
 441:../src/StateMachine.c **** 		strcpy(display_string, "Switch state = 2\x0d\x0a");
 2374                             		.loc 1 441 0
 2375 1263 51 53                   		mov	a, #83
 2376 1265 9F 00 00                		mov	!_display_string, a
 2377 1268 51 77                   		mov	a, #119
 2378 126a 9F 00 00                		mov	!_display_string+1, a
 2379 126d 51 69                   		mov	a, #105
 2380 126f 9F 00 00                		mov	!_display_string+2, a
 2381 1272 51 74                   		mov	a, #116
 2382 1274 9F 00 00                		mov	!_display_string+3, a
 2383 1277 51 63                   		mov	a, #99
 2384 1279 9F 00 00                		mov	!_display_string+4, a
 2385 127c 51 68                   		mov	a, #104
 2386 127e 9F 00 00                		mov	!_display_string+5, a
 2387 1281 51 20                   		mov	a, #32
 2388 1283 9F 00 00                		mov	!_display_string+6, a
 2389 1286 51 73                   		mov	a, #115
 2390 1288 9F 00 00                		mov	!_display_string+7, a
 2391 128b 51 74                   		mov	a, #116
 2392 128d 9F 00 00                		mov	!_display_string+8, a
 2393 1290 51 61                   		mov	a, #97
 2394 1292 9F 00 00                		mov	!_display_string+9, a
 2395 1295 51 74                   		mov	a, #116
 2396 1297 9F 00 00                		mov	!_display_string+10, a
 2397 129a 51 65                   		mov	a, #101
 2398 129c 9F 00 00                		mov	!_display_string+11, a
 2399 129f 51 20                   		mov	a, #32
 2400 12a1 9F 00 00                		mov	!_display_string+12, a
 2401 12a4 51 3D                   		mov	a, #61
 2402 12a6 9F 00 00                		mov	!_display_string+13, a
 2403 12a9 51 20                   		mov	a, #32
 2404 12ab 9F 00 00                		mov	!_display_string+14, a
 2405 12ae 51 32                   		mov	a, #50
 2406 12b0 9F 00 00                		mov	!_display_string+15, a
 2407 12b3 51 0D                   		mov	a, #13
 2408 12b5 9F 00 00                		mov	!_display_string+16, a
 2409 12b8 51 0A                   		mov	a, #10
 2410 12ba 9F 00 00                		mov	!_display_string+17, a
 2411 12bd F5 00 00                		clrb	!_display_string+18
 442:../src/StateMachine.c **** 		displayLCD(1);
 2412                             		.loc 1 442 0
 2413 12c0 E6                      		onew	ax
 2414 12c1 B8 00                   		movw	[sp], ax
 2415 12c3 FC 00 00 00             		call	!!%code(_displayLCD)
 443:../src/StateMachine.c **** 		P4_bit.no1 = 1;
 2416                             		.loc 1 443 0
 2417 12c7 C9 F0 04 FF             		movw	r8, #-252
 2418 12cb AD F0                   		movw	ax, r8
 2419 12cd BD F4                   		movw	r12, ax
 2420 12cf FA F4                   		movw	hl, r12
 2421 12d1 8B                      		mov	a, [hl]
 2422 12d2 9D F2                   		mov	r10, a
 2423 12d4 6A F2 02                		or	r10, #2
 2424 12d7 AD F0                   		movw	ax, r8
 2425 12d9 BD F6                   		movw	r14, ax
 2426 12db DA F6                   		movw	bc, r14
 2427 12dd 8D F2                   		mov	a, r10
 2428 12df 48 00 00                		mov	[bc], a
 444:../src/StateMachine.c **** 		P4_bit.no2 = 0;
 2429                             		.loc 1 444 0
 2430 12e2 C9 F0 04 FF             		movw	r8, #-252
 2431 12e6 AD F0                   		movw	ax, r8
 2432 12e8 BD F4                   		movw	r12, ax
 2433 12ea FA F4                   		movw	hl, r12
 2434 12ec 8B                      		mov	a, [hl]
 2435 12ed 9D F2                   		mov	r10, a
 2436 12ef 5A F2 FB                		and	r10, #-5
 2437 12f2 AD F0                   		movw	ax, r8
 2438 12f4 BD F6                   		movw	r14, ax
 2439 12f6 DA F6                   		movw	bc, r14
 2440 12f8 8D F2                   		mov	a, r10
 2441 12fa 48 00 00                		mov	[bc], a
 445:../src/StateMachine.c **** 		P4_bit.no3 = 0;
 2442                             		.loc 1 445 0
 2443 12fd C9 F0 04 FF             		movw	r8, #-252
 2444 1301 AD F0                   		movw	ax, r8
 2445 1303 BD F4                   		movw	r12, ax
 2446 1305 FA F4                   		movw	hl, r12
 2447 1307 8B                      		mov	a, [hl]
 2448 1308 9D F2                   		mov	r10, a
 2449 130a 5A F2 F7                		and	r10, #-9
 2450 130d AD F0                   		movw	ax, r8
 2451 130f BD F6                   		movw	r14, ax
 2452 1311 DA F6                   		movw	bc, r14
 2453 1313 8D F2                   		mov	a, r10
 2454 1315 48 00 00                		mov	[bc], a
 446:../src/StateMachine.c **** 		break;
 2455                             		.loc 1 446 0
 2456 1318 EC 8B 14 00             		br	!!.L1
 2457                             	.L103:
 447:../src/StateMachine.c **** 	case 8:
 448:../src/StateMachine.c **** 		strcpy(display_string, "Switch state = 3\x0d\x0a");
 2458                             		.loc 1 448 0
 2459 131c 51 53                   		mov	a, #83
 2460 131e 9F 00 00                		mov	!_display_string, a
 2461 1321 51 77                   		mov	a, #119
 2462 1323 9F 00 00                		mov	!_display_string+1, a
 2463 1326 51 69                   		mov	a, #105
 2464 1328 9F 00 00                		mov	!_display_string+2, a
 2465 132b 51 74                   		mov	a, #116
 2466 132d 9F 00 00                		mov	!_display_string+3, a
 2467 1330 51 63                   		mov	a, #99
 2468 1332 9F 00 00                		mov	!_display_string+4, a
 2469 1335 51 68                   		mov	a, #104
 2470 1337 9F 00 00                		mov	!_display_string+5, a
 2471 133a 51 20                   		mov	a, #32
 2472 133c 9F 00 00                		mov	!_display_string+6, a
 2473 133f 51 73                   		mov	a, #115
 2474 1341 9F 00 00                		mov	!_display_string+7, a
 2475 1344 51 74                   		mov	a, #116
 2476 1346 9F 00 00                		mov	!_display_string+8, a
 2477 1349 51 61                   		mov	a, #97
 2478 134b 9F 00 00                		mov	!_display_string+9, a
 2479 134e 51 74                   		mov	a, #116
 2480 1350 9F 00 00                		mov	!_display_string+10, a
 2481 1353 51 65                   		mov	a, #101
 2482 1355 9F 00 00                		mov	!_display_string+11, a
 2483 1358 51 20                   		mov	a, #32
 2484 135a 9F 00 00                		mov	!_display_string+12, a
 2485 135d 51 3D                   		mov	a, #61
 2486 135f 9F 00 00                		mov	!_display_string+13, a
 2487 1362 51 20                   		mov	a, #32
 2488 1364 9F 00 00                		mov	!_display_string+14, a
 2489 1367 51 33                   		mov	a, #51
 2490 1369 9F 00 00                		mov	!_display_string+15, a
 2491 136c 51 0D                   		mov	a, #13
 2492 136e 9F 00 00                		mov	!_display_string+16, a
 2493 1371 51 0A                   		mov	a, #10
 2494 1373 9F 00 00                		mov	!_display_string+17, a
 2495 1376 F5 00 00                		clrb	!_display_string+18
 449:../src/StateMachine.c **** 		displayLCD(1);
 2496                             		.loc 1 449 0
 2497 1379 E6                      		onew	ax
 2498 137a B8 00                   		movw	[sp], ax
 2499 137c FC 00 00 00             		call	!!%code(_displayLCD)
 450:../src/StateMachine.c **** 		P4_bit.no1 = 0;
 2500                             		.loc 1 450 0
 2501 1380 C9 F0 04 FF             		movw	r8, #-252
 2502 1384 AD F0                   		movw	ax, r8
 2503 1386 BD F4                   		movw	r12, ax
 2504 1388 FA F4                   		movw	hl, r12
 2505 138a 8B                      		mov	a, [hl]
 2506 138b 9D F2                   		mov	r10, a
 2507 138d 5A F2 FD                		and	r10, #-3
 2508 1390 AD F0                   		movw	ax, r8
 2509 1392 BD F6                   		movw	r14, ax
 2510 1394 DA F6                   		movw	bc, r14
 2511 1396 8D F2                   		mov	a, r10
 2512 1398 48 00 00                		mov	[bc], a
 451:../src/StateMachine.c **** 		P4_bit.no2 = 1;
 2513                             		.loc 1 451 0
 2514 139b C9 F0 04 FF             		movw	r8, #-252
 2515 139f AD F0                   		movw	ax, r8
 2516 13a1 BD F4                   		movw	r12, ax
 2517 13a3 FA F4                   		movw	hl, r12
 2518 13a5 8B                      		mov	a, [hl]
 2519 13a6 9D F2                   		mov	r10, a
 2520 13a8 6A F2 04                		or	r10, #4
 2521 13ab AD F0                   		movw	ax, r8
 2522 13ad BD F6                   		movw	r14, ax
 2523 13af DA F6                   		movw	bc, r14
 2524 13b1 8D F2                   		mov	a, r10
 2525 13b3 48 00 00                		mov	[bc], a
 452:../src/StateMachine.c **** 		P4_bit.no3 = 0;
 2526                             		.loc 1 452 0
 2527 13b6 C9 F0 04 FF             		movw	r8, #-252
 2528 13ba AD F0                   		movw	ax, r8
 2529 13bc BD F4                   		movw	r12, ax
 2530 13be FA F4                   		movw	hl, r12
 2531 13c0 8B                      		mov	a, [hl]
 2532 13c1 9D F2                   		mov	r10, a
 2533 13c3 5A F2 F7                		and	r10, #-9
 2534 13c6 AD F0                   		movw	ax, r8
 2535 13c8 BD F6                   		movw	r14, ax
 2536 13ca DA F6                   		movw	bc, r14
 2537 13cc 8D F2                   		mov	a, r10
 2538 13ce 48 00 00                		mov	[bc], a
 453:../src/StateMachine.c **** 		break;
 2539                             		.loc 1 453 0
 2540 13d1 EC 8B 14 00             		br	!!.L1
 2541                             	.L91:
 454:../src/StateMachine.c **** 	case 9:
 455:../src/StateMachine.c **** 		strcpy(display_string, "Switch state = 4\x0d\x0a");
 2542                             		.loc 1 455 0
 2543 13d5 51 53                   		mov	a, #83
 2544 13d7 9F 00 00                		mov	!_display_string, a
 2545 13da 51 77                   		mov	a, #119
 2546 13dc 9F 00 00                		mov	!_display_string+1, a
 2547 13df 51 69                   		mov	a, #105
 2548 13e1 9F 00 00                		mov	!_display_string+2, a
 2549 13e4 51 74                   		mov	a, #116
 2550 13e6 9F 00 00                		mov	!_display_string+3, a
 2551 13e9 51 63                   		mov	a, #99
 2552 13eb 9F 00 00                		mov	!_display_string+4, a
 2553 13ee 51 68                   		mov	a, #104
 2554 13f0 9F 00 00                		mov	!_display_string+5, a
 2555 13f3 51 20                   		mov	a, #32
 2556 13f5 9F 00 00                		mov	!_display_string+6, a
 2557 13f8 51 73                   		mov	a, #115
 2558 13fa 9F 00 00                		mov	!_display_string+7, a
 2559 13fd 51 74                   		mov	a, #116
 2560 13ff 9F 00 00                		mov	!_display_string+8, a
 2561 1402 51 61                   		mov	a, #97
 2562 1404 9F 00 00                		mov	!_display_string+9, a
 2563 1407 51 74                   		mov	a, #116
 2564 1409 9F 00 00                		mov	!_display_string+10, a
 2565 140c 51 65                   		mov	a, #101
 2566 140e 9F 00 00                		mov	!_display_string+11, a
 2567 1411 51 20                   		mov	a, #32
 2568 1413 9F 00 00                		mov	!_display_string+12, a
 2569 1416 51 3D                   		mov	a, #61
 2570 1418 9F 00 00                		mov	!_display_string+13, a
 2571 141b 51 20                   		mov	a, #32
 2572 141d 9F 00 00                		mov	!_display_string+14, a
 2573 1420 51 34                   		mov	a, #52
 2574 1422 9F 00 00                		mov	!_display_string+15, a
 2575 1425 51 0D                   		mov	a, #13
 2576 1427 9F 00 00                		mov	!_display_string+16, a
 2577 142a 51 0A                   		mov	a, #10
 2578 142c 9F 00 00                		mov	!_display_string+17, a
 2579 142f F5 00 00                		clrb	!_display_string+18
 456:../src/StateMachine.c **** 		displayLCD(1);
 2580                             		.loc 1 456 0
 2581 1432 E6                      		onew	ax
 2582 1433 B8 00                   		movw	[sp], ax
 2583 1435 FC 00 00 00             		call	!!%code(_displayLCD)
 457:../src/StateMachine.c **** 		P4_bit.no1 = 1;
 2584                             		.loc 1 457 0
 2585 1439 C9 F0 04 FF             		movw	r8, #-252
 2586 143d AD F0                   		movw	ax, r8
 2587 143f BD F4                   		movw	r12, ax
 2588 1441 FA F4                   		movw	hl, r12
 2589 1443 8B                      		mov	a, [hl]
 2590 1444 9D F2                   		mov	r10, a
 2591 1446 6A F2 02                		or	r10, #2
 2592 1449 AD F0                   		movw	ax, r8
 2593 144b BD F6                   		movw	r14, ax
 2594 144d DA F6                   		movw	bc, r14
 2595 144f 8D F2                   		mov	a, r10
 2596 1451 48 00 00                		mov	[bc], a
 458:../src/StateMachine.c **** 		P4_bit.no2 = 1;
 2597                             		.loc 1 458 0
 2598 1454 C9 F0 04 FF             		movw	r8, #-252
 2599 1458 AD F0                   		movw	ax, r8
 2600 145a BD F4                   		movw	r12, ax
 2601 145c FA F4                   		movw	hl, r12
 2602 145e 8B                      		mov	a, [hl]
 2603 145f 9D F2                   		mov	r10, a
 2604 1461 6A F2 04                		or	r10, #4
 2605 1464 AD F0                   		movw	ax, r8
 2606 1466 BD F6                   		movw	r14, ax
 2607 1468 DA F6                   		movw	bc, r14
 2608 146a 8D F2                   		mov	a, r10
 2609 146c 48 00 00                		mov	[bc], a
 459:../src/StateMachine.c **** 		P4_bit.no3 = 0;
 2610                             		.loc 1 459 0
 2611 146f C9 F0 04 FF             		movw	r8, #-252
 2612 1473 AD F0                   		movw	ax, r8
 2613 1475 BD F4                   		movw	r12, ax
 2614 1477 FA F4                   		movw	hl, r12
 2615 1479 8B                      		mov	a, [hl]
 2616 147a 9D F2                   		mov	r10, a
 2617 147c 5A F2 F7                		and	r10, #-9
 2618 147f AD F0                   		movw	ax, r8
 2619 1481 BD F6                   		movw	r14, ax
 2620 1483 DA F6                   		movw	bc, r14
 2621 1485 8D F2                   		mov	a, r10
 2622 1487 48 00 00                		mov	[bc], a
 460:../src/StateMachine.c **** 		break;
 2623                             		.loc 1 460 0
 2624 148a 00                      		nop
 2625                             	.L1:
 2626                             	.LBE8:
 461:../src/StateMachine.c **** 	}
 462:../src/StateMachine.c **** }
 2627                             		.loc 1 462 0
 2628 148b 10 1E                   		addw	sp, #30
 2629 148d 61 EF                   		sel	rb2
 2630 148f C2                      		pop	bc ; r18
 2631 1490 C0                      		pop	ax ; r16
 2632 1491 61 CF                   		sel	rb0
 2633 1493 D7                      		ret
 2634                             	.LFE0:
 2674                             	.Letext0:
 2675                             		.file 2 "../src/iodefine.h"
 2676                             		.file 3 "../src/r_cg_macrodriver.h"
 2677                             		.file 4 "../src/globals.h"
