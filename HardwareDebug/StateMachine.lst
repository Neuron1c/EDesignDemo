   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.comm	_record,50,1
  28                             		.comm	_mem,50,1
  29                             		.comm	_display_string,50,1
  30                             		.comm	_scrollFlag,1,1
  31                             		.comm	_tempFlag,1,1
  32                             		.comm	_scrollCount,2,2
  33                             		.comm	_timerFlag,2,2
  34                             		.comm	_count,2,2
  35                             		.local	_state
  36                             		.comm	_state,2,2
  37                             		.global	_recieveInstruction
  39                             	_recieveInstruction:
  40                             	.LFB0:
  41                             		.file 1 "../src/StateMachine.c"
   1:../src/StateMachine.c **** /*
   2:../src/StateMachine.c ****  * StateMachine.c
   3:../src/StateMachine.c ****  *
   4:../src/StateMachine.c ****  *  Created on: 15 Apr 2017
   5:../src/StateMachine.c ****  *      Author: Neuron1c
   6:../src/StateMachine.c ****  */
   7:../src/StateMachine.c **** 
   8:../src/StateMachine.c **** #include "r_cg_userdefine.h"
   9:../src/StateMachine.c **** #include <string.h>
  10:../src/StateMachine.c **** #include <stdio.h>
  11:../src/StateMachine.c **** 
  12:../src/StateMachine.c **** static int state = 0;
  13:../src/StateMachine.c **** extern uint8_t display_string[RX_BUF_LEN];
  14:../src/StateMachine.c **** 
  15:../src/StateMachine.c **** //Recieve instruction, value from 1 to 7
  16:../src/StateMachine.c **** //1 = right button (accept/okay)
  17:../src/StateMachine.c **** //2 = middle button
  18:../src/StateMachine.c **** //3 = down button
  19:../src/StateMachine.c **** //4 = up button
  20:../src/StateMachine.c **** //5 = left button (back/cancel)
  21:../src/StateMachine.c **** //6 = switch to test mode
  22:../src/StateMachine.c **** //7 = switch to normal mode
  23:../src/StateMachine.c **** 
  24:../src/StateMachine.c **** void recieveInstruction(int instr){
  42                             		.loc 1 24 0
  43                             		; start of function
  44                             		; outgoing: 2 bytes
  45 0000 20 02                   		subw	sp, #2
  46                             	.LCFI0:
  25:../src/StateMachine.c **** 	switch(state){
  47                             		.loc 1 25 0
  48 0002 AF 00 00                		movw	ax, !_state
  49 0005 BD F0                   		movw	r8, ax
  50 0007 44 04 00                		cmpw	ax, #4
  51 000a 61 F8                   		 sknz
  52 000c EC E0 01 00             		 br	!!.L3
  53 0010 AD F0                   		movw	ax, r8
  54 0012 44 04 00                		cmpw	ax, #4
  55 0015 71 FF                   		 xor1	CY, a.7
  56 0017 61 F3                   		 sknh
  57 0019 EC 5E 00 00             		 br	!!.L4
  58 001d AD F0                   		movw	ax, r8
  59 001f 44 01 00                		cmpw	ax, #1
  60 0022 61 F8                   		 sknz
  61 0024 EC F3 00 00             		 br	!!.L5
  62 0028 AD F0                   		movw	ax, r8
  63 002a 44 01 00                		cmpw	ax, #1
  64 002d 71 FF                   		 xor1	CY, a.7
  65 002f 61 F3                   		 sknh
  66 0031 EC 44 00 00             		 br	!!.L6
  67 0035 AD F0                   		movw	ax, r8
  68 0037 44 00 00                		cmpw	ax, #0
  69 003a 61 F8                   		 sknz
  70 003c EC AA 00 00             		 br	!!.L7
  71 0040 EC 99 03 00             		br	!!.L2
  72                             	.L6:
  73 0044 AD F0                   		movw	ax, r8
  74 0046 44 02 00                		cmpw	ax, #2
  75 0049 61 F8                   		 sknz
  76 004b EC 42 01 00             		 br	!!.L8
  77 004f AD F0                   		movw	ax, r8
  78 0051 44 03 00                		cmpw	ax, #3
  79 0054 61 F8                   		 sknz
  80 0056 EC 91 01 00             		 br	!!.L9
  81 005a EC 99 03 00             		br	!!.L2
  82                             	.L4:
  83 005e AD F0                   		movw	ax, r8
  84 0060 44 07 00                		cmpw	ax, #7
  85 0063 61 F8                   		 sknz
  86 0065 EC BB 02 00             		 br	!!.L10
  87 0069 AD F0                   		movw	ax, r8
  88 006b 44 07 00                		cmpw	ax, #7
  89 006e 71 FF                   		 xor1	CY, a.7
  90 0070 61 F3                   		 sknh
  91 0072 EC 90 00 00             		 br	!!.L11
  92 0076 AD F0                   		movw	ax, r8
  93 0078 44 05 00                		cmpw	ax, #5
  94 007b 61 F8                   		 sknz
  95 007d EC 27 02 00             		 br	!!.L12
  96 0081 AD F0                   		movw	ax, r8
  97 0083 44 06 00                		cmpw	ax, #6
  98 0086 61 F8                   		 sknz
  99 0088 EC 6E 02 00             		 br	!!.L13
 100 008c EC 99 03 00             		br	!!.L2
 101                             	.L11:
 102 0090 AD F0                   		movw	ax, r8
 103 0092 44 08 00                		cmpw	ax, #8
 104 0095 61 F8                   		 sknz
 105 0097 EC 08 03 00             		 br	!!.L14
 106 009b AD F0                   		movw	ax, r8
 107 009d 44 09 00                		cmpw	ax, #9
 108 00a0 61 F8                   		 sknz
 109 00a2 EC 55 03 00             		 br	!!.L15
 110 00a6 EC 99 03 00             		br	!!.L2
 111                             	.L7:
  26:../src/StateMachine.c **** 
  27:../src/StateMachine.c **** 	//---------------------------------------------------- normal mode
  28:../src/StateMachine.c **** 
  29:../src/StateMachine.c **** 	case 0: if(instr == 3)state++;
 112                             		.loc 1 29 0
 113 00aa A8 06                   		movw	ax, [sp+6]
 114 00ac 44 03 00                		cmpw	ax, #3
 115 00af 61 E8                   		 skz
 116 00b1 EC C5 00 00             		 br	!!.L16
 117                             		.loc 1 29 0 is_stmt 0 discriminator 1
 118 00b5 AF 00 00                		movw	ax, !_state
 119 00b8 BD F0                   		movw	r8, ax
 120 00ba A6 F0                   		incw	r8
 121 00bc AD F0                   		movw	ax, r8
 122 00be BF 00 00                		movw	!_state, ax
 123 00c1 EC EF 00 00             		br	!!.L17
 124                             	.L16:
  30:../src/StateMachine.c **** 			else if(instr == 4)state = 4;
 125                             		.loc 1 30 0 is_stmt 1
 126 00c5 A8 06                   		movw	ax, [sp+6]
 127 00c7 44 04 00                		cmpw	ax, #4
 128 00ca 61 E8                   		 skz
 129 00cc EC DA 00 00             		 br	!!.L18
 130                             		.loc 1 30 0 is_stmt 0 discriminator 1
 131 00d0 30 04 00                		movw	ax, #4
 132 00d3 BF 00 00                		movw	!_state, ax
 133 00d6 EC EF 00 00             		br	!!.L17
 134                             	.L18:
  31:../src/StateMachine.c **** 			else if(instr == 6)state = 5; break;
 135                             		.loc 1 31 0 is_stmt 1
 136 00da A8 06                   		movw	ax, [sp+6]
 137 00dc 44 06 00                		cmpw	ax, #6
 138 00df 61 E8                   		 skz
 139 00e1 EC EF 00 00             		 br	!!.L17
 140                             		.loc 1 31 0 is_stmt 0 discriminator 1
 141 00e5 30 05 00                		movw	ax, #5
 142 00e8 BF 00 00                		movw	!_state, ax
 143 00eb EC 99 03 00             		br	!!.L2
 144                             	.L17:
 145                             		.loc 1 31 0
 146 00ef EC 99 03 00             		br	!!.L2
 147                             	.L5:
  32:../src/StateMachine.c **** 	case 1: if(instr == 3)state++;
 148                             		.loc 1 32 0 is_stmt 1
 149 00f3 A8 06                   		movw	ax, [sp+6]
 150 00f5 44 03 00                		cmpw	ax, #3
 151 00f8 61 E8                   		 skz
 152 00fa EC 0E 01 00             		 br	!!.L19
 153                             		.loc 1 32 0 is_stmt 0 discriminator 1
 154 00fe AF 00 00                		movw	ax, !_state
 155 0101 BD F0                   		movw	r8, ax
 156 0103 A6 F0                   		incw	r8
 157 0105 AD F0                   		movw	ax, r8
 158 0107 BF 00 00                		movw	!_state, ax
 159 010a EC 3E 01 00             		br	!!.L20
 160                             	.L19:
  33:../src/StateMachine.c **** 			else if(instr == 4)state--;
 161                             		.loc 1 33 0 is_stmt 1
 162 010e A8 06                   		movw	ax, [sp+6]
 163 0110 44 04 00                		cmpw	ax, #4
 164 0113 61 E8                   		 skz
 165 0115 EC 29 01 00             		 br	!!.L21
 166                             		.loc 1 33 0 is_stmt 0 discriminator 1
 167 0119 AF 00 00                		movw	ax, !_state
 168 011c BD F0                   		movw	r8, ax
 169 011e B6 F0                   		decw	r8
 170 0120 AD F0                   		movw	ax, r8
 171 0122 BF 00 00                		movw	!_state, ax
 172 0125 EC 3E 01 00             		br	!!.L20
 173                             	.L21:
  34:../src/StateMachine.c **** 			else if(instr == 6)state = 5; break;
 174                             		.loc 1 34 0 is_stmt 1
 175 0129 A8 06                   		movw	ax, [sp+6]
 176 012b 44 06 00                		cmpw	ax, #6
 177 012e 61 E8                   		 skz
 178 0130 EC 3E 01 00             		 br	!!.L20
 179                             		.loc 1 34 0 is_stmt 0 discriminator 1
 180 0134 30 05 00                		movw	ax, #5
 181 0137 BF 00 00                		movw	!_state, ax
 182 013a EC 99 03 00             		br	!!.L2
 183                             	.L20:
 184                             		.loc 1 34 0
 185 013e EC 99 03 00             		br	!!.L2
 186                             	.L8:
  35:../src/StateMachine.c **** 	case 2: if(instr == 3)state++;
 187                             		.loc 1 35 0 is_stmt 1
 188 0142 A8 06                   		movw	ax, [sp+6]
 189 0144 44 03 00                		cmpw	ax, #3
 190 0147 61 E8                   		 skz
 191 0149 EC 5D 01 00             		 br	!!.L22
 192                             		.loc 1 35 0 is_stmt 0 discriminator 1
 193 014d AF 00 00                		movw	ax, !_state
 194 0150 BD F0                   		movw	r8, ax
 195 0152 A6 F0                   		incw	r8
 196 0154 AD F0                   		movw	ax, r8
 197 0156 BF 00 00                		movw	!_state, ax
 198 0159 EC 8D 01 00             		br	!!.L23
 199                             	.L22:
  36:../src/StateMachine.c **** 			else if(instr == 4)state--;
 200                             		.loc 1 36 0 is_stmt 1
 201 015d A8 06                   		movw	ax, [sp+6]
 202 015f 44 04 00                		cmpw	ax, #4
 203 0162 61 E8                   		 skz
 204 0164 EC 78 01 00             		 br	!!.L24
 205                             		.loc 1 36 0 is_stmt 0 discriminator 1
 206 0168 AF 00 00                		movw	ax, !_state
 207 016b BD F0                   		movw	r8, ax
 208 016d B6 F0                   		decw	r8
 209 016f AD F0                   		movw	ax, r8
 210 0171 BF 00 00                		movw	!_state, ax
 211 0174 EC 8D 01 00             		br	!!.L23
 212                             	.L24:
  37:../src/StateMachine.c **** 			else if(instr == 6)state = 5;break;
 213                             		.loc 1 37 0 is_stmt 1
 214 0178 A8 06                   		movw	ax, [sp+6]
 215 017a 44 06 00                		cmpw	ax, #6
 216 017d 61 E8                   		 skz
 217 017f EC 8D 01 00             		 br	!!.L23
 218                             		.loc 1 37 0 is_stmt 0 discriminator 1
 219 0183 30 05 00                		movw	ax, #5
 220 0186 BF 00 00                		movw	!_state, ax
 221 0189 EC 99 03 00             		br	!!.L2
 222                             	.L23:
 223                             		.loc 1 37 0
 224 018d EC 99 03 00             		br	!!.L2
 225                             	.L9:
  38:../src/StateMachine.c **** 	case 3: if(instr == 3)state++;
 226                             		.loc 1 38 0 is_stmt 1
 227 0191 A8 06                   		movw	ax, [sp+6]
 228 0193 44 03 00                		cmpw	ax, #3
 229 0196 61 E8                   		 skz
 230 0198 EC AC 01 00             		 br	!!.L25
 231                             		.loc 1 38 0 is_stmt 0 discriminator 1
 232 019c AF 00 00                		movw	ax, !_state
 233 019f BD F0                   		movw	r8, ax
 234 01a1 A6 F0                   		incw	r8
 235 01a3 AD F0                   		movw	ax, r8
 236 01a5 BF 00 00                		movw	!_state, ax
 237 01a8 EC DC 01 00             		br	!!.L26
 238                             	.L25:
  39:../src/StateMachine.c **** 			else if(instr == 4)state--;
 239                             		.loc 1 39 0 is_stmt 1
 240 01ac A8 06                   		movw	ax, [sp+6]
 241 01ae 44 04 00                		cmpw	ax, #4
 242 01b1 61 E8                   		 skz
 243 01b3 EC C7 01 00             		 br	!!.L27
 244                             		.loc 1 39 0 is_stmt 0 discriminator 1
 245 01b7 AF 00 00                		movw	ax, !_state
 246 01ba BD F0                   		movw	r8, ax
 247 01bc B6 F0                   		decw	r8
 248 01be AD F0                   		movw	ax, r8
 249 01c0 BF 00 00                		movw	!_state, ax
 250 01c3 EC DC 01 00             		br	!!.L26
 251                             	.L27:
  40:../src/StateMachine.c **** 			else if(instr == 6)state = 5; break;
 252                             		.loc 1 40 0 is_stmt 1
 253 01c7 A8 06                   		movw	ax, [sp+6]
 254 01c9 44 06 00                		cmpw	ax, #6
 255 01cc 61 E8                   		 skz
 256 01ce EC DC 01 00             		 br	!!.L26
 257                             		.loc 1 40 0 is_stmt 0 discriminator 1
 258 01d2 30 05 00                		movw	ax, #5
 259 01d5 BF 00 00                		movw	!_state, ax
 260 01d8 EC 99 03 00             		br	!!.L2
 261                             	.L26:
 262                             		.loc 1 40 0
 263 01dc EC 99 03 00             		br	!!.L2
 264                             	.L3:
  41:../src/StateMachine.c **** 	case 4: if(instr == 3)state = 0;
 265                             		.loc 1 41 0 is_stmt 1
 266 01e0 A8 06                   		movw	ax, [sp+6]
 267 01e2 44 03 00                		cmpw	ax, #3
 268 01e5 61 E8                   		 skz
 269 01e7 EC F3 01 00             		 br	!!.L28
 270                             		.loc 1 41 0 is_stmt 0 discriminator 1
 271 01eb F6                      		clrw	ax
 272 01ec BF 00 00                		movw	!_state, ax
 273 01ef EC 23 02 00             		br	!!.L29
 274                             	.L28:
  42:../src/StateMachine.c **** 			else if(instr == 4)state--;
 275                             		.loc 1 42 0 is_stmt 1
 276 01f3 A8 06                   		movw	ax, [sp+6]
 277 01f5 44 04 00                		cmpw	ax, #4
 278 01f8 61 E8                   		 skz
 279 01fa EC 0E 02 00             		 br	!!.L30
 280                             		.loc 1 42 0 is_stmt 0 discriminator 1
 281 01fe AF 00 00                		movw	ax, !_state
 282 0201 BD F0                   		movw	r8, ax
 283 0203 B6 F0                   		decw	r8
 284 0205 AD F0                   		movw	ax, r8
 285 0207 BF 00 00                		movw	!_state, ax
 286 020a EC 23 02 00             		br	!!.L29
 287                             	.L30:
  43:../src/StateMachine.c **** 			else if(instr == 6)state = 5; break;
 288                             		.loc 1 43 0 is_stmt 1
 289 020e A8 06                   		movw	ax, [sp+6]
 290 0210 44 06 00                		cmpw	ax, #6
 291 0213 61 E8                   		 skz
 292 0215 EC 23 02 00             		 br	!!.L29
 293                             		.loc 1 43 0 is_stmt 0 discriminator 1
 294 0219 30 05 00                		movw	ax, #5
 295 021c BF 00 00                		movw	!_state, ax
 296 021f EC 99 03 00             		br	!!.L2
 297                             	.L29:
 298                             		.loc 1 43 0
 299 0223 EC 99 03 00             		br	!!.L2
 300                             	.L12:
  44:../src/StateMachine.c **** 
  45:../src/StateMachine.c **** 	//---------------------------------------------------- test mode
  46:../src/StateMachine.c **** 
  47:../src/StateMachine.c **** 	case 5: if(instr == 3)state++;
 301                             		.loc 1 47 0 is_stmt 1
 302 0227 A8 06                   		movw	ax, [sp+6]
 303 0229 44 03 00                		cmpw	ax, #3
 304 022c 61 E8                   		 skz
 305 022e EC 42 02 00             		 br	!!.L31
 306                             		.loc 1 47 0 is_stmt 0 discriminator 1
 307 0232 AF 00 00                		movw	ax, !_state
 308 0235 BD F0                   		movw	r8, ax
 309 0237 A6 F0                   		incw	r8
 310 0239 AD F0                   		movw	ax, r8
 311 023b BF 00 00                		movw	!_state, ax
 312 023e EC 6A 02 00             		br	!!.L32
 313                             	.L31:
  48:../src/StateMachine.c **** 			else if(instr == 4)state = 9;
 314                             		.loc 1 48 0 is_stmt 1
 315 0242 A8 06                   		movw	ax, [sp+6]
 316 0244 44 04 00                		cmpw	ax, #4
 317 0247 61 E8                   		 skz
 318 0249 EC 57 02 00             		 br	!!.L33
 319                             		.loc 1 48 0 is_stmt 0 discriminator 1
 320 024d 30 09 00                		movw	ax, #9
 321 0250 BF 00 00                		movw	!_state, ax
 322 0253 EC 6A 02 00             		br	!!.L32
 323                             	.L33:
  49:../src/StateMachine.c **** 			else if(instr == 7)state = 0; break;
 324                             		.loc 1 49 0 is_stmt 1
 325 0257 A8 06                   		movw	ax, [sp+6]
 326 0259 44 07 00                		cmpw	ax, #7
 327 025c 61 E8                   		 skz
 328 025e EC 6A 02 00             		 br	!!.L32
 329                             		.loc 1 49 0 is_stmt 0 discriminator 1
 330 0262 F6                      		clrw	ax
 331 0263 BF 00 00                		movw	!_state, ax
 332 0266 EC 99 03 00             		br	!!.L2
 333                             	.L32:
 334                             		.loc 1 49 0
 335 026a EC 99 03 00             		br	!!.L2
 336                             	.L13:
  50:../src/StateMachine.c **** 	case 6: if(instr == 3)state++;
 337                             		.loc 1 50 0 is_stmt 1
 338 026e A8 06                   		movw	ax, [sp+6]
 339 0270 44 03 00                		cmpw	ax, #3
 340 0273 61 E8                   		 skz
 341 0275 EC 89 02 00             		 br	!!.L34
 342                             		.loc 1 50 0 is_stmt 0 discriminator 1
 343 0279 AF 00 00                		movw	ax, !_state
 344 027c BD F0                   		movw	r8, ax
 345 027e A6 F0                   		incw	r8
 346 0280 AD F0                   		movw	ax, r8
 347 0282 BF 00 00                		movw	!_state, ax
 348 0285 EC B7 02 00             		br	!!.L35
 349                             	.L34:
  51:../src/StateMachine.c **** 			else if(instr == 4)state--;
 350                             		.loc 1 51 0 is_stmt 1
 351 0289 A8 06                   		movw	ax, [sp+6]
 352 028b 44 04 00                		cmpw	ax, #4
 353 028e 61 E8                   		 skz
 354 0290 EC A4 02 00             		 br	!!.L36
 355                             		.loc 1 51 0 is_stmt 0 discriminator 1
 356 0294 AF 00 00                		movw	ax, !_state
 357 0297 BD F0                   		movw	r8, ax
 358 0299 B6 F0                   		decw	r8
 359 029b AD F0                   		movw	ax, r8
 360 029d BF 00 00                		movw	!_state, ax
 361 02a0 EC B7 02 00             		br	!!.L35
 362                             	.L36:
  52:../src/StateMachine.c **** 			else if(instr == 7)state = 0; break;
 363                             		.loc 1 52 0 is_stmt 1
 364 02a4 A8 06                   		movw	ax, [sp+6]
 365 02a6 44 07 00                		cmpw	ax, #7
 366 02a9 61 E8                   		 skz
 367 02ab EC B7 02 00             		 br	!!.L35
 368                             		.loc 1 52 0 is_stmt 0 discriminator 1
 369 02af F6                      		clrw	ax
 370 02b0 BF 00 00                		movw	!_state, ax
 371 02b3 EC 99 03 00             		br	!!.L2
 372                             	.L35:
 373                             		.loc 1 52 0
 374 02b7 EC 99 03 00             		br	!!.L2
 375                             	.L10:
  53:../src/StateMachine.c **** 	case 7: if(instr == 3)state++;
 376                             		.loc 1 53 0 is_stmt 1
 377 02bb A8 06                   		movw	ax, [sp+6]
 378 02bd 44 03 00                		cmpw	ax, #3
 379 02c0 61 E8                   		 skz
 380 02c2 EC D6 02 00             		 br	!!.L37
 381                             		.loc 1 53 0 is_stmt 0 discriminator 1
 382 02c6 AF 00 00                		movw	ax, !_state
 383 02c9 BD F0                   		movw	r8, ax
 384 02cb A6 F0                   		incw	r8
 385 02cd AD F0                   		movw	ax, r8
 386 02cf BF 00 00                		movw	!_state, ax
 387 02d2 EC 04 03 00             		br	!!.L38
 388                             	.L37:
  54:../src/StateMachine.c **** 		    else if(instr == 4)state--;
 389                             		.loc 1 54 0 is_stmt 1
 390 02d6 A8 06                   		movw	ax, [sp+6]
 391 02d8 44 04 00                		cmpw	ax, #4
 392 02db 61 E8                   		 skz
 393 02dd EC F1 02 00             		 br	!!.L39
 394                             		.loc 1 54 0 is_stmt 0 discriminator 1
 395 02e1 AF 00 00                		movw	ax, !_state
 396 02e4 BD F0                   		movw	r8, ax
 397 02e6 B6 F0                   		decw	r8
 398 02e8 AD F0                   		movw	ax, r8
 399 02ea BF 00 00                		movw	!_state, ax
 400 02ed EC 04 03 00             		br	!!.L38
 401                             	.L39:
  55:../src/StateMachine.c **** 		    else if(instr == 7)state = 0;  break;
 402                             		.loc 1 55 0 is_stmt 1
 403 02f1 A8 06                   		movw	ax, [sp+6]
 404 02f3 44 07 00                		cmpw	ax, #7
 405 02f6 61 E8                   		 skz
 406 02f8 EC 04 03 00             		 br	!!.L38
 407                             		.loc 1 55 0 is_stmt 0 discriminator 1
 408 02fc F6                      		clrw	ax
 409 02fd BF 00 00                		movw	!_state, ax
 410 0300 EC 99 03 00             		br	!!.L2
 411                             	.L38:
 412                             		.loc 1 55 0
 413 0304 EC 99 03 00             		br	!!.L2
 414                             	.L14:
  56:../src/StateMachine.c **** 	case 8: if(instr == 3)state++;
 415                             		.loc 1 56 0 is_stmt 1
 416 0308 A8 06                   		movw	ax, [sp+6]
 417 030a 44 03 00                		cmpw	ax, #3
 418 030d 61 E8                   		 skz
 419 030f EC 23 03 00             		 br	!!.L40
 420                             		.loc 1 56 0 is_stmt 0 discriminator 1
 421 0313 AF 00 00                		movw	ax, !_state
 422 0316 BD F0                   		movw	r8, ax
 423 0318 A6 F0                   		incw	r8
 424 031a AD F0                   		movw	ax, r8
 425 031c BF 00 00                		movw	!_state, ax
 426 031f EC 51 03 00             		br	!!.L41
 427                             	.L40:
  57:../src/StateMachine.c **** 			else if(instr == 4)state--;
 428                             		.loc 1 57 0 is_stmt 1
 429 0323 A8 06                   		movw	ax, [sp+6]
 430 0325 44 04 00                		cmpw	ax, #4
 431 0328 61 E8                   		 skz
 432 032a EC 3E 03 00             		 br	!!.L42
 433                             		.loc 1 57 0 is_stmt 0 discriminator 1
 434 032e AF 00 00                		movw	ax, !_state
 435 0331 BD F0                   		movw	r8, ax
 436 0333 B6 F0                   		decw	r8
 437 0335 AD F0                   		movw	ax, r8
 438 0337 BF 00 00                		movw	!_state, ax
 439 033a EC 51 03 00             		br	!!.L41
 440                             	.L42:
  58:../src/StateMachine.c **** 			else if(instr == 7)state = 0; break;
 441                             		.loc 1 58 0 is_stmt 1
 442 033e A8 06                   		movw	ax, [sp+6]
 443 0340 44 07 00                		cmpw	ax, #7
 444 0343 61 E8                   		 skz
 445 0345 EC 51 03 00             		 br	!!.L41
 446                             		.loc 1 58 0 is_stmt 0 discriminator 1
 447 0349 F6                      		clrw	ax
 448 034a BF 00 00                		movw	!_state, ax
 449 034d EC 99 03 00             		br	!!.L2
 450                             	.L41:
 451                             		.loc 1 58 0
 452 0351 EC 99 03 00             		br	!!.L2
 453                             	.L15:
  59:../src/StateMachine.c **** 	case 9: if(instr == 3)state = 5;
 454                             		.loc 1 59 0 is_stmt 1
 455 0355 A8 06                   		movw	ax, [sp+6]
 456 0357 44 03 00                		cmpw	ax, #3
 457 035a 61 E8                   		 skz
 458 035c EC 6A 03 00             		 br	!!.L43
 459                             		.loc 1 59 0 is_stmt 0 discriminator 1
 460 0360 30 05 00                		movw	ax, #5
 461 0363 BF 00 00                		movw	!_state, ax
 462 0366 EC 98 03 00             		br	!!.L44
 463                             	.L43:
  60:../src/StateMachine.c **** 			else if(instr == 4)state--;
 464                             		.loc 1 60 0 is_stmt 1
 465 036a A8 06                   		movw	ax, [sp+6]
 466 036c 44 04 00                		cmpw	ax, #4
 467 036f 61 E8                   		 skz
 468 0371 EC 85 03 00             		 br	!!.L45
 469                             		.loc 1 60 0 is_stmt 0 discriminator 1
 470 0375 AF 00 00                		movw	ax, !_state
 471 0378 BD F0                   		movw	r8, ax
 472 037a B6 F0                   		decw	r8
 473 037c AD F0                   		movw	ax, r8
 474 037e BF 00 00                		movw	!_state, ax
 475 0381 EC 98 03 00             		br	!!.L44
 476                             	.L45:
  61:../src/StateMachine.c **** 			else if(instr == 7)state = 0; break;
 477                             		.loc 1 61 0 is_stmt 1
 478 0385 A8 06                   		movw	ax, [sp+6]
 479 0387 44 07 00                		cmpw	ax, #7
 480 038a 61 E8                   		 skz
 481 038c EC 98 03 00             		 br	!!.L44
 482                             		.loc 1 61 0 is_stmt 0 discriminator 1
 483 0390 F6                      		clrw	ax
 484 0391 BF 00 00                		movw	!_state, ax
 485 0394 EC 98 03 00             		br	!!.L60
 486                             	.L44:
 487                             	.L60:
 488                             		.loc 1 61 0
 489 0398 00                      		nop
 490                             	.L2:
  62:../src/StateMachine.c **** 	}
  63:../src/StateMachine.c **** 
  64:../src/StateMachine.c **** 	//STATE FUNCTIONS
  65:../src/StateMachine.c **** 
  66:../src/StateMachine.c **** 	/*
  67:../src/StateMachine.c **** 	 * Normal mode functions
  68:../src/StateMachine.c **** 	 *
  69:../src/StateMachine.c **** 	 * 0 - adjust date time
  70:../src/StateMachine.c **** 	 * 1 - measure open circuit voltage and short circuit current
  71:../src/StateMachine.c **** 	 * 2 - N/A
  72:../src/StateMachine.c **** 	 * 3 - N/A
  73:../src/StateMachine.c **** 	 * 4 - N/A
  74:../src/StateMachine.c **** 	 *
  75:../src/StateMachine.c **** 	 * Test mode functions
  76:../src/StateMachine.c **** 	 *
  77:../src/StateMachine.c **** 	 * 5 - $L0
  78:../src/StateMachine.c **** 	 * 6 - $L1
  79:../src/StateMachine.c **** 	 * 7 - $L2
  80:../src/StateMachine.c **** 	 * 8 - $L3
  81:../src/StateMachine.c **** 	 * 9 - $L4
  82:../src/StateMachine.c **** 	 */
  83:../src/StateMachine.c **** 
  84:../src/StateMachine.c **** 	switch(state){
 491                             		.loc 1 84 0 is_stmt 1
 492 0399 AF 00 00                		movw	ax, !_state
 493 039c BD F0                   		movw	r8, ax
 494 039e 44 04 00                		cmpw	ax, #4
 495 03a1 61 F8                   		 sknz
 496 03a3 EC B5 04 00             		 br	!!.L47
 497 03a7 AD F0                   		movw	ax, r8
 498 03a9 44 04 00                		cmpw	ax, #4
 499 03ac 71 FF                   		 xor1	CY, a.7
 500 03ae 61 F3                   		 sknh
 501 03b0 EC F5 03 00             		 br	!!.L48
 502 03b4 AD F0                   		movw	ax, r8
 503 03b6 44 01 00                		cmpw	ax, #1
 504 03b9 61 F8                   		 sknz
 505 03bb EC 5E 04 00             		 br	!!.L49
 506 03bf AD F0                   		movw	ax, r8
 507 03c1 44 01 00                		cmpw	ax, #1
 508 03c4 71 FF                   		 xor1	CY, a.7
 509 03c6 61 F3                   		 sknh
 510 03c8 EC DB 03 00             		 br	!!.L50
 511 03cc AD F0                   		movw	ax, r8
 512 03ce 44 00 00                		cmpw	ax, #0
 513 03d1 61 F8                   		 sknz
 514 03d3 EC 41 04 00             		 br	!!.L51
 515 03d7 EC 4E 08 00             		br	!!.L1
 516                             	.L50:
 517 03db AD F0                   		movw	ax, r8
 518 03dd 44 02 00                		cmpw	ax, #2
 519 03e0 61 F8                   		 sknz
 520 03e2 EC 7B 04 00             		 br	!!.L52
 521 03e6 AD F0                   		movw	ax, r8
 522 03e8 44 03 00                		cmpw	ax, #3
 523 03eb 61 F8                   		 sknz
 524 03ed EC 98 04 00             		 br	!!.L53
 525 03f1 EC 4E 08 00             		br	!!.L1
 526                             	.L48:
 527 03f5 AD F0                   		movw	ax, r8
 528 03f7 44 07 00                		cmpw	ax, #7
 529 03fa 61 F8                   		 sknz
 530 03fc EC 38 06 00             		 br	!!.L54
 531 0400 AD F0                   		movw	ax, r8
 532 0402 44 07 00                		cmpw	ax, #7
 533 0405 71 FF                   		 xor1	CY, a.7
 534 0407 61 F3                   		 sknh
 535 0409 EC 27 04 00             		 br	!!.L55
 536 040d AD F0                   		movw	ax, r8
 537 040f 44 05 00                		cmpw	ax, #5
 538 0412 61 F8                   		 sknz
 539 0414 EC D2 04 00             		 br	!!.L56
 540 0418 AD F0                   		movw	ax, r8
 541 041a 44 06 00                		cmpw	ax, #6
 542 041d 61 F8                   		 sknz
 543 041f EC 85 05 00             		 br	!!.L57
 544 0423 EC 4E 08 00             		br	!!.L1
 545                             	.L55:
 546 0427 AD F0                   		movw	ax, r8
 547 0429 44 08 00                		cmpw	ax, #8
 548 042c 61 F8                   		 sknz
 549 042e EC EB 06 00             		 br	!!.L58
 550 0432 AD F0                   		movw	ax, r8
 551 0434 44 09 00                		cmpw	ax, #9
 552 0437 61 F8                   		 sknz
 553 0439 EC 9E 07 00             		 br	!!.L59
 554 043d EC 4E 08 00             		br	!!.L1
 555                             	.L51:
  85:../src/StateMachine.c **** 		case 0: strcpy(display_string,"0\x0d\x0a"); displayLCD(1); break;
 556                             		.loc 1 85 0
 557 0441 51 30                   		mov	a, #48
 558 0443 9F 00 00                		mov	!_display_string, a
 559 0446 51 0D                   		mov	a, #13
 560 0448 9F 00 00                		mov	!_display_string+1, a
 561 044b 51 0A                   		mov	a, #10
 562 044d 9F 00 00                		mov	!_display_string+2, a
 563 0450 F5 00 00                		clrb	!_display_string+3
 564 0453 E6                      		onew	ax
 565 0454 B8 00                   		movw	[sp], ax
 566 0456 FC 00 00 00             		call	!!%code(_displayLCD)
 567 045a EC 4E 08 00             		br	!!.L1
 568                             	.L49:
  86:../src/StateMachine.c **** 		case 1: strcpy(display_string,"1\x0d\x0a"); displayLCD(1); break;
 569                             		.loc 1 86 0
 570 045e 51 31                   		mov	a, #49
 571 0460 9F 00 00                		mov	!_display_string, a
 572 0463 51 0D                   		mov	a, #13
 573 0465 9F 00 00                		mov	!_display_string+1, a
 574 0468 51 0A                   		mov	a, #10
 575 046a 9F 00 00                		mov	!_display_string+2, a
 576 046d F5 00 00                		clrb	!_display_string+3
 577 0470 E6                      		onew	ax
 578 0471 B8 00                   		movw	[sp], ax
 579 0473 FC 00 00 00             		call	!!%code(_displayLCD)
 580 0477 EC 4E 08 00             		br	!!.L1
 581                             	.L52:
  87:../src/StateMachine.c **** 		case 2: strcpy(display_string,"2\x0d\x0a"); displayLCD(1); break;
 582                             		.loc 1 87 0
 583 047b 51 32                   		mov	a, #50
 584 047d 9F 00 00                		mov	!_display_string, a
 585 0480 51 0D                   		mov	a, #13
 586 0482 9F 00 00                		mov	!_display_string+1, a
 587 0485 51 0A                   		mov	a, #10
 588 0487 9F 00 00                		mov	!_display_string+2, a
 589 048a F5 00 00                		clrb	!_display_string+3
 590 048d E6                      		onew	ax
 591 048e B8 00                   		movw	[sp], ax
 592 0490 FC 00 00 00             		call	!!%code(_displayLCD)
 593 0494 EC 4E 08 00             		br	!!.L1
 594                             	.L53:
  88:../src/StateMachine.c **** 		case 3: strcpy(display_string,"3\x0d\x0a"); displayLCD(1); break;
 595                             		.loc 1 88 0
 596 0498 51 33                   		mov	a, #51
 597 049a 9F 00 00                		mov	!_display_string, a
 598 049d 51 0D                   		mov	a, #13
 599 049f 9F 00 00                		mov	!_display_string+1, a
 600 04a2 51 0A                   		mov	a, #10
 601 04a4 9F 00 00                		mov	!_display_string+2, a
 602 04a7 F5 00 00                		clrb	!_display_string+3
 603 04aa E6                      		onew	ax
 604 04ab B8 00                   		movw	[sp], ax
 605 04ad FC 00 00 00             		call	!!%code(_displayLCD)
 606 04b1 EC 4E 08 00             		br	!!.L1
 607                             	.L47:
  89:../src/StateMachine.c **** 		case 4: strcpy(display_string,"4\x0d\x0a"); displayLCD(1); break;
 608                             		.loc 1 89 0
 609 04b5 51 34                   		mov	a, #52
 610 04b7 9F 00 00                		mov	!_display_string, a
 611 04ba 51 0D                   		mov	a, #13
 612 04bc 9F 00 00                		mov	!_display_string+1, a
 613 04bf 51 0A                   		mov	a, #10
 614 04c1 9F 00 00                		mov	!_display_string+2, a
 615 04c4 F5 00 00                		clrb	!_display_string+3
 616 04c7 E6                      		onew	ax
 617 04c8 B8 00                   		movw	[sp], ax
 618 04ca FC 00 00 00             		call	!!%code(_displayLCD)
 619 04ce EC 4E 08 00             		br	!!.L1
 620                             	.L56:
  90:../src/StateMachine.c **** 		case 5: strcpy(display_string,"Switch state = 0\x0d\x0a");
 621                             		.loc 1 90 0
 622 04d2 51 53                   		mov	a, #83
 623 04d4 9F 00 00                		mov	!_display_string, a
 624 04d7 51 77                   		mov	a, #119
 625 04d9 9F 00 00                		mov	!_display_string+1, a
 626 04dc 51 69                   		mov	a, #105
 627 04de 9F 00 00                		mov	!_display_string+2, a
 628 04e1 51 74                   		mov	a, #116
 629 04e3 9F 00 00                		mov	!_display_string+3, a
 630 04e6 51 63                   		mov	a, #99
 631 04e8 9F 00 00                		mov	!_display_string+4, a
 632 04eb 51 68                   		mov	a, #104
 633 04ed 9F 00 00                		mov	!_display_string+5, a
 634 04f0 51 20                   		mov	a, #32
 635 04f2 9F 00 00                		mov	!_display_string+6, a
 636 04f5 51 73                   		mov	a, #115
 637 04f7 9F 00 00                		mov	!_display_string+7, a
 638 04fa 51 74                   		mov	a, #116
 639 04fc 9F 00 00                		mov	!_display_string+8, a
 640 04ff 51 61                   		mov	a, #97
 641 0501 9F 00 00                		mov	!_display_string+9, a
 642 0504 51 74                   		mov	a, #116
 643 0506 9F 00 00                		mov	!_display_string+10, a
 644 0509 51 65                   		mov	a, #101
 645 050b 9F 00 00                		mov	!_display_string+11, a
 646 050e 51 20                   		mov	a, #32
 647 0510 9F 00 00                		mov	!_display_string+12, a
 648 0513 51 3D                   		mov	a, #61
 649 0515 9F 00 00                		mov	!_display_string+13, a
 650 0518 51 20                   		mov	a, #32
 651 051a 9F 00 00                		mov	!_display_string+14, a
 652 051d 51 30                   		mov	a, #48
 653 051f 9F 00 00                		mov	!_display_string+15, a
 654 0522 51 0D                   		mov	a, #13
 655 0524 9F 00 00                		mov	!_display_string+16, a
 656 0527 51 0A                   		mov	a, #10
 657 0529 9F 00 00                		mov	!_display_string+17, a
 658 052c F5 00 00                		clrb	!_display_string+18
  91:../src/StateMachine.c **** 		        displayLCD(1);
 659                             		.loc 1 91 0
 660 052f E6                      		onew	ax
 661 0530 B8 00                   		movw	[sp], ax
 662 0532 FC 00 00 00             		call	!!%code(_displayLCD)
  92:../src/StateMachine.c **** 				P4_bit.no1 = 0;
 663                             		.loc 1 92 0
 664 0536 C9 F0 04 FF             		movw	r8, #-252
 665 053a AD F0                   		movw	ax, r8
 666 053c BD F4                   		movw	r12, ax
 667 053e FA F4                   		movw	hl, r12
 668 0540 8B                      		mov	a, [hl]
 669 0541 9D F2                   		mov	r10, a
 670 0543 5A F2 FD                		and	r10, #-3
 671 0546 AD F0                   		movw	ax, r8
 672 0548 DA F4                   		movw	bc, r12
 673 054a 8D F2                   		mov	a, r10
 674 054c 48 00 00                		mov	[bc], a
  93:../src/StateMachine.c **** 				P4_bit.no2 = 0;
 675                             		.loc 1 93 0
 676 054f C9 F0 04 FF             		movw	r8, #-252
 677 0553 AD F0                   		movw	ax, r8
 678 0555 BD F4                   		movw	r12, ax
 679 0557 FA F4                   		movw	hl, r12
 680 0559 8B                      		mov	a, [hl]
 681 055a 9D F2                   		mov	r10, a
 682 055c 5A F2 FB                		and	r10, #-5
 683 055f AD F0                   		movw	ax, r8
 684 0561 DA F4                   		movw	bc, r12
 685 0563 8D F2                   		mov	a, r10
 686 0565 48 00 00                		mov	[bc], a
  94:../src/StateMachine.c **** 				P4_bit.no3 = 0;
 687                             		.loc 1 94 0
 688 0568 C9 F0 04 FF             		movw	r8, #-252
 689 056c AD F0                   		movw	ax, r8
 690 056e BD F4                   		movw	r12, ax
 691 0570 FA F4                   		movw	hl, r12
 692 0572 8B                      		mov	a, [hl]
 693 0573 9D F2                   		mov	r10, a
 694 0575 5A F2 F7                		and	r10, #-9
 695 0578 AD F0                   		movw	ax, r8
 696 057a DA F4                   		movw	bc, r12
 697 057c 8D F2                   		mov	a, r10
 698 057e 48 00 00                		mov	[bc], a
  95:../src/StateMachine.c **** 				break;
 699                             		.loc 1 95 0
 700 0581 EC 4E 08 00             		br	!!.L1
 701                             	.L57:
  96:../src/StateMachine.c **** 		case 6: strcpy(display_string,"Switch state = 1\x0d\x0a");
 702                             		.loc 1 96 0
 703 0585 51 53                   		mov	a, #83
 704 0587 9F 00 00                		mov	!_display_string, a
 705 058a 51 77                   		mov	a, #119
 706 058c 9F 00 00                		mov	!_display_string+1, a
 707 058f 51 69                   		mov	a, #105
 708 0591 9F 00 00                		mov	!_display_string+2, a
 709 0594 51 74                   		mov	a, #116
 710 0596 9F 00 00                		mov	!_display_string+3, a
 711 0599 51 63                   		mov	a, #99
 712 059b 9F 00 00                		mov	!_display_string+4, a
 713 059e 51 68                   		mov	a, #104
 714 05a0 9F 00 00                		mov	!_display_string+5, a
 715 05a3 51 20                   		mov	a, #32
 716 05a5 9F 00 00                		mov	!_display_string+6, a
 717 05a8 51 73                   		mov	a, #115
 718 05aa 9F 00 00                		mov	!_display_string+7, a
 719 05ad 51 74                   		mov	a, #116
 720 05af 9F 00 00                		mov	!_display_string+8, a
 721 05b2 51 61                   		mov	a, #97
 722 05b4 9F 00 00                		mov	!_display_string+9, a
 723 05b7 51 74                   		mov	a, #116
 724 05b9 9F 00 00                		mov	!_display_string+10, a
 725 05bc 51 65                   		mov	a, #101
 726 05be 9F 00 00                		mov	!_display_string+11, a
 727 05c1 51 20                   		mov	a, #32
 728 05c3 9F 00 00                		mov	!_display_string+12, a
 729 05c6 51 3D                   		mov	a, #61
 730 05c8 9F 00 00                		mov	!_display_string+13, a
 731 05cb 51 20                   		mov	a, #32
 732 05cd 9F 00 00                		mov	!_display_string+14, a
 733 05d0 51 31                   		mov	a, #49
 734 05d2 9F 00 00                		mov	!_display_string+15, a
 735 05d5 51 0D                   		mov	a, #13
 736 05d7 9F 00 00                		mov	!_display_string+16, a
 737 05da 51 0A                   		mov	a, #10
 738 05dc 9F 00 00                		mov	!_display_string+17, a
 739 05df F5 00 00                		clrb	!_display_string+18
  97:../src/StateMachine.c **** 				displayLCD(1);
 740                             		.loc 1 97 0
 741 05e2 E6                      		onew	ax
 742 05e3 B8 00                   		movw	[sp], ax
 743 05e5 FC 00 00 00             		call	!!%code(_displayLCD)
  98:../src/StateMachine.c **** 		        P4_bit.no1 = 0;
 744                             		.loc 1 98 0
 745 05e9 C9 F0 04 FF             		movw	r8, #-252
 746 05ed AD F0                   		movw	ax, r8
 747 05ef BD F4                   		movw	r12, ax
 748 05f1 FA F4                   		movw	hl, r12
 749 05f3 8B                      		mov	a, [hl]
 750 05f4 9D F2                   		mov	r10, a
 751 05f6 5A F2 FD                		and	r10, #-3
 752 05f9 AD F0                   		movw	ax, r8
 753 05fb DA F4                   		movw	bc, r12
 754 05fd 8D F2                   		mov	a, r10
 755 05ff 48 00 00                		mov	[bc], a
  99:../src/StateMachine.c **** 			    P4_bit.no2 = 0;
 756                             		.loc 1 99 0
 757 0602 C9 F0 04 FF             		movw	r8, #-252
 758 0606 AD F0                   		movw	ax, r8
 759 0608 BD F4                   		movw	r12, ax
 760 060a FA F4                   		movw	hl, r12
 761 060c 8B                      		mov	a, [hl]
 762 060d 9D F2                   		mov	r10, a
 763 060f 5A F2 FB                		and	r10, #-5
 764 0612 AD F0                   		movw	ax, r8
 765 0614 DA F4                   		movw	bc, r12
 766 0616 8D F2                   		mov	a, r10
 767 0618 48 00 00                		mov	[bc], a
 100:../src/StateMachine.c **** 				P4_bit.no3 = 1;
 768                             		.loc 1 100 0
 769 061b C9 F0 04 FF             		movw	r8, #-252
 770 061f AD F0                   		movw	ax, r8
 771 0621 BD F4                   		movw	r12, ax
 772 0623 FA F4                   		movw	hl, r12
 773 0625 8B                      		mov	a, [hl]
 774 0626 9D F2                   		mov	r10, a
 775 0628 6A F2 08                		or	r10, #8
 776 062b AD F0                   		movw	ax, r8
 777 062d DA F4                   		movw	bc, r12
 778 062f 8D F2                   		mov	a, r10
 779 0631 48 00 00                		mov	[bc], a
 101:../src/StateMachine.c **** 				break;
 780                             		.loc 1 101 0
 781 0634 EC 4E 08 00             		br	!!.L1
 782                             	.L54:
 102:../src/StateMachine.c **** 		case 7: strcpy(display_string,"Switch state = 2\x0d\x0a");
 783                             		.loc 1 102 0
 784 0638 51 53                   		mov	a, #83
 785 063a 9F 00 00                		mov	!_display_string, a
 786 063d 51 77                   		mov	a, #119
 787 063f 9F 00 00                		mov	!_display_string+1, a
 788 0642 51 69                   		mov	a, #105
 789 0644 9F 00 00                		mov	!_display_string+2, a
 790 0647 51 74                   		mov	a, #116
 791 0649 9F 00 00                		mov	!_display_string+3, a
 792 064c 51 63                   		mov	a, #99
 793 064e 9F 00 00                		mov	!_display_string+4, a
 794 0651 51 68                   		mov	a, #104
 795 0653 9F 00 00                		mov	!_display_string+5, a
 796 0656 51 20                   		mov	a, #32
 797 0658 9F 00 00                		mov	!_display_string+6, a
 798 065b 51 73                   		mov	a, #115
 799 065d 9F 00 00                		mov	!_display_string+7, a
 800 0660 51 74                   		mov	a, #116
 801 0662 9F 00 00                		mov	!_display_string+8, a
 802 0665 51 61                   		mov	a, #97
 803 0667 9F 00 00                		mov	!_display_string+9, a
 804 066a 51 74                   		mov	a, #116
 805 066c 9F 00 00                		mov	!_display_string+10, a
 806 066f 51 65                   		mov	a, #101
 807 0671 9F 00 00                		mov	!_display_string+11, a
 808 0674 51 20                   		mov	a, #32
 809 0676 9F 00 00                		mov	!_display_string+12, a
 810 0679 51 3D                   		mov	a, #61
 811 067b 9F 00 00                		mov	!_display_string+13, a
 812 067e 51 20                   		mov	a, #32
 813 0680 9F 00 00                		mov	!_display_string+14, a
 814 0683 51 32                   		mov	a, #50
 815 0685 9F 00 00                		mov	!_display_string+15, a
 816 0688 51 0D                   		mov	a, #13
 817 068a 9F 00 00                		mov	!_display_string+16, a
 818 068d 51 0A                   		mov	a, #10
 819 068f 9F 00 00                		mov	!_display_string+17, a
 820 0692 F5 00 00                		clrb	!_display_string+18
 103:../src/StateMachine.c **** 				displayLCD(1);
 821                             		.loc 1 103 0
 822 0695 E6                      		onew	ax
 823 0696 B8 00                   		movw	[sp], ax
 824 0698 FC 00 00 00             		call	!!%code(_displayLCD)
 104:../src/StateMachine.c **** 				P4_bit.no1 = 1;
 825                             		.loc 1 104 0
 826 069c C9 F0 04 FF             		movw	r8, #-252
 827 06a0 AD F0                   		movw	ax, r8
 828 06a2 BD F4                   		movw	r12, ax
 829 06a4 FA F4                   		movw	hl, r12
 830 06a6 8B                      		mov	a, [hl]
 831 06a7 9D F2                   		mov	r10, a
 832 06a9 6A F2 02                		or	r10, #2
 833 06ac AD F0                   		movw	ax, r8
 834 06ae DA F4                   		movw	bc, r12
 835 06b0 8D F2                   		mov	a, r10
 836 06b2 48 00 00                		mov	[bc], a
 105:../src/StateMachine.c **** 				P4_bit.no2 = 0;
 837                             		.loc 1 105 0
 838 06b5 C9 F0 04 FF             		movw	r8, #-252
 839 06b9 AD F0                   		movw	ax, r8
 840 06bb BD F4                   		movw	r12, ax
 841 06bd FA F4                   		movw	hl, r12
 842 06bf 8B                      		mov	a, [hl]
 843 06c0 9D F2                   		mov	r10, a
 844 06c2 5A F2 FB                		and	r10, #-5
 845 06c5 AD F0                   		movw	ax, r8
 846 06c7 DA F4                   		movw	bc, r12
 847 06c9 8D F2                   		mov	a, r10
 848 06cb 48 00 00                		mov	[bc], a
 106:../src/StateMachine.c **** 				P4_bit.no3 = 0;
 849                             		.loc 1 106 0
 850 06ce C9 F0 04 FF             		movw	r8, #-252
 851 06d2 AD F0                   		movw	ax, r8
 852 06d4 BD F4                   		movw	r12, ax
 853 06d6 FA F4                   		movw	hl, r12
 854 06d8 8B                      		mov	a, [hl]
 855 06d9 9D F2                   		mov	r10, a
 856 06db 5A F2 F7                		and	r10, #-9
 857 06de AD F0                   		movw	ax, r8
 858 06e0 DA F4                   		movw	bc, r12
 859 06e2 8D F2                   		mov	a, r10
 860 06e4 48 00 00                		mov	[bc], a
 107:../src/StateMachine.c **** 				break;
 861                             		.loc 1 107 0
 862 06e7 EC 4E 08 00             		br	!!.L1
 863                             	.L58:
 108:../src/StateMachine.c **** 		case 8: strcpy(display_string,"Switch state = 3\x0d\x0a");
 864                             		.loc 1 108 0
 865 06eb 51 53                   		mov	a, #83
 866 06ed 9F 00 00                		mov	!_display_string, a
 867 06f0 51 77                   		mov	a, #119
 868 06f2 9F 00 00                		mov	!_display_string+1, a
 869 06f5 51 69                   		mov	a, #105
 870 06f7 9F 00 00                		mov	!_display_string+2, a
 871 06fa 51 74                   		mov	a, #116
 872 06fc 9F 00 00                		mov	!_display_string+3, a
 873 06ff 51 63                   		mov	a, #99
 874 0701 9F 00 00                		mov	!_display_string+4, a
 875 0704 51 68                   		mov	a, #104
 876 0706 9F 00 00                		mov	!_display_string+5, a
 877 0709 51 20                   		mov	a, #32
 878 070b 9F 00 00                		mov	!_display_string+6, a
 879 070e 51 73                   		mov	a, #115
 880 0710 9F 00 00                		mov	!_display_string+7, a
 881 0713 51 74                   		mov	a, #116
 882 0715 9F 00 00                		mov	!_display_string+8, a
 883 0718 51 61                   		mov	a, #97
 884 071a 9F 00 00                		mov	!_display_string+9, a
 885 071d 51 74                   		mov	a, #116
 886 071f 9F 00 00                		mov	!_display_string+10, a
 887 0722 51 65                   		mov	a, #101
 888 0724 9F 00 00                		mov	!_display_string+11, a
 889 0727 51 20                   		mov	a, #32
 890 0729 9F 00 00                		mov	!_display_string+12, a
 891 072c 51 3D                   		mov	a, #61
 892 072e 9F 00 00                		mov	!_display_string+13, a
 893 0731 51 20                   		mov	a, #32
 894 0733 9F 00 00                		mov	!_display_string+14, a
 895 0736 51 33                   		mov	a, #51
 896 0738 9F 00 00                		mov	!_display_string+15, a
 897 073b 51 0D                   		mov	a, #13
 898 073d 9F 00 00                		mov	!_display_string+16, a
 899 0740 51 0A                   		mov	a, #10
 900 0742 9F 00 00                		mov	!_display_string+17, a
 901 0745 F5 00 00                		clrb	!_display_string+18
 109:../src/StateMachine.c **** 		        displayLCD(1);
 902                             		.loc 1 109 0
 903 0748 E6                      		onew	ax
 904 0749 B8 00                   		movw	[sp], ax
 905 074b FC 00 00 00             		call	!!%code(_displayLCD)
 110:../src/StateMachine.c **** 		        P4_bit.no1 = 0;
 906                             		.loc 1 110 0
 907 074f C9 F0 04 FF             		movw	r8, #-252
 908 0753 AD F0                   		movw	ax, r8
 909 0755 BD F4                   		movw	r12, ax
 910 0757 FA F4                   		movw	hl, r12
 911 0759 8B                      		mov	a, [hl]
 912 075a 9D F2                   		mov	r10, a
 913 075c 5A F2 FD                		and	r10, #-3
 914 075f AD F0                   		movw	ax, r8
 915 0761 DA F4                   		movw	bc, r12
 916 0763 8D F2                   		mov	a, r10
 917 0765 48 00 00                		mov	[bc], a
 111:../src/StateMachine.c **** 		        P4_bit.no2 = 1;
 918                             		.loc 1 111 0
 919 0768 C9 F0 04 FF             		movw	r8, #-252
 920 076c AD F0                   		movw	ax, r8
 921 076e BD F4                   		movw	r12, ax
 922 0770 FA F4                   		movw	hl, r12
 923 0772 8B                      		mov	a, [hl]
 924 0773 9D F2                   		mov	r10, a
 925 0775 6A F2 04                		or	r10, #4
 926 0778 AD F0                   		movw	ax, r8
 927 077a DA F4                   		movw	bc, r12
 928 077c 8D F2                   		mov	a, r10
 929 077e 48 00 00                		mov	[bc], a
 112:../src/StateMachine.c **** 		        P4_bit.no3 = 0;
 930                             		.loc 1 112 0
 931 0781 C9 F0 04 FF             		movw	r8, #-252
 932 0785 AD F0                   		movw	ax, r8
 933 0787 BD F4                   		movw	r12, ax
 934 0789 FA F4                   		movw	hl, r12
 935 078b 8B                      		mov	a, [hl]
 936 078c 9D F2                   		mov	r10, a
 937 078e 5A F2 F7                		and	r10, #-9
 938 0791 AD F0                   		movw	ax, r8
 939 0793 DA F4                   		movw	bc, r12
 940 0795 8D F2                   		mov	a, r10
 941 0797 48 00 00                		mov	[bc], a
 113:../src/StateMachine.c **** 		        break;
 942                             		.loc 1 113 0
 943 079a EC 4E 08 00             		br	!!.L1
 944                             	.L59:
 114:../src/StateMachine.c **** 		case 9: strcpy(display_string,"Switch state = 4\x0d\x0a");
 945                             		.loc 1 114 0
 946 079e 51 53                   		mov	a, #83
 947 07a0 9F 00 00                		mov	!_display_string, a
 948 07a3 51 77                   		mov	a, #119
 949 07a5 9F 00 00                		mov	!_display_string+1, a
 950 07a8 51 69                   		mov	a, #105
 951 07aa 9F 00 00                		mov	!_display_string+2, a
 952 07ad 51 74                   		mov	a, #116
 953 07af 9F 00 00                		mov	!_display_string+3, a
 954 07b2 51 63                   		mov	a, #99
 955 07b4 9F 00 00                		mov	!_display_string+4, a
 956 07b7 51 68                   		mov	a, #104
 957 07b9 9F 00 00                		mov	!_display_string+5, a
 958 07bc 51 20                   		mov	a, #32
 959 07be 9F 00 00                		mov	!_display_string+6, a
 960 07c1 51 73                   		mov	a, #115
 961 07c3 9F 00 00                		mov	!_display_string+7, a
 962 07c6 51 74                   		mov	a, #116
 963 07c8 9F 00 00                		mov	!_display_string+8, a
 964 07cb 51 61                   		mov	a, #97
 965 07cd 9F 00 00                		mov	!_display_string+9, a
 966 07d0 51 74                   		mov	a, #116
 967 07d2 9F 00 00                		mov	!_display_string+10, a
 968 07d5 51 65                   		mov	a, #101
 969 07d7 9F 00 00                		mov	!_display_string+11, a
 970 07da 51 20                   		mov	a, #32
 971 07dc 9F 00 00                		mov	!_display_string+12, a
 972 07df 51 3D                   		mov	a, #61
 973 07e1 9F 00 00                		mov	!_display_string+13, a
 974 07e4 51 20                   		mov	a, #32
 975 07e6 9F 00 00                		mov	!_display_string+14, a
 976 07e9 51 34                   		mov	a, #52
 977 07eb 9F 00 00                		mov	!_display_string+15, a
 978 07ee 51 0D                   		mov	a, #13
 979 07f0 9F 00 00                		mov	!_display_string+16, a
 980 07f3 51 0A                   		mov	a, #10
 981 07f5 9F 00 00                		mov	!_display_string+17, a
 982 07f8 F5 00 00                		clrb	!_display_string+18
 115:../src/StateMachine.c **** 		        displayLCD(1);
 983                             		.loc 1 115 0
 984 07fb E6                      		onew	ax
 985 07fc B8 00                   		movw	[sp], ax
 986 07fe FC 00 00 00             		call	!!%code(_displayLCD)
 116:../src/StateMachine.c **** 		        P4_bit.no1 = 1;
 987                             		.loc 1 116 0
 988 0802 C9 F0 04 FF             		movw	r8, #-252
 989 0806 AD F0                   		movw	ax, r8
 990 0808 BD F4                   		movw	r12, ax
 991 080a FA F4                   		movw	hl, r12
 992 080c 8B                      		mov	a, [hl]
 993 080d 9D F2                   		mov	r10, a
 994 080f 6A F2 02                		or	r10, #2
 995 0812 AD F0                   		movw	ax, r8
 996 0814 DA F4                   		movw	bc, r12
 997 0816 8D F2                   		mov	a, r10
 998 0818 48 00 00                		mov	[bc], a
 117:../src/StateMachine.c **** 		        P4_bit.no2 = 1;
 999                             		.loc 1 117 0
 1000 081b C9 F0 04 FF             		movw	r8, #-252
 1001 081f AD F0                   		movw	ax, r8
 1002 0821 BD F4                   		movw	r12, ax
 1003 0823 FA F4                   		movw	hl, r12
 1004 0825 8B                      		mov	a, [hl]
 1005 0826 9D F2                   		mov	r10, a
 1006 0828 6A F2 04                		or	r10, #4
 1007 082b AD F0                   		movw	ax, r8
 1008 082d DA F4                   		movw	bc, r12
 1009 082f 8D F2                   		mov	a, r10
 1010 0831 48 00 00                		mov	[bc], a
 118:../src/StateMachine.c **** 		        P4_bit.no3 = 0;
 1011                             		.loc 1 118 0
 1012 0834 C9 F0 04 FF             		movw	r8, #-252
 1013 0838 AD F0                   		movw	ax, r8
 1014 083a BD F4                   		movw	r12, ax
 1015 083c FA F4                   		movw	hl, r12
 1016 083e 8B                      		mov	a, [hl]
 1017 083f 9D F2                   		mov	r10, a
 1018 0841 5A F2 F7                		and	r10, #-9
 1019 0844 AD F0                   		movw	ax, r8
 1020 0846 DA F4                   		movw	bc, r12
 1021 0848 8D F2                   		mov	a, r10
 1022 084a 48 00 00                		mov	[bc], a
 119:../src/StateMachine.c **** 		        break;
 1023                             		.loc 1 119 0
 1024 084d 00                      		nop
 1025                             	.L1:
 120:../src/StateMachine.c **** 	}
 121:../src/StateMachine.c **** }
 1026                             		.loc 1 121 0
 1027 084e 10 02                   		addw	sp, #2
 1028 0850 D7                      		ret
 1029                             	.LFE0:
 1061                             	.Letext0:
 1062                             		.file 2 "../src/iodefine.h"
 1063                             		.file 3 "../src/r_cg_macrodriver.h"
 1064                             		.file 4 "../src/globals.h"
