   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.comm	_record,50,1
  28                             		.comm	_mem,50,1
  29                             		.comm	_timerFlag,2,2
  30                             		.comm	_count,2,2
  31                             		.comm	_interval_timer_count,2,2
  32                             		.global	_r_uart1_interrupt_receive
  34                             	_r_uart1_interrupt_receive:
  35                             	.LFB0:
  36                             		.file 1 "../src/r_cg_serial_user.c"
   1:../src/r_cg_serial_user.c **** /**************************************************************************************************
   2:../src/r_cg_serial_user.c **** * DISCLAIMER
   3:../src/r_cg_serial_user.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/r_cg_serial_user.c **** * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is pr
   5:../src/r_cg_serial_user.c **** * applicable laws, including copyright laws. 
   6:../src/r_cg_serial_user.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIESREGARDING THIS SOFTWARE, WHETHER
   7:../src/r_cg_serial_user.c **** * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULA
   8:../src/r_cg_serial_user.c **** * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED N
   9:../src/r_cg_serial_user.c **** * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  10:../src/r_cg_serial_user.c **** * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, E
  11:../src/r_cg_serial_user.c **** * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/r_cg_serial_user.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/r_cg_serial_user.c **** * of this software. By using this software, you agree to the additional terms and conditions found 
  14:../src/r_cg_serial_user.c **** * following link:
  15:../src/r_cg_serial_user.c **** * http://www.renesas.com/disclaimer
  16:../src/r_cg_serial_user.c **** *
  17:../src/r_cg_serial_user.c **** * Copyright (C) 2011, 2015 Renesas Electronics Corporation. All rights reserved.
  18:../src/r_cg_serial_user.c **** ***************************************************************************************************
  19:../src/r_cg_serial_user.c **** 
  20:../src/r_cg_serial_user.c **** /**************************************************************************************************
  21:../src/r_cg_serial_user.c **** * File Name    : r_cg_serial_user.c
  22:../src/r_cg_serial_user.c **** * Version      : CodeGenerator for RL78/G13 V2.03.02.01 [15 May 2015]
  23:../src/r_cg_serial_user.c **** * Device(s)    : R5F100LE
  24:../src/r_cg_serial_user.c **** * Tool-Chain   : GCCRL78
  25:../src/r_cg_serial_user.c **** * Description  : This file implements device driver for Serial module.
  26:../src/r_cg_serial_user.c **** * Creation Date: 2017/04/12
  27:../src/r_cg_serial_user.c **** ***************************************************************************************************
  28:../src/r_cg_serial_user.c **** 
  29:../src/r_cg_serial_user.c **** /**************************************************************************************************
  30:../src/r_cg_serial_user.c **** Includes
  31:../src/r_cg_serial_user.c **** ***************************************************************************************************
  32:../src/r_cg_serial_user.c **** #include "r_cg_macrodriver.h"
  33:../src/r_cg_serial_user.c **** #include "r_cg_serial.h"
  34:../src/r_cg_serial_user.c **** /* Start user code for include. Do not edit comment generated here */
  35:../src/r_cg_serial_user.c **** /* End user code. Do not edit comment generated here */
  36:../src/r_cg_serial_user.c **** #include "r_cg_userdefine.h"
  37:../src/r_cg_serial_user.c **** 
  38:../src/r_cg_serial_user.c **** /**************************************************************************************************
  39:../src/r_cg_serial_user.c **** Global variables and functions
  40:../src/r_cg_serial_user.c **** ***************************************************************************************************
  41:../src/r_cg_serial_user.c **** extern volatile uint8_t * gp_uart1_tx_address;         /* uart1 send buffer address */
  42:../src/r_cg_serial_user.c **** extern volatile uint16_t  g_uart1_tx_count;            /* uart1 send data number */
  43:../src/r_cg_serial_user.c **** extern volatile uint8_t * gp_uart1_rx_address;         /* uart1 receive buffer address */
  44:../src/r_cg_serial_user.c **** extern volatile uint16_t  g_uart1_rx_count;            /* uart1 receive data number */
  45:../src/r_cg_serial_user.c **** extern volatile uint16_t  g_uart1_rx_length;           /* uart1 receive data length */
  46:../src/r_cg_serial_user.c **** /* Start user code for global. Do not edit comment generated here */
  47:../src/r_cg_serial_user.c **** 
  48:../src/r_cg_serial_user.c **** extern uint8_t  uart1RxFlag;    // UART1 Receive Flag
  49:../src/r_cg_serial_user.c **** extern uint8_t  uart1TxFlag;    // UART1 Transmit end flag
  50:../src/r_cg_serial_user.c **** 
  51:../src/r_cg_serial_user.c **** 
  52:../src/r_cg_serial_user.c **** /* End user code. Do not edit comment generated here */
  53:../src/r_cg_serial_user.c **** 
  54:../src/r_cg_serial_user.c **** /**************************************************************************************************
  55:../src/r_cg_serial_user.c **** * Function Name: r_uart1_interrupt_receive
  56:../src/r_cg_serial_user.c **** * Description  : This function is INTSR1 interrupt service routine.
  57:../src/r_cg_serial_user.c **** * Arguments    : None
  58:../src/r_cg_serial_user.c **** * Return Value : None
  59:../src/r_cg_serial_user.c **** ***************************************************************************************************
  60:../src/r_cg_serial_user.c **** void r_uart1_interrupt_receive(void)
  61:../src/r_cg_serial_user.c **** {
  37                             		.loc 1 61 0
  38                             		; start of function
  39                             		; push 16: ax bc de hl r8 r10 r12 r14
  40                             		; locals: 2 bytes
  41                             		; outgoing: 2 bytes
  42 0000 61 CF                   		sel	rb0
  43 0002 C1                      		push	ax
  44                             	.LCFI0:
  45 0003 C3                      		push	bc
  46                             	.LCFI1:
  47 0004 C5                      		push	de
  48                             	.LCFI2:
  49 0005 C7                      		push	hl
  50                             	.LCFI3:
  51 0006 61 DF                   		sel	rb1
  52 0008 C1                      		push	ax ; r8
  53                             	.LCFI4:
  54 0009 C3                      		push	bc ; r10
  55                             	.LCFI5:
  56 000a C5                      		push	de ; r12
  57                             	.LCFI6:
  58 000b C7                      		push	hl ; r14
  59                             	.LCFI7:
  60 000c 61 CF                   		sel	rb0
  61 000e 20 04                   		subw	sp, #4
  62                             	.LCFI8:
  62:../src/r_cg_serial_user.c ****     uint8_t rx_data;
  63:../src/r_cg_serial_user.c ****     uint8_t err_type;
  64:../src/r_cg_serial_user.c ****     
  65:../src/r_cg_serial_user.c ****     err_type = (uint8_t)(SSR03 & 0x0007U);
  63                             		.loc 1 65 0
  64 0010 C9 F0 06 01             		movw	r8, #262
  65 0014 AD F0                   		movw	ax, r8
  66 0016 BD F2                   		movw	r10, ax
  67 0018 FA F2                   		movw	hl, r10
  68 001a AB                      		movw	ax, [hl]
  69 001b BD F0                   		movw	r8, ax
  70 001d 8D F0                   		mov	a, r8
  71 001f 5C 07                   		and	a, #7
  72 0021 98 03                   		mov	[sp+3], a
  66:../src/r_cg_serial_user.c ****     SIR03 = (uint16_t)err_type;
  73                             		.loc 1 66 0
  74 0023 C9 F2 0E 01             		movw	r10, #270
  75 0027 88 03                   		mov	a, [sp+3]
  76 0029 70                      		mov	x, a 
  77 002a 51 00                   		mov	a, #0
  78 002c BD F0                   		movw	r8, ax
  79 002e AD F2                   		movw	ax, r10
  80 0030 BD F4                   		movw	r12, ax
  81 0032 DA F4                   		movw	bc, r12
  82 0034 AD F0                   		movw	ax, r8
  83 0036 78 00 00                		movw	[bc], ax
  67:../src/r_cg_serial_user.c **** 
  68:../src/r_cg_serial_user.c ****     if (err_type != 0U)
  84                             		.loc 1 68 0
  85 0039 88 03                   		mov	a, [sp+3]
  86 003b D1                      		cmp0	a
  87 003c 61 F8                   		 sknz
  88 003e EC 4C 00 00             		 br	!!.L2
  69:../src/r_cg_serial_user.c ****     {
  70:../src/r_cg_serial_user.c ****         r_uart1_callback_error(err_type);
  89                             		.loc 1 70 0
  90 0042 88 03                   		mov	a, [sp+3]
  91 0044 9D F0                   		mov	r8, a
  92 0046 98 00                   		mov	[sp], a
  93 0048 FC 42 01 00             		call	!!%code(_r_uart1_callback_error)
  94                             	.L2:
  71:../src/r_cg_serial_user.c ****     }
  72:../src/r_cg_serial_user.c ****     
  73:../src/r_cg_serial_user.c ****     rx_data = RXD1;
  95                             		.loc 1 73 0
  96 004c C9 F0 46 FF             		movw	r8, #-186
  97 0050 AD F0                   		movw	ax, r8
  98 0052 BD F2                   		movw	r10, ax
  99 0054 FA F2                   		movw	hl, r10
 100 0056 8B                      		mov	a, [hl]
 101 0057 9D F0                   		mov	r8, a
 102 0059 98 02                   		mov	[sp+2], a
  74:../src/r_cg_serial_user.c **** 
  75:../src/r_cg_serial_user.c ****     if (g_uart1_rx_length > g_uart1_rx_count)
 103                             		.loc 1 75 0
 104 005b AF 00 00                		movw	ax, !_g_uart1_rx_length
 105 005e BD F2                   		movw	r10, ax
 106 0060 AF 00 00                		movw	ax, !_g_uart1_rx_count
 107 0063 BD F0                   		movw	r8, ax
 108 0065 AD F2                   		movw	ax, r10
 109 0067 46 F0                   		cmpw	ax, r8
 110 0069 61 E3                   		 skh
 111 006b EC B7 00 00             		 br	!!.L3
  76:../src/r_cg_serial_user.c ****     {
  77:../src/r_cg_serial_user.c ****         *gp_uart1_rx_address = rx_data;
 112                             		.loc 1 77 0
 113 006f AF 00 00                		movw	ax, !_gp_uart1_rx_address
 114 0072 BD F0                   		movw	r8, ax
 115 0074 88 02                   		mov	a, [sp+2]
 116 0076 9D F2                   		mov	r10, a
 117 0078 AD F0                   		movw	ax, r8
 118 007a BD F4                   		movw	r12, ax
 119 007c DA F4                   		movw	bc, r12
 120 007e 8D F2                   		mov	a, r10
 121 0080 48 00 00                		mov	[bc], a
  78:../src/r_cg_serial_user.c ****         gp_uart1_rx_address++;
 122                             		.loc 1 78 0
 123 0083 AF 00 00                		movw	ax, !_gp_uart1_rx_address
 124 0086 BD F0                   		movw	r8, ax
 125 0088 A6 F0                   		incw	r8
 126 008a AD F0                   		movw	ax, r8
 127 008c BF 00 00                		movw	!_gp_uart1_rx_address, ax
  79:../src/r_cg_serial_user.c ****         g_uart1_rx_count++;
 128                             		.loc 1 79 0
 129 008f AF 00 00                		movw	ax, !_g_uart1_rx_count
 130 0092 BD F0                   		movw	r8, ax
 131 0094 A6 F0                   		incw	r8
 132 0096 AD F0                   		movw	ax, r8
 133 0098 BF 00 00                		movw	!_g_uart1_rx_count, ax
  80:../src/r_cg_serial_user.c **** 
  81:../src/r_cg_serial_user.c ****         if (g_uart1_rx_length == g_uart1_rx_count)
 134                             		.loc 1 81 0
 135 009b AF 00 00                		movw	ax, !_g_uart1_rx_length
 136 009e BD F2                   		movw	r10, ax
 137 00a0 AF 00 00                		movw	ax, !_g_uart1_rx_count
 138 00a3 BD F0                   		movw	r8, ax
 139 00a5 AD F2                   		movw	ax, r10
 140 00a7 46 F0                   		cmpw	ax, r8
 141 00a9 61 E8                   		 skz
 142 00ab EC C4 00 00             		 br	!!.L1
  82:../src/r_cg_serial_user.c ****         {
  83:../src/r_cg_serial_user.c ****             r_uart1_callback_receiveend();
 143                             		.loc 1 83 0
 144 00af FC 39 01 00             		call	!!%code(_r_uart1_callback_receiveend)
 145 00b3 EC C4 00 00             		br	!!.L1
 146                             	.L3:
  84:../src/r_cg_serial_user.c ****         }
  85:../src/r_cg_serial_user.c ****     }
  86:../src/r_cg_serial_user.c ****     else
  87:../src/r_cg_serial_user.c ****     {
  88:../src/r_cg_serial_user.c ****         r_uart1_callback_softwareoverrun(rx_data);
 147                             		.loc 1 88 0
 148 00b7 88 02                   		mov	a, [sp+2]
 149 00b9 70                      		mov	x, a 
 150 00ba 51 00                   		mov	a, #0
 151 00bc BD F0                   		movw	r8, ax
 152 00be B8 00                   		movw	[sp], ax
 153 00c0 FC 3D 01 00             		call	!!%code(_r_uart1_callback_softwareoverrun)
 154                             	.L1:
  89:../src/r_cg_serial_user.c ****     }
  90:../src/r_cg_serial_user.c **** }
 155                             		.loc 1 90 0
 156 00c4 10 04                   		addw	sp, #4
 157 00c6 61 DF                   		sel	rb1
 158 00c8 C6                      		pop	hl ; r14
 159 00c9 C4                      		pop	de ; r12
 160 00ca C2                      		pop	bc ; r10
 161 00cb C0                      		pop	ax ; r8
 162 00cc 61 CF                   		sel	rb0
 163 00ce C6                      		pop	hl
 164 00cf C4                      		pop	de
 165 00d0 C2                      		pop	bc
 166 00d1 C0                      		pop	ax
 167 00d2 61 FC                   		reti
 168                             	.LFE0:
 170                             		.global	_r_uart1_interrupt_send
 172                             	_r_uart1_interrupt_send:
 173                             	.LFB1:
  91:../src/r_cg_serial_user.c **** 
  92:../src/r_cg_serial_user.c **** /**************************************************************************************************
  93:../src/r_cg_serial_user.c **** * Function Name: r_uart1_interrupt_send
  94:../src/r_cg_serial_user.c **** * Description  : This function is INTST1 interrupt service routine.
  95:../src/r_cg_serial_user.c **** * Arguments    : None
  96:../src/r_cg_serial_user.c **** * Return Value : None
  97:../src/r_cg_serial_user.c **** ***************************************************************************************************
  98:../src/r_cg_serial_user.c **** void r_uart1_interrupt_send(void)
  99:../src/r_cg_serial_user.c **** {
 174                             		.loc 1 99 0
 175                             		; start of function
 176                             		; push 16: ax bc de hl r8 r10 r12 r14
 177 00d4 61 CF                   		sel	rb0
 178 00d6 C1                      		push	ax
 179                             	.LCFI9:
 180 00d7 C3                      		push	bc
 181                             	.LCFI10:
 182 00d8 C5                      		push	de
 183                             	.LCFI11:
 184 00d9 C7                      		push	hl
 185                             	.LCFI12:
 186 00da 61 DF                   		sel	rb1
 187 00dc C1                      		push	ax ; r8
 188                             	.LCFI13:
 189 00dd C3                      		push	bc ; r10
 190                             	.LCFI14:
 191 00de C5                      		push	de ; r12
 192                             	.LCFI15:
 193 00df C7                      		push	hl ; r14
 194                             	.LCFI16:
 195 00e0 61 CF                   		sel	rb0
 100:../src/r_cg_serial_user.c ****     if (g_uart1_tx_count > 0U)
 196                             		.loc 1 100 0
 197 00e2 AF 00 00                		movw	ax, !_g_uart1_tx_count
 198 00e5 BD F0                   		movw	r8, ax
 199 00e7 44 00 00                		cmpw	ax, #0
 200 00ea 61 F8                   		 sknz
 201 00ec EC 27 01 00             		 br	!!.L7
 101:../src/r_cg_serial_user.c ****     {
 102:../src/r_cg_serial_user.c ****         TXD1 = *gp_uart1_tx_address;
 202                             		.loc 1 102 0
 203 00f0 C9 F2 44 FF             		movw	r10, #-188
 204 00f4 AF 00 00                		movw	ax, !_gp_uart1_tx_address
 205 00f7 BD F0                   		movw	r8, ax
 206 00f9 BD F4                   		movw	r12, ax
 207 00fb FA F4                   		movw	hl, r12
 208 00fd 8B                      		mov	a, [hl]
 209 00fe 9D F0                   		mov	r8, a
 210 0100 AD F2                   		movw	ax, r10
 211 0102 BD F4                   		movw	r12, ax
 212 0104 DA F4                   		movw	bc, r12
 213 0106 8D F0                   		mov	a, r8
 214 0108 48 00 00                		mov	[bc], a
 103:../src/r_cg_serial_user.c ****         gp_uart1_tx_address++;
 215                             		.loc 1 103 0
 216 010b AF 00 00                		movw	ax, !_gp_uart1_tx_address
 217 010e BD F0                   		movw	r8, ax
 218 0110 A6 F0                   		incw	r8
 219 0112 AD F0                   		movw	ax, r8
 220 0114 BF 00 00                		movw	!_gp_uart1_tx_address, ax
 104:../src/r_cg_serial_user.c ****         g_uart1_tx_count--;
 221                             		.loc 1 104 0
 222 0117 AF 00 00                		movw	ax, !_g_uart1_tx_count
 223 011a BD F0                   		movw	r8, ax
 224 011c B6 F0                   		decw	r8
 225 011e AD F0                   		movw	ax, r8
 226 0120 BF 00 00                		movw	!_g_uart1_tx_count, ax
 227 0123 EC 2B 01 00             		br	!!.L6
 228                             	.L7:
 105:../src/r_cg_serial_user.c ****     }
 106:../src/r_cg_serial_user.c ****     else
 107:../src/r_cg_serial_user.c ****     {
 108:../src/r_cg_serial_user.c ****         r_uart1_callback_sendend();
 229                             		.loc 1 108 0
 230 0127 FC 3E 01 00             		call	!!%code(_r_uart1_callback_sendend)
 231                             	.L6:
 109:../src/r_cg_serial_user.c ****     }
 110:../src/r_cg_serial_user.c **** }
 232                             		.loc 1 110 0
 233 012b 61 DF                   		sel	rb1
 234 012d C6                      		pop	hl ; r14
 235 012e C4                      		pop	de ; r12
 236 012f C2                      		pop	bc ; r10
 237 0130 C0                      		pop	ax ; r8
 238 0131 61 CF                   		sel	rb0
 239 0133 C6                      		pop	hl
 240 0134 C4                      		pop	de
 241 0135 C2                      		pop	bc
 242 0136 C0                      		pop	ax
 243 0137 61 FC                   		reti
 244                             	.LFE1:
 247                             	_r_uart1_callback_receiveend:
 248                             	.LFB2:
 111:../src/r_cg_serial_user.c **** 
 112:../src/r_cg_serial_user.c **** /**************************************************************************************************
 113:../src/r_cg_serial_user.c **** * Function Name: r_uart1_callback_receiveend
 114:../src/r_cg_serial_user.c **** * Description  : This function is a callback function when UART1 finishes reception.
 115:../src/r_cg_serial_user.c **** * Arguments    : None
 116:../src/r_cg_serial_user.c **** * Return Value : None
 117:../src/r_cg_serial_user.c **** ***************************************************************************************************
 118:../src/r_cg_serial_user.c **** static void r_uart1_callback_receiveend(void)
 119:../src/r_cg_serial_user.c **** {
 249                             		.loc 1 119 0
 120:../src/r_cg_serial_user.c ****     /* Start user code. Do not edit comment generated here */
 121:../src/r_cg_serial_user.c **** 	uart1RxFlag = 1U;
 250                             		.loc 1 121 0
 251 0139 E5 00 00                		oneb	!_uart1RxFlag
 122:../src/r_cg_serial_user.c ****     /* End user code. Do not edit comment generated here */
 123:../src/r_cg_serial_user.c **** }
 252                             		.loc 1 123 0
 253 013c D7                      		ret
 254                             	.LFE2:
 257                             	_r_uart1_callback_softwareoverrun:
 258                             	.LFB3:
 124:../src/r_cg_serial_user.c **** 
 125:../src/r_cg_serial_user.c **** /**************************************************************************************************
 126:../src/r_cg_serial_user.c **** * Function Name: r_uart1_callback_softwareoverrun
 127:../src/r_cg_serial_user.c **** * Description  : This function is a callback function when UART1 receives an overflow data.
 128:../src/r_cg_serial_user.c **** * Arguments    : rx_data -
 129:../src/r_cg_serial_user.c **** *                    receive data
 130:../src/r_cg_serial_user.c **** * Return Value : None
 131:../src/r_cg_serial_user.c **** ***************************************************************************************************
 132:../src/r_cg_serial_user.c **** static void r_uart1_callback_softwareoverrun(uint16_t rx_data)
 133:../src/r_cg_serial_user.c **** {
 259                             		.loc 1 133 0
 134:../src/r_cg_serial_user.c ****     /* Start user code. Do not edit comment generated here */
 135:../src/r_cg_serial_user.c ****     /* End user code. Do not edit comment generated here */
 136:../src/r_cg_serial_user.c **** }
 260                             		.loc 1 136 0
 261 013d D7                      		ret
 262                             	.LFE3:
 265                             	_r_uart1_callback_sendend:
 266                             	.LFB4:
 137:../src/r_cg_serial_user.c **** 
 138:../src/r_cg_serial_user.c **** /**************************************************************************************************
 139:../src/r_cg_serial_user.c **** * Function Name: r_uart1_callback_sendend
 140:../src/r_cg_serial_user.c **** * Description  : This function is a callback function when UART1 finishes transmission.
 141:../src/r_cg_serial_user.c **** * Arguments    : None
 142:../src/r_cg_serial_user.c **** * Return Value : None
 143:../src/r_cg_serial_user.c **** ***************************************************************************************************
 144:../src/r_cg_serial_user.c **** static void r_uart1_callback_sendend(void)
 145:../src/r_cg_serial_user.c **** {
 267                             		.loc 1 145 0
 146:../src/r_cg_serial_user.c ****     /* Start user code. Do not edit comment generated here */
 147:../src/r_cg_serial_user.c **** 	uart1TxFlag = 1U;
 268                             		.loc 1 147 0
 269 013e E5 00 00                		oneb	!_uart1TxFlag
 148:../src/r_cg_serial_user.c ****     /* End user code. Do not edit comment generated here */
 149:../src/r_cg_serial_user.c **** }
 270                             		.loc 1 149 0
 271 0141 D7                      		ret
 272                             	.LFE4:
 275                             	_r_uart1_callback_error:
 276                             	.LFB5:
 150:../src/r_cg_serial_user.c **** 
 151:../src/r_cg_serial_user.c **** /**************************************************************************************************
 152:../src/r_cg_serial_user.c **** * Function Name: r_uart1_callback_error
 153:../src/r_cg_serial_user.c **** * Description  : This function is a callback function when UART1 reception error occurs.
 154:../src/r_cg_serial_user.c **** * Arguments    : err_type -
 155:../src/r_cg_serial_user.c **** *                    error type value
 156:../src/r_cg_serial_user.c **** * Return Value : None
 157:../src/r_cg_serial_user.c **** ***************************************************************************************************
 158:../src/r_cg_serial_user.c **** static void r_uart1_callback_error(uint8_t err_type)
 159:../src/r_cg_serial_user.c **** {
 277                             		.loc 1 159 0
 160:../src/r_cg_serial_user.c ****     /* Start user code. Do not edit comment generated here */
 161:../src/r_cg_serial_user.c ****     /* End user code. Do not edit comment generated here */
 162:../src/r_cg_serial_user.c **** }
 278                             		.loc 1 162 0
 279 0142 D7                      		ret
 280                             	.LFE5:
 416                             	.Letext0:
 417                             		.file 2 "../src/r_cg_macrodriver.h"
 418                             		.file 3 "../src/globals.h"
