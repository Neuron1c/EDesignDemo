   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.comm	_record,50,1
  28                             		.comm	_mem,50,1
  29                             		.comm	_timerFlag,2,2
  30                             		.comm	_count,2,2
  31                             		.comm	_interval_timer_count,2,2
  32                             		.comm	_gp_uart1_tx_address,2,2
  33                             		.comm	_g_uart1_tx_count,2,2
  34                             		.comm	_gp_uart1_rx_address,2,2
  35                             		.comm	_g_uart1_rx_count,2,2
  36                             		.comm	_g_uart1_rx_length,2,2
  37                             		.global	_R_SAU0_Create
  39                             	_R_SAU0_Create:
  40                             	.LFB0:
  41                             		.file 1 "../src/r_cg_serial.c"
   1:../src/r_cg_serial.c **** /**************************************************************************************************
   2:../src/r_cg_serial.c **** * DISCLAIMER
   3:../src/r_cg_serial.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/r_cg_serial.c **** * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is pr
   5:../src/r_cg_serial.c **** * applicable laws, including copyright laws. 
   6:../src/r_cg_serial.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIESREGARDING THIS SOFTWARE, WHETHER
   7:../src/r_cg_serial.c **** * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULA
   8:../src/r_cg_serial.c **** * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED N
   9:../src/r_cg_serial.c **** * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  10:../src/r_cg_serial.c **** * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, E
  11:../src/r_cg_serial.c **** * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/r_cg_serial.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/r_cg_serial.c **** * of this software. By using this software, you agree to the additional terms and conditions found 
  14:../src/r_cg_serial.c **** * following link:
  15:../src/r_cg_serial.c **** * http://www.renesas.com/disclaimer
  16:../src/r_cg_serial.c **** *
  17:../src/r_cg_serial.c **** * Copyright (C) 2011, 2015 Renesas Electronics Corporation. All rights reserved.
  18:../src/r_cg_serial.c **** ***************************************************************************************************
  19:../src/r_cg_serial.c **** 
  20:../src/r_cg_serial.c **** /**************************************************************************************************
  21:../src/r_cg_serial.c **** * File Name    : r_cg_serial.c
  22:../src/r_cg_serial.c **** * Version      : CodeGenerator for RL78/G13 V2.03.02.01 [15 May 2015]
  23:../src/r_cg_serial.c **** * Device(s)    : R5F100LE
  24:../src/r_cg_serial.c **** * Tool-Chain   : GCCRL78
  25:../src/r_cg_serial.c **** * Description  : This file implements device driver for Serial module.
  26:../src/r_cg_serial.c **** * Creation Date: 2017/04/12
  27:../src/r_cg_serial.c **** ***************************************************************************************************
  28:../src/r_cg_serial.c **** 
  29:../src/r_cg_serial.c **** /**************************************************************************************************
  30:../src/r_cg_serial.c **** Includes
  31:../src/r_cg_serial.c **** ***************************************************************************************************
  32:../src/r_cg_serial.c **** #include "r_cg_macrodriver.h"
  33:../src/r_cg_serial.c **** #include "r_cg_serial.h"
  34:../src/r_cg_serial.c **** /* Start user code for include. Do not edit comment generated here */
  35:../src/r_cg_serial.c **** /* End user code. Do not edit comment generated here */
  36:../src/r_cg_serial.c **** #include "r_cg_userdefine.h"
  37:../src/r_cg_serial.c **** 
  38:../src/r_cg_serial.c **** /**************************************************************************************************
  39:../src/r_cg_serial.c **** Global variables and functions
  40:../src/r_cg_serial.c **** ***************************************************************************************************
  41:../src/r_cg_serial.c **** volatile uint8_t * gp_uart1_tx_address;        /* uart1 transmit buffer address */
  42:../src/r_cg_serial.c **** volatile uint16_t  g_uart1_tx_count;           /* uart1 transmit data number */
  43:../src/r_cg_serial.c **** volatile uint8_t * gp_uart1_rx_address;        /* uart1 receive buffer address */
  44:../src/r_cg_serial.c **** volatile uint16_t  g_uart1_rx_count;           /* uart1 receive data number */
  45:../src/r_cg_serial.c **** volatile uint16_t  g_uart1_rx_length;          /* uart1 receive data length */
  46:../src/r_cg_serial.c **** /* Start user code for global. Do not edit comment generated here */
  47:../src/r_cg_serial.c **** /* End user code. Do not edit comment generated here */
  48:../src/r_cg_serial.c **** 
  49:../src/r_cg_serial.c **** /**************************************************************************************************
  50:../src/r_cg_serial.c **** * Function Name: R_SAU0_Create
  51:../src/r_cg_serial.c **** * Description  : This function initializes the SAU0 module.
  52:../src/r_cg_serial.c **** * Arguments    : None
  53:../src/r_cg_serial.c **** * Return Value : None
  54:../src/r_cg_serial.c **** ***************************************************************************************************
  55:../src/r_cg_serial.c **** void R_SAU0_Create(void)
  56:../src/r_cg_serial.c **** {
  42                             		.loc 1 56 0
  57:../src/r_cg_serial.c ****     SAU0EN = 1U;    /* supply SAU0 clock */
  43                             		.loc 1 57 0
  44 0000 C9 F0 F0 00             		movw	r8, #240
  45 0004 AD F0                   		movw	ax, r8
  46 0006 BD F4                   		movw	r12, ax
  47 0008 FA F4                   		movw	hl, r12
  48 000a 8B                      		mov	a, [hl]
  49 000b 9D F2                   		mov	r10, a
  50 000d 6A F2 04                		or	r10, #4
  51 0010 AD F0                   		movw	ax, r8
  52 0012 DA F4                   		movw	bc, r12
  53 0014 8D F2                   		mov	a, r10
  54 0016 48 00 00                		mov	[bc], a
  58:../src/r_cg_serial.c ****     NOP();
  55                             		.loc 1 58 0
  56                             	 ; 58 "../src/r_cg_serial.c" 1
  57 0019 00                      		nop
  58                             	 ; 0 "" 2
  59:../src/r_cg_serial.c ****     NOP();
  59                             		.loc 1 59 0
  60                             	 ; 59 "../src/r_cg_serial.c" 1
  61 001a 00                      		nop
  62                             	 ; 0 "" 2
  60:../src/r_cg_serial.c ****     NOP();
  63                             		.loc 1 60 0
  64                             	 ; 60 "../src/r_cg_serial.c" 1
  65 001b 00                      		nop
  66                             	 ; 0 "" 2
  61:../src/r_cg_serial.c ****     NOP();
  67                             		.loc 1 61 0
  68                             	 ; 61 "../src/r_cg_serial.c" 1
  69 001c 00                      		nop
  70                             	 ; 0 "" 2
  62:../src/r_cg_serial.c ****     SPS0 = _0001_SAU_CK00_FCLK_1 | _0010_SAU_CK01_FCLK_1;
  71                             		.loc 1 62 0
  72 001d C9 F0 26 01             		movw	r8, #294
  73 0021 AD F0                   		movw	ax, r8
  74 0023 BD F2                   		movw	r10, ax
  75 0025 DA F2                   		movw	bc, r10
  76 0027 30 11 00                		movw	ax, #17
  77 002a 78 00 00                		movw	[bc], ax
  63:../src/r_cg_serial.c ****     R_UART1_Create();
  78                             		.loc 1 63 0
  79 002d FC 00 00 00             		call	!!%code(_R_UART1_Create)
  64:../src/r_cg_serial.c **** }
  80                             		.loc 1 64 0
  81 0031 D7                      		ret
  82                             	.LFE0:
  84                             		.global	_R_UART1_Create
  86                             	_R_UART1_Create:
  87                             	.LFB1:
  65:../src/r_cg_serial.c **** 
  66:../src/r_cg_serial.c **** /**************************************************************************************************
  67:../src/r_cg_serial.c **** * Function Name: R_UART1_Create
  68:../src/r_cg_serial.c **** * Description  : This function initializes the UART1 module.
  69:../src/r_cg_serial.c **** * Arguments    : None
  70:../src/r_cg_serial.c **** * Return Value : None
  71:../src/r_cg_serial.c **** ***************************************************************************************************
  72:../src/r_cg_serial.c **** void R_UART1_Create(void)
  73:../src/r_cg_serial.c **** {
  88                             		.loc 1 73 0
  89                             		; start of function
  90                             		; push 2: r16
  91 0032 61 EF                   		sel	rb2
  92 0034 C1                      		push	ax ; r16
  93                             	.LCFI0:
  94 0035 61 CF                   		sel	rb0
  74:../src/r_cg_serial.c ****     ST0 |= _0008_SAU_CH3_STOP_TRG_ON | _0004_SAU_CH2_STOP_TRG_ON;    /* disable UART1 receive and t
  95                             		.loc 1 74 0
  96 0037 C9 E8 24 01             		movw	r16, #292
  97 003b C9 F6 24 01             		movw	r14, #292
  98 003f AD F6                   		movw	ax, r14
  99 0041 BD F0                   		movw	r8, ax
 100 0043 FA F0                   		movw	hl, r8
 101 0045 AB                      		movw	ax, [hl]
 102 0046 BD F6                   		movw	r14, ax
 103 0048 8D F6                   		mov	a, r14
 104 004a 6C 0C                   		or	a, #12
 105 004c 9D F4                   		mov	r12, a
 106 004e 8D F7                   		mov	a, r15
 107 0050 6C 00                   		or	a, #0
 108 0052 9D F5                   		mov	r13, a
 109 0054 DA E8                   		movw	bc, r16
 110 0056 AD F4                   		movw	ax, r12
 111 0058 78 00 00                		movw	[bc], ax
  75:../src/r_cg_serial.c ****     STMK1 = 1U;    /* disable INTST1 interrupt */
 112                             		.loc 1 75 0
 113 005b C9 F4 E6 FF             		movw	r12, #-26
 114 005f AD F4                   		movw	ax, r12
 115 0061 BD F2                   		movw	r10, ax
 116 0063 FA F2                   		movw	hl, r10
 117 0065 8B                      		mov	a, [hl]
 118 0066 9D F6                   		mov	r14, a
 119 0068 6A F6 01                		or	r14, #1
 120 006b AD F4                   		movw	ax, r12
 121 006d BD F0                   		movw	r8, ax
 122 006f DA F0                   		movw	bc, r8
 123 0071 8D F6                   		mov	a, r14
 124 0073 48 00 00                		mov	[bc], a
  76:../src/r_cg_serial.c ****     STIF1 = 0U;    /* clear INTST1 interrupt flag */
 125                             		.loc 1 76 0
 126 0076 C9 F4 E2 FF             		movw	r12, #-30
 127 007a AD F4                   		movw	ax, r12
 128 007c BD F2                   		movw	r10, ax
 129 007e FA F2                   		movw	hl, r10
 130 0080 8B                      		mov	a, [hl]
 131 0081 9D F6                   		mov	r14, a
 132 0083 5A F6 FE                		and	r14, #-2
 133 0086 AD F4                   		movw	ax, r12
 134 0088 BD F0                   		movw	r8, ax
 135 008a DA F0                   		movw	bc, r8
 136 008c 8D F6                   		mov	a, r14
 137 008e 48 00 00                		mov	[bc], a
  77:../src/r_cg_serial.c ****     SRMK1 = 1U;    /* disable INTSR1 interrupt */
 138                             		.loc 1 77 0
 139 0091 C9 F4 E6 FF             		movw	r12, #-26
 140 0095 AD F4                   		movw	ax, r12
 141 0097 BD F2                   		movw	r10, ax
 142 0099 FA F2                   		movw	hl, r10
 143 009b 8B                      		mov	a, [hl]
 144 009c 9D F6                   		mov	r14, a
 145 009e 6A F6 02                		or	r14, #2
 146 00a1 AD F4                   		movw	ax, r12
 147 00a3 BD F0                   		movw	r8, ax
 148 00a5 DA F0                   		movw	bc, r8
 149 00a7 8D F6                   		mov	a, r14
 150 00a9 48 00 00                		mov	[bc], a
  78:../src/r_cg_serial.c ****     SRIF1 = 0U;    /* clear INTSR1 interrupt flag */
 151                             		.loc 1 78 0
 152 00ac C9 F4 E2 FF             		movw	r12, #-30
 153 00b0 AD F4                   		movw	ax, r12
 154 00b2 BD F2                   		movw	r10, ax
 155 00b4 FA F2                   		movw	hl, r10
 156 00b6 8B                      		mov	a, [hl]
 157 00b7 9D F6                   		mov	r14, a
 158 00b9 5A F6 FD                		and	r14, #-3
 159 00bc AD F4                   		movw	ax, r12
 160 00be BD F0                   		movw	r8, ax
 161 00c0 DA F0                   		movw	bc, r8
 162 00c2 8D F6                   		mov	a, r14
 163 00c4 48 00 00                		mov	[bc], a
  79:../src/r_cg_serial.c ****     SREMK1 = 1U;   /* disable INTSRE1 interrupt */
 164                             		.loc 1 79 0
 165 00c7 C9 F4 E6 FF             		movw	r12, #-26
 166 00cb AD F4                   		movw	ax, r12
 167 00cd BD F2                   		movw	r10, ax
 168 00cf FA F2                   		movw	hl, r10
 169 00d1 8B                      		mov	a, [hl]
 170 00d2 9D F6                   		mov	r14, a
 171 00d4 6A F6 04                		or	r14, #4
 172 00d7 AD F4                   		movw	ax, r12
 173 00d9 BD F0                   		movw	r8, ax
 174 00db DA F0                   		movw	bc, r8
 175 00dd 8D F6                   		mov	a, r14
 176 00df 48 00 00                		mov	[bc], a
  80:../src/r_cg_serial.c ****     SREIF1 = 0U;   /* clear INTSRE1 interrupt flag */
 177                             		.loc 1 80 0
 178 00e2 C9 F4 E2 FF             		movw	r12, #-30
 179 00e6 AD F4                   		movw	ax, r12
 180 00e8 BD F2                   		movw	r10, ax
 181 00ea FA F2                   		movw	hl, r10
 182 00ec 8B                      		mov	a, [hl]
 183 00ed 9D F6                   		mov	r14, a
 184 00ef 5A F6 FB                		and	r14, #-5
 185 00f2 AD F4                   		movw	ax, r12
 186 00f4 BD F0                   		movw	r8, ax
 187 00f6 DA F0                   		movw	bc, r8
 188 00f8 8D F6                   		mov	a, r14
 189 00fa 48 00 00                		mov	[bc], a
  81:../src/r_cg_serial.c ****     /* Set INTST1 low priority */
  82:../src/r_cg_serial.c ****     STPR11 = 1U;
 190                             		.loc 1 82 0
 191 00fd C9 F4 EE FF             		movw	r12, #-18
 192 0101 AD F4                   		movw	ax, r12
 193 0103 BD F2                   		movw	r10, ax
 194 0105 FA F2                   		movw	hl, r10
 195 0107 8B                      		mov	a, [hl]
 196 0108 9D F6                   		mov	r14, a
 197 010a 6A F6 01                		or	r14, #1
 198 010d AD F4                   		movw	ax, r12
 199 010f BD F0                   		movw	r8, ax
 200 0111 DA F0                   		movw	bc, r8
 201 0113 8D F6                   		mov	a, r14
 202 0115 48 00 00                		mov	[bc], a
  83:../src/r_cg_serial.c ****     STPR01 = 1U;
 203                             		.loc 1 83 0
 204 0118 C9 F4 EA FF             		movw	r12, #-22
 205 011c AD F4                   		movw	ax, r12
 206 011e BD F2                   		movw	r10, ax
 207 0120 FA F2                   		movw	hl, r10
 208 0122 8B                      		mov	a, [hl]
 209 0123 9D F6                   		mov	r14, a
 210 0125 6A F6 01                		or	r14, #1
 211 0128 AD F4                   		movw	ax, r12
 212 012a BD F0                   		movw	r8, ax
 213 012c DA F0                   		movw	bc, r8
 214 012e 8D F6                   		mov	a, r14
 215 0130 48 00 00                		mov	[bc], a
  84:../src/r_cg_serial.c ****     /* Set INTSR1 low priority */
  85:../src/r_cg_serial.c ****     SRPR11 = 1U;
 216                             		.loc 1 85 0
 217 0133 C9 F4 EE FF             		movw	r12, #-18
 218 0137 AD F4                   		movw	ax, r12
 219 0139 BD F2                   		movw	r10, ax
 220 013b FA F2                   		movw	hl, r10
 221 013d 8B                      		mov	a, [hl]
 222 013e 9D F6                   		mov	r14, a
 223 0140 6A F6 02                		or	r14, #2
 224 0143 AD F4                   		movw	ax, r12
 225 0145 BD F0                   		movw	r8, ax
 226 0147 DA F0                   		movw	bc, r8
 227 0149 8D F6                   		mov	a, r14
 228 014b 48 00 00                		mov	[bc], a
  86:../src/r_cg_serial.c ****     SRPR01 = 1U;
 229                             		.loc 1 86 0
 230 014e C9 F4 EA FF             		movw	r12, #-22
 231 0152 AD F4                   		movw	ax, r12
 232 0154 BD F2                   		movw	r10, ax
 233 0156 FA F2                   		movw	hl, r10
 234 0158 8B                      		mov	a, [hl]
 235 0159 9D F6                   		mov	r14, a
 236 015b 6A F6 02                		or	r14, #2
 237 015e AD F4                   		movw	ax, r12
 238 0160 BD F0                   		movw	r8, ax
 239 0162 DA F0                   		movw	bc, r8
 240 0164 8D F6                   		mov	a, r14
 241 0166 48 00 00                		mov	[bc], a
  87:../src/r_cg_serial.c ****     SMR02 = _0020_SAU_SMRMN_INITIALVALUE | _0000_SAU_CLOCK_SELECT_CK00 | _0000_SAU_TRIGGER_SOFTWARE
 242                             		.loc 1 87 0
 243 0169 C9 F4 14 01             		movw	r12, #276
 244 016d AD F4                   		movw	ax, r12
 245 016f BD F2                   		movw	r10, ax
 246 0171 DA F2                   		movw	bc, r10
 247 0173 30 22 00                		movw	ax, #34
 248 0176 78 00 00                		movw	[bc], ax
  88:../src/r_cg_serial.c ****             _0002_SAU_MODE_UART | _0000_SAU_TRANSFER_END;
  89:../src/r_cg_serial.c ****     SCR02 = _8000_SAU_TRANSMISSION | _0000_SAU_INTSRE_MASK | _0000_SAU_PARITY_NONE | _0080_SAU_LSB 
 249                             		.loc 1 89 0
 250 0179 C9 F4 1C 01             		movw	r12, #284
 251 017d AD F4                   		movw	ax, r12
 252 017f BD F0                   		movw	r8, ax
 253 0181 DA F0                   		movw	bc, r8
 254 0183 30 97 80                		movw	ax, #-32617
 255 0186 78 00 00                		movw	[bc], ax
  90:../src/r_cg_serial.c ****             _0007_SAU_LENGTH_8;
  91:../src/r_cg_serial.c ****     SDR02 = _CE00_UART1_TRANSMIT_DIVISOR;
 256                             		.loc 1 91 0
 257 0189 C9 F4 44 FF             		movw	r12, #-188
 258 018d AD F4                   		movw	ax, r12
 259 018f BD F2                   		movw	r10, ax
 260 0191 DA F2                   		movw	bc, r10
 261 0193 30 00 CE                		movw	ax, #-12800
 262 0196 78 00 00                		movw	[bc], ax
  92:../src/r_cg_serial.c ****     NFEN0 |= _04_SAU_RXD1_FILTER_ON;
 263                             		.loc 1 92 0
 264 0199 C9 F6 70 00             		movw	r14, #112
 265 019d C9 F4 70 00             		movw	r12, #112
 266 01a1 AD F4                   		movw	ax, r12
 267 01a3 BD F0                   		movw	r8, ax
 268 01a5 FA F0                   		movw	hl, r8
 269 01a7 8B                      		mov	a, [hl]
 270 01a8 9D F4                   		mov	r12, a
 271 01aa 6A F4 04                		or	r12, #4
 272 01ad AD F6                   		movw	ax, r14
 273 01af BD F2                   		movw	r10, ax
 274 01b1 DA F2                   		movw	bc, r10
 275 01b3 8D F4                   		mov	a, r12
 276 01b5 48 00 00                		mov	[bc], a
  93:../src/r_cg_serial.c ****     SIR03 = _0004_SAU_SIRMN_FECTMN | _0002_SAU_SIRMN_PECTMN | _0001_SAU_SIRMN_OVCTMN;    /* clear e
 277                             		.loc 1 93 0
 278 01b8 C9 F4 0E 01             		movw	r12, #270
 279 01bc AD F4                   		movw	ax, r12
 280 01be BD F0                   		movw	r8, ax
 281 01c0 DA F0                   		movw	bc, r8
 282 01c2 30 07 00                		movw	ax, #7
 283 01c5 78 00 00                		movw	[bc], ax
  94:../src/r_cg_serial.c ****     SMR03 = _0020_SAU_SMRMN_INITIALVALUE | _0000_SAU_CLOCK_SELECT_CK00 | _0100_SAU_TRIGGER_RXD | _0
 284                             		.loc 1 94 0
 285 01c8 C9 F4 16 01             		movw	r12, #278
 286 01cc AD F4                   		movw	ax, r12
 287 01ce BD F2                   		movw	r10, ax
 288 01d0 DA F2                   		movw	bc, r10
 289 01d2 30 22 01                		movw	ax, #290
 290 01d5 78 00 00                		movw	[bc], ax
  95:../src/r_cg_serial.c ****             _0002_SAU_MODE_UART | _0000_SAU_TRANSFER_END;
  96:../src/r_cg_serial.c ****     SCR03 = _4000_SAU_RECEPTION | _0000_SAU_INTSRE_MASK | _0000_SAU_PARITY_NONE | _0080_SAU_LSB | _
 291                             		.loc 1 96 0
 292 01d8 C9 F4 1E 01             		movw	r12, #286
 293 01dc AD F4                   		movw	ax, r12
 294 01de BD F0                   		movw	r8, ax
 295 01e0 DA F0                   		movw	bc, r8
 296 01e2 30 97 40                		movw	ax, #16535
 297 01e5 78 00 00                		movw	[bc], ax
  97:../src/r_cg_serial.c ****             _0007_SAU_LENGTH_8;
  98:../src/r_cg_serial.c ****     SDR03 = _CE00_UART1_RECEIVE_DIVISOR;
 298                             		.loc 1 98 0
 299 01e8 C9 F4 46 FF             		movw	r12, #-186
 300 01ec AD F4                   		movw	ax, r12
 301 01ee BD F2                   		movw	r10, ax
 302 01f0 DA F2                   		movw	bc, r10
 303 01f2 30 00 CE                		movw	ax, #-12800
 304 01f5 78 00 00                		movw	[bc], ax
  99:../src/r_cg_serial.c ****     SO0 |= _0004_SAU_CH2_DATA_OUTPUT_1;
 305                             		.loc 1 99 0
 306 01f8 C9 F6 28 01             		movw	r14, #296
 307 01fc C9 F4 28 01             		movw	r12, #296
 308 0200 AD F4                   		movw	ax, r12
 309 0202 BD F0                   		movw	r8, ax
 310 0204 FA F0                   		movw	hl, r8
 311 0206 AB                      		movw	ax, [hl]
 312 0207 BD F4                   		movw	r12, ax
 313 0209 8D F4                   		mov	a, r12
 314 020b 6C 04                   		or	a, #4
 315 020d 9D F2                   		mov	r10, a
 316 020f 8D F5                   		mov	a, r13
 317 0211 6C 00                   		or	a, #0
 318 0213 9D F3                   		mov	r11, a
 319 0215 AD F6                   		movw	ax, r14
 320 0217 BD F4                   		movw	r12, ax
 321 0219 DA F4                   		movw	bc, r12
 322 021b AD F2                   		movw	ax, r10
 323 021d 78 00 00                		movw	[bc], ax
 100:../src/r_cg_serial.c ****     SOL0 |= _0000_SAU_CHANNEL2_NORMAL;    /* output level normal */
 324                             		.loc 1 100 0
 325 0220 C9 F4 34 01             		movw	r12, #308
 326 0224 C9 F2 34 01             		movw	r10, #308
 327 0228 AD F2                   		movw	ax, r10
 328 022a BD F0                   		movw	r8, ax
 329 022c FA F0                   		movw	hl, r8
 330 022e AB                      		movw	ax, [hl]
 331 022f BD F2                   		movw	r10, ax
 332 0231 AD F4                   		movw	ax, r12
 333 0233 BD F0                   		movw	r8, ax
 334 0235 DA F0                   		movw	bc, r8
 335 0237 AD F2                   		movw	ax, r10
 336 0239 78 00 00                		movw	[bc], ax
 101:../src/r_cg_serial.c ****     SOE0 |= _0004_SAU_CH2_OUTPUT_ENABLE;    /* enable UART1 output */
 337                             		.loc 1 101 0
 338 023c C9 F4 2A 01             		movw	r12, #298
 339 0240 C9 F2 2A 01             		movw	r10, #298
 340 0244 AD F2                   		movw	ax, r10
 341 0246 BD F0                   		movw	r8, ax
 342 0248 FA F0                   		movw	hl, r8
 343 024a AB                      		movw	ax, [hl]
 344 024b BD F2                   		movw	r10, ax
 345 024d 8D F2                   		mov	a, r10
 346 024f 6C 04                   		or	a, #4
 347 0251 9D F0                   		mov	r8, a
 348 0253 8D F3                   		mov	a, r11
 349 0255 6C 00                   		or	a, #0
 350 0257 9D F1                   		mov	r9, a
 351 0259 AD F4                   		movw	ax, r12
 352 025b BD F2                   		movw	r10, ax
 353 025d DA F2                   		movw	bc, r10
 354 025f AD F0                   		movw	ax, r8
 355 0261 78 00 00                		movw	[bc], ax
 102:../src/r_cg_serial.c ****     /* Set RxD1 pin */
 103:../src/r_cg_serial.c ****     PMC0 &= 0xF7U;
 356                             		.loc 1 103 0
 357 0264 C9 F2 60 00             		movw	r10, #96
 358 0268 C9 F0 60 00             		movw	r8, #96
 359 026c AD F0                   		movw	ax, r8
 360 026e BD F4                   		movw	r12, ax
 361 0270 FA F4                   		movw	hl, r12
 362 0272 8B                      		mov	a, [hl]
 363 0273 9D F0                   		mov	r8, a
 364 0275 5A F0 F7                		and	r8, #-9
 365 0278 AD F2                   		movw	ax, r10
 366 027a BD F4                   		movw	r12, ax
 367 027c DA F4                   		movw	bc, r12
 368 027e 8D F0                   		mov	a, r8
 369 0280 48 00 00                		mov	[bc], a
 104:../src/r_cg_serial.c ****     PM0 |= 0x08U;
 370                             		.loc 1 104 0
 371 0283 C9 F2 20 FF             		movw	r10, #-224
 372 0287 C9 F0 20 FF             		movw	r8, #-224
 373 028b AD F0                   		movw	ax, r8
 374 028d BD F4                   		movw	r12, ax
 375 028f FA F4                   		movw	hl, r12
 376 0291 8B                      		mov	a, [hl]
 377 0292 9D F0                   		mov	r8, a
 378 0294 6A F0 08                		or	r8, #8
 379 0297 AD F2                   		movw	ax, r10
 380 0299 BD F4                   		movw	r12, ax
 381 029b DA F4                   		movw	bc, r12
 382 029d 8D F0                   		mov	a, r8
 383 029f 48 00 00                		mov	[bc], a
 105:../src/r_cg_serial.c ****     /* Set TxD1 pin */
 106:../src/r_cg_serial.c ****     PMC0 &= 0xFBU;
 384                             		.loc 1 106 0
 385 02a2 C9 F2 60 00             		movw	r10, #96
 386 02a6 C9 F0 60 00             		movw	r8, #96
 387 02aa AD F0                   		movw	ax, r8
 388 02ac BD F4                   		movw	r12, ax
 389 02ae FA F4                   		movw	hl, r12
 390 02b0 8B                      		mov	a, [hl]
 391 02b1 9D F0                   		mov	r8, a
 392 02b3 5A F0 FB                		and	r8, #-5
 393 02b6 AD F2                   		movw	ax, r10
 394 02b8 BD F4                   		movw	r12, ax
 395 02ba DA F4                   		movw	bc, r12
 396 02bc 8D F0                   		mov	a, r8
 397 02be 48 00 00                		mov	[bc], a
 107:../src/r_cg_serial.c ****     P0 |= 0x04U;
 398                             		.loc 1 107 0
 399 02c1 C9 F2 00 FF             		movw	r10, #-256
 400 02c5 C9 F0 00 FF             		movw	r8, #-256
 401 02c9 AD F0                   		movw	ax, r8
 402 02cb BD F4                   		movw	r12, ax
 403 02cd FA F4                   		movw	hl, r12
 404 02cf 8B                      		mov	a, [hl]
 405 02d0 9D F0                   		mov	r8, a
 406 02d2 6A F0 04                		or	r8, #4
 407 02d5 AD F2                   		movw	ax, r10
 408 02d7 BD F4                   		movw	r12, ax
 409 02d9 DA F4                   		movw	bc, r12
 410 02db 8D F0                   		mov	a, r8
 411 02dd 48 00 00                		mov	[bc], a
 108:../src/r_cg_serial.c ****     PM0 &= 0xFBU;
 412                             		.loc 1 108 0
 413 02e0 C9 F2 20 FF             		movw	r10, #-224
 414 02e4 C9 F0 20 FF             		movw	r8, #-224
 415 02e8 AD F0                   		movw	ax, r8
 416 02ea BD F4                   		movw	r12, ax
 417 02ec FA F4                   		movw	hl, r12
 418 02ee 8B                      		mov	a, [hl]
 419 02ef 9D F0                   		mov	r8, a
 420 02f1 5A F0 FB                		and	r8, #-5
 421 02f4 AD F2                   		movw	ax, r10
 422 02f6 BD F4                   		movw	r12, ax
 423 02f8 DA F4                   		movw	bc, r12
 424 02fa 8D F0                   		mov	a, r8
 425 02fc 48 00 00                		mov	[bc], a
 109:../src/r_cg_serial.c **** }
 426                             		.loc 1 109 0
 427 02ff 61 EF                   		sel	rb2
 428 0301 C0                      		pop	ax ; r16
 429 0302 61 CF                   		sel	rb0
 430 0304 D7                      		ret
 431                             	.LFE1:
 433                             		.global	_R_UART1_Start
 435                             	_R_UART1_Start:
 436                             	.LFB2:
 110:../src/r_cg_serial.c **** 
 111:../src/r_cg_serial.c **** /**************************************************************************************************
 112:../src/r_cg_serial.c **** * Function Name: R_UART1_Start
 113:../src/r_cg_serial.c **** * Description  : This function starts the UART1 module operation.
 114:../src/r_cg_serial.c **** * Arguments    : None
 115:../src/r_cg_serial.c **** * Return Value : None
 116:../src/r_cg_serial.c **** ***************************************************************************************************
 117:../src/r_cg_serial.c **** void R_UART1_Start(void)
 118:../src/r_cg_serial.c **** {
 437                             		.loc 1 118 0
 438                             		; start of function
 439                             		; push 2: r16
 440 0305 61 EF                   		sel	rb2
 441 0307 C1                      		push	ax ; r16
 442                             	.LCFI1:
 443 0308 61 CF                   		sel	rb0
 119:../src/r_cg_serial.c ****     SO0 |= _0004_SAU_CH2_DATA_OUTPUT_1;    /* output level normal */
 444                             		.loc 1 119 0
 445 030a C9 E8 28 01             		movw	r16, #296
 446 030e C9 F6 28 01             		movw	r14, #296
 447 0312 AD F6                   		movw	ax, r14
 448 0314 BD F0                   		movw	r8, ax
 449 0316 FA F0                   		movw	hl, r8
 450 0318 AB                      		movw	ax, [hl]
 451 0319 BD F6                   		movw	r14, ax
 452 031b 8D F6                   		mov	a, r14
 453 031d 6C 04                   		or	a, #4
 454 031f 9D F4                   		mov	r12, a
 455 0321 8D F7                   		mov	a, r15
 456 0323 6C 00                   		or	a, #0
 457 0325 9D F5                   		mov	r13, a
 458 0327 DA E8                   		movw	bc, r16
 459 0329 AD F4                   		movw	ax, r12
 460 032b 78 00 00                		movw	[bc], ax
 120:../src/r_cg_serial.c ****     SOE0 |= _0004_SAU_CH2_OUTPUT_ENABLE;    /* enable UART1 output */
 461                             		.loc 1 120 0
 462 032e C9 F6 2A 01             		movw	r14, #298
 463 0332 C9 F4 2A 01             		movw	r12, #298
 464 0336 AD F4                   		movw	ax, r12
 465 0338 BD F2                   		movw	r10, ax
 466 033a FA F2                   		movw	hl, r10
 467 033c AB                      		movw	ax, [hl]
 468 033d BD F4                   		movw	r12, ax
 469 033f 8D F4                   		mov	a, r12
 470 0341 6C 04                   		or	a, #4
 471 0343 9D F2                   		mov	r10, a
 472 0345 8D F5                   		mov	a, r13
 473 0347 6C 00                   		or	a, #0
 474 0349 9D F3                   		mov	r11, a
 475 034b AD F6                   		movw	ax, r14
 476 034d BD F4                   		movw	r12, ax
 477 034f DA F4                   		movw	bc, r12
 478 0351 AD F2                   		movw	ax, r10
 479 0353 78 00 00                		movw	[bc], ax
 121:../src/r_cg_serial.c ****     SS0 |= _0008_SAU_CH3_START_TRG_ON | _0004_SAU_CH2_START_TRG_ON;    /* enable UART1 receive and 
 480                             		.loc 1 121 0
 481 0356 C9 F4 22 01             		movw	r12, #290
 482 035a C9 F2 22 01             		movw	r10, #290
 483 035e AD F2                   		movw	ax, r10
 484 0360 BD F0                   		movw	r8, ax
 485 0362 FA F0                   		movw	hl, r8
 486 0364 AB                      		movw	ax, [hl]
 487 0365 BD F2                   		movw	r10, ax
 488 0367 8D F2                   		mov	a, r10
 489 0369 6C 0C                   		or	a, #12
 490 036b 9D F0                   		mov	r8, a
 491 036d 8D F3                   		mov	a, r11
 492 036f 6C 00                   		or	a, #0
 493 0371 9D F1                   		mov	r9, a
 494 0373 AD F4                   		movw	ax, r12
 495 0375 BD F2                   		movw	r10, ax
 496 0377 DA F2                   		movw	bc, r10
 497 0379 AD F0                   		movw	ax, r8
 498 037b 78 00 00                		movw	[bc], ax
 122:../src/r_cg_serial.c ****     STIF1 = 0U;    /* clear INTST1 interrupt flag */
 499                             		.loc 1 122 0
 500 037e C9 F0 E2 FF             		movw	r8, #-30
 501 0382 AD F0                   		movw	ax, r8
 502 0384 BD F4                   		movw	r12, ax
 503 0386 FA F4                   		movw	hl, r12
 504 0388 8B                      		mov	a, [hl]
 505 0389 9D F2                   		mov	r10, a
 506 038b 5A F2 FE                		and	r10, #-2
 507 038e AD F0                   		movw	ax, r8
 508 0390 DA F4                   		movw	bc, r12
 509 0392 8D F2                   		mov	a, r10
 510 0394 48 00 00                		mov	[bc], a
 123:../src/r_cg_serial.c ****     SRIF1 = 0U;    /* clear INTSR1 interrupt flag */
 511                             		.loc 1 123 0
 512 0397 C9 F0 E2 FF             		movw	r8, #-30
 513 039b AD F0                   		movw	ax, r8
 514 039d BD F4                   		movw	r12, ax
 515 039f FA F4                   		movw	hl, r12
 516 03a1 8B                      		mov	a, [hl]
 517 03a2 9D F2                   		mov	r10, a
 518 03a4 5A F2 FD                		and	r10, #-3
 519 03a7 AD F0                   		movw	ax, r8
 520 03a9 DA F4                   		movw	bc, r12
 521 03ab 8D F2                   		mov	a, r10
 522 03ad 48 00 00                		mov	[bc], a
 124:../src/r_cg_serial.c ****     STMK1 = 0U;    /* enable INTST1 interrupt */
 523                             		.loc 1 124 0
 524 03b0 C9 F0 E6 FF             		movw	r8, #-26
 525 03b4 AD F0                   		movw	ax, r8
 526 03b6 BD F4                   		movw	r12, ax
 527 03b8 FA F4                   		movw	hl, r12
 528 03ba 8B                      		mov	a, [hl]
 529 03bb 9D F2                   		mov	r10, a
 530 03bd 5A F2 FE                		and	r10, #-2
 531 03c0 AD F0                   		movw	ax, r8
 532 03c2 DA F4                   		movw	bc, r12
 533 03c4 8D F2                   		mov	a, r10
 534 03c6 48 00 00                		mov	[bc], a
 125:../src/r_cg_serial.c ****     SRMK1 = 0U;    /* enable INTSR1 interrupt */
 535                             		.loc 1 125 0
 536 03c9 C9 F0 E6 FF             		movw	r8, #-26
 537 03cd AD F0                   		movw	ax, r8
 538 03cf BD F4                   		movw	r12, ax
 539 03d1 FA F4                   		movw	hl, r12
 540 03d3 8B                      		mov	a, [hl]
 541 03d4 9D F2                   		mov	r10, a
 542 03d6 5A F2 FD                		and	r10, #-3
 543 03d9 AD F0                   		movw	ax, r8
 544 03db DA F4                   		movw	bc, r12
 545 03dd 8D F2                   		mov	a, r10
 546 03df 48 00 00                		mov	[bc], a
 126:../src/r_cg_serial.c **** }
 547                             		.loc 1 126 0
 548 03e2 61 EF                   		sel	rb2
 549 03e4 C0                      		pop	ax ; r16
 550 03e5 61 CF                   		sel	rb0
 551 03e7 D7                      		ret
 552                             	.LFE2:
 554                             		.global	_R_UART1_Stop
 556                             	_R_UART1_Stop:
 557                             	.LFB3:
 127:../src/r_cg_serial.c **** 
 128:../src/r_cg_serial.c **** /**************************************************************************************************
 129:../src/r_cg_serial.c **** * Function Name: R_UART1_Stop
 130:../src/r_cg_serial.c **** * Description  : This function stops the UART1 module operation.
 131:../src/r_cg_serial.c **** * Arguments    : None
 132:../src/r_cg_serial.c **** * Return Value : None
 133:../src/r_cg_serial.c **** ***************************************************************************************************
 134:../src/r_cg_serial.c **** void R_UART1_Stop(void)
 135:../src/r_cg_serial.c **** {
 558                             		.loc 1 135 0
 136:../src/r_cg_serial.c ****     STMK1 = 1U;    /* disable INTST1 interrupt */
 559                             		.loc 1 136 0
 560 03e8 C9 F4 E6 FF             		movw	r12, #-26
 561 03ec AD F4                   		movw	ax, r12
 562 03ee BD F0                   		movw	r8, ax
 563 03f0 FA F0                   		movw	hl, r8
 564 03f2 8B                      		mov	a, [hl]
 565 03f3 9D F6                   		mov	r14, a
 566 03f5 6A F6 01                		or	r14, #1
 567 03f8 AD F4                   		movw	ax, r12
 568 03fa BD F2                   		movw	r10, ax
 569 03fc DA F2                   		movw	bc, r10
 570 03fe 8D F6                   		mov	a, r14
 571 0400 48 00 00                		mov	[bc], a
 137:../src/r_cg_serial.c ****     SRMK1 = 1U;    /* disable INTSR1 interrupt */
 572                             		.loc 1 137 0
 573 0403 C9 F4 E6 FF             		movw	r12, #-26
 574 0407 AD F4                   		movw	ax, r12
 575 0409 BD F0                   		movw	r8, ax
 576 040b FA F0                   		movw	hl, r8
 577 040d 8B                      		mov	a, [hl]
 578 040e 9D F6                   		mov	r14, a
 579 0410 6A F6 02                		or	r14, #2
 580 0413 AD F4                   		movw	ax, r12
 581 0415 BD F2                   		movw	r10, ax
 582 0417 DA F2                   		movw	bc, r10
 583 0419 8D F6                   		mov	a, r14
 584 041b 48 00 00                		mov	[bc], a
 138:../src/r_cg_serial.c ****     ST0 |= _0008_SAU_CH3_STOP_TRG_ON | _0004_SAU_CH2_STOP_TRG_ON;    /* disable UART1 receive and t
 585                             		.loc 1 138 0
 586 041e C9 F6 24 01             		movw	r14, #292
 587 0422 C9 F4 24 01             		movw	r12, #292
 588 0426 AD F4                   		movw	ax, r12
 589 0428 BD F0                   		movw	r8, ax
 590 042a FA F0                   		movw	hl, r8
 591 042c AB                      		movw	ax, [hl]
 592 042d BD F4                   		movw	r12, ax
 593 042f 8D F4                   		mov	a, r12
 594 0431 6C 0C                   		or	a, #12
 595 0433 9D F2                   		mov	r10, a
 596 0435 8D F5                   		mov	a, r13
 597 0437 6C 00                   		or	a, #0
 598 0439 9D F3                   		mov	r11, a
 599 043b AD F6                   		movw	ax, r14
 600 043d BD F4                   		movw	r12, ax
 601 043f DA F4                   		movw	bc, r12
 602 0441 AD F2                   		movw	ax, r10
 603 0443 78 00 00                		movw	[bc], ax
 139:../src/r_cg_serial.c ****     SOE0 &= ~_0004_SAU_CH2_OUTPUT_ENABLE;    /* disable UART1 output */
 604                             		.loc 1 139 0
 605 0446 C9 F4 2A 01             		movw	r12, #298
 606 044a C9 F2 2A 01             		movw	r10, #298
 607 044e AD F2                   		movw	ax, r10
 608 0450 BD F0                   		movw	r8, ax
 609 0452 FA F0                   		movw	hl, r8
 610 0454 AB                      		movw	ax, [hl]
 611 0455 BD F2                   		movw	r10, ax
 612 0457 8D F2                   		mov	a, r10
 613 0459 5C FB                   		and	a, #-5
 614 045b 9D F0                   		mov	r8, a
 615 045d 8D F3                   		mov	a, r11
 616 045f 5C FF                   		and	a, #-1
 617 0461 9D F1                   		mov	r9, a
 618 0463 AD F4                   		movw	ax, r12
 619 0465 BD F2                   		movw	r10, ax
 620 0467 DA F2                   		movw	bc, r10
 621 0469 AD F0                   		movw	ax, r8
 622 046b 78 00 00                		movw	[bc], ax
 140:../src/r_cg_serial.c ****     STIF1 = 0U;    /* clear INTST1 interrupt flag */
 623                             		.loc 1 140 0
 624 046e C9 F0 E2 FF             		movw	r8, #-30
 625 0472 AD F0                   		movw	ax, r8
 626 0474 BD F4                   		movw	r12, ax
 627 0476 FA F4                   		movw	hl, r12
 628 0478 8B                      		mov	a, [hl]
 629 0479 9D F2                   		mov	r10, a
 630 047b 5A F2 FE                		and	r10, #-2
 631 047e AD F0                   		movw	ax, r8
 632 0480 DA F4                   		movw	bc, r12
 633 0482 8D F2                   		mov	a, r10
 634 0484 48 00 00                		mov	[bc], a
 141:../src/r_cg_serial.c ****     SRIF1 = 0U;    /* clear INTSR1 interrupt flag */
 635                             		.loc 1 141 0
 636 0487 C9 F0 E2 FF             		movw	r8, #-30
 637 048b AD F0                   		movw	ax, r8
 638 048d BD F4                   		movw	r12, ax
 639 048f FA F4                   		movw	hl, r12
 640 0491 8B                      		mov	a, [hl]
 641 0492 9D F2                   		mov	r10, a
 642 0494 5A F2 FD                		and	r10, #-3
 643 0497 AD F0                   		movw	ax, r8
 644 0499 DA F4                   		movw	bc, r12
 645 049b 8D F2                   		mov	a, r10
 646 049d 48 00 00                		mov	[bc], a
 142:../src/r_cg_serial.c ****    
 143:../src/r_cg_serial.c **** }
 647                             		.loc 1 143 0
 648 04a0 D7                      		ret
 649                             	.LFE3:
 651                             		.global	_R_UART1_Receive
 653                             	_R_UART1_Receive:
 654                             	.LFB4:
 144:../src/r_cg_serial.c **** 
 145:../src/r_cg_serial.c **** /**************************************************************************************************
 146:../src/r_cg_serial.c **** * Function Name: R_UART1_Receive
 147:../src/r_cg_serial.c **** * Description  : This function receives UART1 data.
 148:../src/r_cg_serial.c **** * Arguments    : rx_buf -
 149:../src/r_cg_serial.c **** *                    receive buffer pointer
 150:../src/r_cg_serial.c **** *                rx_num -
 151:../src/r_cg_serial.c **** *                    buffer size
 152:../src/r_cg_serial.c **** * Return Value : status -
 153:../src/r_cg_serial.c **** *                    MD_OK or MD_ARGERROR
 154:../src/r_cg_serial.c **** ***************************************************************************************************
 155:../src/r_cg_serial.c **** MD_STATUS R_UART1_Receive(uint8_t * const rx_buf, uint16_t rx_num)
 156:../src/r_cg_serial.c **** {
 655                             		.loc 1 156 0
 656                             		; start of function
 657                             		; locals: 2 bytes
 658 04a1 20 02                   		subw	sp, #2
 659                             	.LCFI2:
 157:../src/r_cg_serial.c ****     MD_STATUS status = MD_OK;
 660                             		.loc 1 157 0
 661 04a3 F6                      		clrw	ax
 662 04a4 B8 00                   		movw	[sp], ax
 158:../src/r_cg_serial.c **** 
 159:../src/r_cg_serial.c ****     if (rx_num < 1U)
 663                             		.loc 1 159 0
 664 04a6 A8 08                   		movw	ax, [sp+8]
 665 04a8 44 00 00                		cmpw	ax, #0
 666 04ab 61 E8                   		 skz
 667 04ad EC BA 04 00             		 br	!!.L6
 160:../src/r_cg_serial.c ****     {
 161:../src/r_cg_serial.c ****         status = MD_ARGERROR;
 668                             		.loc 1 161 0
 669 04b1 30 81 00                		movw	ax, #129
 670 04b4 B8 00                   		movw	[sp], ax
 671 04b6 EC CC 04 00             		br	!!.L7
 672                             	.L6:
 162:../src/r_cg_serial.c ****     }
 163:../src/r_cg_serial.c ****     else
 164:../src/r_cg_serial.c ****     {
 165:../src/r_cg_serial.c ****         g_uart1_rx_count = 0U;
 673                             		.loc 1 165 0
 674 04ba F6                      		clrw	ax
 675 04bb BF 00 00                		movw	!_g_uart1_rx_count, ax
 166:../src/r_cg_serial.c ****         g_uart1_rx_length = rx_num;
 676                             		.loc 1 166 0
 677 04be A8 08                   		movw	ax, [sp+8]
 678 04c0 BD F0                   		movw	r8, ax
 679 04c2 BF 00 00                		movw	!_g_uart1_rx_length, ax
 167:../src/r_cg_serial.c ****         gp_uart1_rx_address = rx_buf;
 680                             		.loc 1 167 0
 681 04c5 A8 06                   		movw	ax, [sp+6]
 682 04c7 BD F0                   		movw	r8, ax
 683 04c9 BF 00 00                		movw	!_gp_uart1_rx_address, ax
 684                             	.L7:
 168:../src/r_cg_serial.c ****     }
 169:../src/r_cg_serial.c **** 
 170:../src/r_cg_serial.c ****     return (status);
 685                             		.loc 1 170 0
 686 04cc A8 00                   		movw	ax, [sp]
 687 04ce BD F0                   		movw	r8, ax
 171:../src/r_cg_serial.c **** }
 688                             		.loc 1 171 0
 689 04d0 10 02                   		addw	sp, #2
 690 04d2 D7                      		ret
 691                             	.LFE4:
 693                             		.global	_R_UART1_Send
 695                             	_R_UART1_Send:
 696                             	.LFB5:
 172:../src/r_cg_serial.c **** 
 173:../src/r_cg_serial.c **** /**************************************************************************************************
 174:../src/r_cg_serial.c **** * Function Name: R_UART1_Send
 175:../src/r_cg_serial.c **** * Description  : This function sends UART1 data.
 176:../src/r_cg_serial.c **** * Arguments    : tx_buf -
 177:../src/r_cg_serial.c **** *                    transfer buffer pointer
 178:../src/r_cg_serial.c **** *                tx_num -
 179:../src/r_cg_serial.c **** *                    buffer size
 180:../src/r_cg_serial.c **** * Return Value : status -
 181:../src/r_cg_serial.c **** *                    MD_OK or MD_ARGERROR
 182:../src/r_cg_serial.c **** ***************************************************************************************************
 183:../src/r_cg_serial.c **** MD_STATUS R_UART1_Send(uint8_t * const tx_buf, uint16_t tx_num)
 184:../src/r_cg_serial.c **** {
 697                             		.loc 1 184 0
 698                             		; start of function
 699                             		; locals: 2 bytes
 700 04d3 20 02                   		subw	sp, #2
 701                             	.LCFI3:
 185:../src/r_cg_serial.c ****     MD_STATUS status = MD_OK;
 702                             		.loc 1 185 0
 703 04d5 F6                      		clrw	ax
 704 04d6 B8 00                   		movw	[sp], ax
 186:../src/r_cg_serial.c **** 
 187:../src/r_cg_serial.c ****     if (tx_num < 1U)
 705                             		.loc 1 187 0
 706 04d8 A8 08                   		movw	ax, [sp+8]
 707 04da 44 00 00                		cmpw	ax, #0
 708 04dd 61 E8                   		 skz
 709 04df EC EC 04 00             		 br	!!.L10
 188:../src/r_cg_serial.c ****     {
 189:../src/r_cg_serial.c ****         status = MD_ARGERROR;
 710                             		.loc 1 189 0
 711 04e3 30 81 00                		movw	ax, #129
 712 04e6 B8 00                   		movw	[sp], ax
 713 04e8 EC 5F 05 00             		br	!!.L11
 714                             	.L10:
 190:../src/r_cg_serial.c ****     }
 191:../src/r_cg_serial.c ****     else
 192:../src/r_cg_serial.c ****     {
 193:../src/r_cg_serial.c ****         gp_uart1_tx_address = tx_buf;
 715                             		.loc 1 193 0
 716 04ec A8 06                   		movw	ax, [sp+6]
 717 04ee BD F0                   		movw	r8, ax
 718 04f0 BF 00 00                		movw	!_gp_uart1_tx_address, ax
 194:../src/r_cg_serial.c ****         g_uart1_tx_count = tx_num;
 719                             		.loc 1 194 0
 720 04f3 A8 08                   		movw	ax, [sp+8]
 721 04f5 BD F0                   		movw	r8, ax
 722 04f7 BF 00 00                		movw	!_g_uart1_tx_count, ax
 195:../src/r_cg_serial.c ****         STMK1 = 1U;    /* disable INTST1 interrupt */
 723                             		.loc 1 195 0
 724 04fa C9 F0 E6 FF             		movw	r8, #-26
 725 04fe AD F0                   		movw	ax, r8
 726 0500 BD F4                   		movw	r12, ax
 727 0502 FA F4                   		movw	hl, r12
 728 0504 8B                      		mov	a, [hl]
 729 0505 9D F2                   		mov	r10, a
 730 0507 6A F2 01                		or	r10, #1
 731 050a AD F0                   		movw	ax, r8
 732 050c DA F4                   		movw	bc, r12
 733 050e 8D F2                   		mov	a, r10
 734 0510 48 00 00                		mov	[bc], a
 196:../src/r_cg_serial.c ****         TXD1 = *gp_uart1_tx_address;
 735                             		.loc 1 196 0
 736 0513 C9 F2 44 FF             		movw	r10, #-188
 737 0517 AF 00 00                		movw	ax, !_gp_uart1_tx_address
 738 051a BD F0                   		movw	r8, ax
 739 051c BD F4                   		movw	r12, ax
 740 051e FA F4                   		movw	hl, r12
 741 0520 8B                      		mov	a, [hl]
 742 0521 9D F0                   		mov	r8, a
 743 0523 AD F2                   		movw	ax, r10
 744 0525 BD F4                   		movw	r12, ax
 745 0527 DA F4                   		movw	bc, r12
 746 0529 8D F0                   		mov	a, r8
 747 052b 48 00 00                		mov	[bc], a
 197:../src/r_cg_serial.c ****         gp_uart1_tx_address++;
 748                             		.loc 1 197 0
 749 052e AF 00 00                		movw	ax, !_gp_uart1_tx_address
 750 0531 BD F0                   		movw	r8, ax
 751 0533 A6 F0                   		incw	r8
 752 0535 AD F0                   		movw	ax, r8
 753 0537 BF 00 00                		movw	!_gp_uart1_tx_address, ax
 198:../src/r_cg_serial.c ****         g_uart1_tx_count--;
 754                             		.loc 1 198 0
 755 053a AF 00 00                		movw	ax, !_g_uart1_tx_count
 756 053d BD F0                   		movw	r8, ax
 757 053f B6 F0                   		decw	r8
 758 0541 AD F0                   		movw	ax, r8
 759 0543 BF 00 00                		movw	!_g_uart1_tx_count, ax
 199:../src/r_cg_serial.c ****         STMK1 = 0U;    /* enable INTST1 interrupt */
 760                             		.loc 1 199 0
 761 0546 C9 F0 E6 FF             		movw	r8, #-26
 762 054a AD F0                   		movw	ax, r8
 763 054c BD F4                   		movw	r12, ax
 764 054e FA F4                   		movw	hl, r12
 765 0550 8B                      		mov	a, [hl]
 766 0551 9D F2                   		mov	r10, a
 767 0553 5A F2 FE                		and	r10, #-2
 768 0556 AD F0                   		movw	ax, r8
 769 0558 DA F4                   		movw	bc, r12
 770 055a 8D F2                   		mov	a, r10
 771 055c 48 00 00                		mov	[bc], a
 772                             	.L11:
 200:../src/r_cg_serial.c ****     }
 201:../src/r_cg_serial.c **** 
 202:../src/r_cg_serial.c ****     return (status);
 773                             		.loc 1 202 0
 774 055f A8 00                   		movw	ax, [sp]
 775 0561 BD F0                   		movw	r8, ax
 203:../src/r_cg_serial.c **** }
 776                             		.loc 1 203 0
 777 0563 10 02                   		addw	sp, #2
 778 0565 D7                      		ret
 779                             	.LFE5:
 863                             	.Letext0:
 864                             		.file 2 "../src/iodefine.h"
 865                             		.file 3 "../src/iodefine_ext.h"
 866                             		.file 4 "../src/r_cg_macrodriver.h"
 867                             		.file 5 "../src/globals.h"
