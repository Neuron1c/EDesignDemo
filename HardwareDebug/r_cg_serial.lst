   1                             	r8	=	0xffef0
   2                             	r16	=	0xffee8
   3                             	r24	=	0xffee0
   4                             	r9	=	0xffef1
   5                             	r17	=	0xffee9
   6                             	r25	=	0xffee1
   7                             	r10	=	0xffef2
   8                             	r18	=	0xffeea
   9                             	r26	=	0xffee2
  10                             	r11	=	0xffef3
  11                             	r19	=	0xffeeb
  12                             	r27	=	0xffee3
  13                             	r12	=	0xffef4
  14                             	r20	=	0xffeec
  15                             	r28	=	0xffee4
  16                             	r13	=	0xffef5
  17                             	r21	=	0xffeed
  18                             	r29	=	0xffee5
  19                             	r14	=	0xffef6
  20                             	r22	=	0xffeee
  21                             	r30	=	0xffee6
  22                             	r15	=	0xffef7
  23                             	r23	=	0xffeef
  24                             	r31	=	0xffee7
  25                             	.text
  26                             	.Ltext0:
  27                             		.comm	_record,50,1
  28                             		.comm	_mem,50,1
  29                             		.comm	_display_string,50,1
  30                             		.comm	_scrollFlag,1,1
  31                             		.comm	_tempFlag,1,1
  32                             		.comm	_scrollCount,2,2
  33                             		.comm	_timerFlag,2,2
  34                             		.comm	_count,2,2
  35                             		.comm	_gp_uart1_tx_address,2,2
  36                             		.comm	_g_uart1_tx_count,2,2
  37                             		.comm	_gp_uart1_rx_address,2,2
  38                             		.comm	_g_uart1_rx_count,2,2
  39                             		.comm	_g_uart1_rx_length,2,2
  40                             		.global	_R_SAU0_Create
  42                             	_R_SAU0_Create:
  43                             	.LFB0:
  44                             		.file 1 "../src/r_cg_serial.c"
   1:../src/r_cg_serial.c **** /**************************************************************************************************
   2:../src/r_cg_serial.c **** * DISCLAIMER
   3:../src/r_cg_serial.c **** * This software is supplied by Renesas Electronics Corporation and is only intended for use with Re
   4:../src/r_cg_serial.c **** * No other uses are authorized. This software is owned by Renesas Electronics Corporation and is pr
   5:../src/r_cg_serial.c **** * applicable laws, including copyright laws. 
   6:../src/r_cg_serial.c **** * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIESREGARDING THIS SOFTWARE, WHETHER
   7:../src/r_cg_serial.c **** * OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULA
   8:../src/r_cg_serial.c **** * NON-INFRINGEMENT.  ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED.TO THE MAXIMUM EXTENT PERMITTED N
   9:../src/r_cg_serial.c **** * LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES SHALL BE LIABLE 
  10:../src/r_cg_serial.c **** * INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS SOFTWARE, E
  11:../src/r_cg_serial.c **** * ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
  12:../src/r_cg_serial.c **** * Renesas reserves the right, without notice, to make changes to this software and to discontinue t
  13:../src/r_cg_serial.c **** * of this software. By using this software, you agree to the additional terms and conditions found 
  14:../src/r_cg_serial.c **** * following link:
  15:../src/r_cg_serial.c **** * http://www.renesas.com/disclaimer
  16:../src/r_cg_serial.c **** *
  17:../src/r_cg_serial.c **** * Copyright (C) 2011, 2015 Renesas Electronics Corporation. All rights reserved.
  18:../src/r_cg_serial.c **** ***************************************************************************************************
  19:../src/r_cg_serial.c **** 
  20:../src/r_cg_serial.c **** /**************************************************************************************************
  21:../src/r_cg_serial.c **** * File Name    : r_cg_serial.c
  22:../src/r_cg_serial.c **** * Version      : CodeGenerator for RL78/G13 V2.03.02.01 [15 May 2015]
  23:../src/r_cg_serial.c **** * Device(s)    : R5F100LE
  24:../src/r_cg_serial.c **** * Tool-Chain   : GCCRL78
  25:../src/r_cg_serial.c **** * Description  : This file implements device driver for Serial module.
  26:../src/r_cg_serial.c **** * Creation Date: 2017/04/19
  27:../src/r_cg_serial.c **** ***************************************************************************************************
  28:../src/r_cg_serial.c **** 
  29:../src/r_cg_serial.c **** /**************************************************************************************************
  30:../src/r_cg_serial.c **** Includes
  31:../src/r_cg_serial.c **** ***************************************************************************************************
  32:../src/r_cg_serial.c **** #include "r_cg_macrodriver.h"
  33:../src/r_cg_serial.c **** #include "r_cg_serial.h"
  34:../src/r_cg_serial.c **** /* Start user code for include. Do not edit comment generated here */
  35:../src/r_cg_serial.c **** /* End user code. Do not edit comment generated here */
  36:../src/r_cg_serial.c **** #include "r_cg_userdefine.h"
  37:../src/r_cg_serial.c **** 
  38:../src/r_cg_serial.c **** /**************************************************************************************************
  39:../src/r_cg_serial.c **** Global variables and functions
  40:../src/r_cg_serial.c **** ***************************************************************************************************
  41:../src/r_cg_serial.c **** volatile uint8_t * gp_uart1_tx_address;        /* uart1 transmit buffer address */
  42:../src/r_cg_serial.c **** volatile uint16_t  g_uart1_tx_count;           /* uart1 transmit data number */
  43:../src/r_cg_serial.c **** volatile uint8_t * gp_uart1_rx_address;        /* uart1 receive buffer address */
  44:../src/r_cg_serial.c **** volatile uint16_t  g_uart1_rx_count;           /* uart1 receive data number */
  45:../src/r_cg_serial.c **** volatile uint16_t  g_uart1_rx_length;          /* uart1 receive data length */
  46:../src/r_cg_serial.c **** /* Start user code for global. Do not edit comment generated here */
  47:../src/r_cg_serial.c **** /* End user code. Do not edit comment generated here */
  48:../src/r_cg_serial.c **** 
  49:../src/r_cg_serial.c **** /**************************************************************************************************
  50:../src/r_cg_serial.c **** * Function Name: R_SAU0_Create
  51:../src/r_cg_serial.c **** * Description  : This function initializes the SAU0 module.
  52:../src/r_cg_serial.c **** * Arguments    : None
  53:../src/r_cg_serial.c **** * Return Value : None
  54:../src/r_cg_serial.c **** ***************************************************************************************************
  55:../src/r_cg_serial.c **** void R_SAU0_Create(void)
  56:../src/r_cg_serial.c **** {
  45                             		.loc 1 56 0
  57:../src/r_cg_serial.c ****     SAU0EN = 1U;    /* supply SAU0 clock */
  46                             		.loc 1 57 0
  47 0000 C9 F0 F0 00             		movw	r8, #240
  48 0004 AD F0                   		movw	ax, r8
  49 0006 BD F4                   		movw	r12, ax
  50 0008 FA F4                   		movw	hl, r12
  51 000a 8B                      		mov	a, [hl]
  52 000b 9D F2                   		mov	r10, a
  53 000d 6A F2 04                		or	r10, #4
  54 0010 AD F0                   		movw	ax, r8
  55 0012 DA F4                   		movw	bc, r12
  56 0014 8D F2                   		mov	a, r10
  57 0016 48 00 00                		mov	[bc], a
  58:../src/r_cg_serial.c ****     NOP();
  58                             		.loc 1 58 0
  59                             	 ; 58 "../src/r_cg_serial.c" 1
  60 0019 00                      		nop
  61                             	 ; 0 "" 2
  59:../src/r_cg_serial.c ****     NOP();
  62                             		.loc 1 59 0
  63                             	 ; 59 "../src/r_cg_serial.c" 1
  64 001a 00                      		nop
  65                             	 ; 0 "" 2
  60:../src/r_cg_serial.c ****     NOP();
  66                             		.loc 1 60 0
  67                             	 ; 60 "../src/r_cg_serial.c" 1
  68 001b 00                      		nop
  69                             	 ; 0 "" 2
  61:../src/r_cg_serial.c ****     NOP();
  70                             		.loc 1 61 0
  71                             	 ; 61 "../src/r_cg_serial.c" 1
  72 001c 00                      		nop
  73                             	 ; 0 "" 2
  62:../src/r_cg_serial.c ****     SPS0 = _0001_SAU_CK00_FCLK_1 | _0010_SAU_CK01_FCLK_1;
  74                             		.loc 1 62 0
  75 001d C9 F0 26 01             		movw	r8, #294
  76 0021 AD F0                   		movw	ax, r8
  77 0023 BD F2                   		movw	r10, ax
  78 0025 DA F2                   		movw	bc, r10
  79 0027 30 11 00                		movw	ax, #17
  80 002a 78 00 00                		movw	[bc], ax
  63:../src/r_cg_serial.c ****     R_UART1_Create();
  81                             		.loc 1 63 0
  82 002d FC 00 00 00             		call	!!%code(_R_UART1_Create)
  64:../src/r_cg_serial.c **** }
  83                             		.loc 1 64 0
  84 0031 D7                      		ret
  85                             	.LFE0:
  87                             		.global	_R_UART1_Create
  89                             	_R_UART1_Create:
  90                             	.LFB1:
  65:../src/r_cg_serial.c **** 
  66:../src/r_cg_serial.c **** /**************************************************************************************************
  67:../src/r_cg_serial.c **** * Function Name: R_UART1_Create
  68:../src/r_cg_serial.c **** * Description  : This function initializes the UART1 module.
  69:../src/r_cg_serial.c **** * Arguments    : None
  70:../src/r_cg_serial.c **** * Return Value : None
  71:../src/r_cg_serial.c **** ***************************************************************************************************
  72:../src/r_cg_serial.c **** void R_UART1_Create(void)
  73:../src/r_cg_serial.c **** {
  91                             		.loc 1 73 0
  92                             		; start of function
  93                             		; push 2: r16
  94 0032 61 EF                   		sel	rb2
  95 0034 C1                      		push	ax ; r16
  96                             	.LCFI0:
  97 0035 61 CF                   		sel	rb0
  74:../src/r_cg_serial.c ****     ST0 |= _0008_SAU_CH3_STOP_TRG_ON | _0004_SAU_CH2_STOP_TRG_ON;    /* disable UART1 receive and t
  98                             		.loc 1 74 0
  99 0037 C9 E8 24 01             		movw	r16, #292
 100 003b C9 F6 24 01             		movw	r14, #292
 101 003f AD F6                   		movw	ax, r14
 102 0041 BD F0                   		movw	r8, ax
 103 0043 FA F0                   		movw	hl, r8
 104 0045 AB                      		movw	ax, [hl]
 105 0046 BD F6                   		movw	r14, ax
 106 0048 8D F6                   		mov	a, r14
 107 004a 6C 0C                   		or	a, #12
 108 004c 9D F4                   		mov	r12, a
 109 004e 8D F7                   		mov	a, r15
 110 0050 6C 00                   		or	a, #0
 111 0052 9D F5                   		mov	r13, a
 112 0054 DA E8                   		movw	bc, r16
 113 0056 AD F4                   		movw	ax, r12
 114 0058 78 00 00                		movw	[bc], ax
  75:../src/r_cg_serial.c ****     STMK1 = 1U;    /* disable INTST1 interrupt */
 115                             		.loc 1 75 0
 116 005b C9 F4 E6 FF             		movw	r12, #-26
 117 005f AD F4                   		movw	ax, r12
 118 0061 BD F2                   		movw	r10, ax
 119 0063 FA F2                   		movw	hl, r10
 120 0065 8B                      		mov	a, [hl]
 121 0066 9D F6                   		mov	r14, a
 122 0068 6A F6 01                		or	r14, #1
 123 006b AD F4                   		movw	ax, r12
 124 006d BD F0                   		movw	r8, ax
 125 006f DA F0                   		movw	bc, r8
 126 0071 8D F6                   		mov	a, r14
 127 0073 48 00 00                		mov	[bc], a
  76:../src/r_cg_serial.c ****     STIF1 = 0U;    /* clear INTST1 interrupt flag */
 128                             		.loc 1 76 0
 129 0076 C9 F4 E2 FF             		movw	r12, #-30
 130 007a AD F4                   		movw	ax, r12
 131 007c BD F2                   		movw	r10, ax
 132 007e FA F2                   		movw	hl, r10
 133 0080 8B                      		mov	a, [hl]
 134 0081 9D F6                   		mov	r14, a
 135 0083 5A F6 FE                		and	r14, #-2
 136 0086 AD F4                   		movw	ax, r12
 137 0088 BD F0                   		movw	r8, ax
 138 008a DA F0                   		movw	bc, r8
 139 008c 8D F6                   		mov	a, r14
 140 008e 48 00 00                		mov	[bc], a
  77:../src/r_cg_serial.c ****     SRMK1 = 1U;    /* disable INTSR1 interrupt */
 141                             		.loc 1 77 0
 142 0091 C9 F4 E6 FF             		movw	r12, #-26
 143 0095 AD F4                   		movw	ax, r12
 144 0097 BD F2                   		movw	r10, ax
 145 0099 FA F2                   		movw	hl, r10
 146 009b 8B                      		mov	a, [hl]
 147 009c 9D F6                   		mov	r14, a
 148 009e 6A F6 02                		or	r14, #2
 149 00a1 AD F4                   		movw	ax, r12
 150 00a3 BD F0                   		movw	r8, ax
 151 00a5 DA F0                   		movw	bc, r8
 152 00a7 8D F6                   		mov	a, r14
 153 00a9 48 00 00                		mov	[bc], a
  78:../src/r_cg_serial.c ****     SRIF1 = 0U;    /* clear INTSR1 interrupt flag */
 154                             		.loc 1 78 0
 155 00ac C9 F4 E2 FF             		movw	r12, #-30
 156 00b0 AD F4                   		movw	ax, r12
 157 00b2 BD F2                   		movw	r10, ax
 158 00b4 FA F2                   		movw	hl, r10
 159 00b6 8B                      		mov	a, [hl]
 160 00b7 9D F6                   		mov	r14, a
 161 00b9 5A F6 FD                		and	r14, #-3
 162 00bc AD F4                   		movw	ax, r12
 163 00be BD F0                   		movw	r8, ax
 164 00c0 DA F0                   		movw	bc, r8
 165 00c2 8D F6                   		mov	a, r14
 166 00c4 48 00 00                		mov	[bc], a
  79:../src/r_cg_serial.c ****     SREMK1 = 1U;   /* disable INTSRE1 interrupt */
 167                             		.loc 1 79 0
 168 00c7 C9 F4 E6 FF             		movw	r12, #-26
 169 00cb AD F4                   		movw	ax, r12
 170 00cd BD F2                   		movw	r10, ax
 171 00cf FA F2                   		movw	hl, r10
 172 00d1 8B                      		mov	a, [hl]
 173 00d2 9D F6                   		mov	r14, a
 174 00d4 6A F6 04                		or	r14, #4
 175 00d7 AD F4                   		movw	ax, r12
 176 00d9 BD F0                   		movw	r8, ax
 177 00db DA F0                   		movw	bc, r8
 178 00dd 8D F6                   		mov	a, r14
 179 00df 48 00 00                		mov	[bc], a
  80:../src/r_cg_serial.c ****     SREIF1 = 0U;   /* clear INTSRE1 interrupt flag */
 180                             		.loc 1 80 0
 181 00e2 C9 F4 E2 FF             		movw	r12, #-30
 182 00e6 AD F4                   		movw	ax, r12
 183 00e8 BD F2                   		movw	r10, ax
 184 00ea FA F2                   		movw	hl, r10
 185 00ec 8B                      		mov	a, [hl]
 186 00ed 9D F6                   		mov	r14, a
 187 00ef 5A F6 FB                		and	r14, #-5
 188 00f2 AD F4                   		movw	ax, r12
 189 00f4 BD F0                   		movw	r8, ax
 190 00f6 DA F0                   		movw	bc, r8
 191 00f8 8D F6                   		mov	a, r14
 192 00fa 48 00 00                		mov	[bc], a
  81:../src/r_cg_serial.c ****     /* Set INTST1 low priority */
  82:../src/r_cg_serial.c ****     STPR11 = 1U;
 193                             		.loc 1 82 0
 194 00fd C9 F4 EE FF             		movw	r12, #-18
 195 0101 AD F4                   		movw	ax, r12
 196 0103 BD F2                   		movw	r10, ax
 197 0105 FA F2                   		movw	hl, r10
 198 0107 8B                      		mov	a, [hl]
 199 0108 9D F6                   		mov	r14, a
 200 010a 6A F6 01                		or	r14, #1
 201 010d AD F4                   		movw	ax, r12
 202 010f BD F0                   		movw	r8, ax
 203 0111 DA F0                   		movw	bc, r8
 204 0113 8D F6                   		mov	a, r14
 205 0115 48 00 00                		mov	[bc], a
  83:../src/r_cg_serial.c ****     STPR01 = 1U;
 206                             		.loc 1 83 0
 207 0118 C9 F4 EA FF             		movw	r12, #-22
 208 011c AD F4                   		movw	ax, r12
 209 011e BD F2                   		movw	r10, ax
 210 0120 FA F2                   		movw	hl, r10
 211 0122 8B                      		mov	a, [hl]
 212 0123 9D F6                   		mov	r14, a
 213 0125 6A F6 01                		or	r14, #1
 214 0128 AD F4                   		movw	ax, r12
 215 012a BD F0                   		movw	r8, ax
 216 012c DA F0                   		movw	bc, r8
 217 012e 8D F6                   		mov	a, r14
 218 0130 48 00 00                		mov	[bc], a
  84:../src/r_cg_serial.c ****     /* Set INTSR1 low priority */
  85:../src/r_cg_serial.c ****     SRPR11 = 1U;
 219                             		.loc 1 85 0
 220 0133 C9 F4 EE FF             		movw	r12, #-18
 221 0137 AD F4                   		movw	ax, r12
 222 0139 BD F2                   		movw	r10, ax
 223 013b FA F2                   		movw	hl, r10
 224 013d 8B                      		mov	a, [hl]
 225 013e 9D F6                   		mov	r14, a
 226 0140 6A F6 02                		or	r14, #2
 227 0143 AD F4                   		movw	ax, r12
 228 0145 BD F0                   		movw	r8, ax
 229 0147 DA F0                   		movw	bc, r8
 230 0149 8D F6                   		mov	a, r14
 231 014b 48 00 00                		mov	[bc], a
  86:../src/r_cg_serial.c ****     SRPR01 = 1U;
 232                             		.loc 1 86 0
 233 014e C9 F4 EA FF             		movw	r12, #-22
 234 0152 AD F4                   		movw	ax, r12
 235 0154 BD F2                   		movw	r10, ax
 236 0156 FA F2                   		movw	hl, r10
 237 0158 8B                      		mov	a, [hl]
 238 0159 9D F6                   		mov	r14, a
 239 015b 6A F6 02                		or	r14, #2
 240 015e AD F4                   		movw	ax, r12
 241 0160 BD F0                   		movw	r8, ax
 242 0162 DA F0                   		movw	bc, r8
 243 0164 8D F6                   		mov	a, r14
 244 0166 48 00 00                		mov	[bc], a
  87:../src/r_cg_serial.c ****     SMR02 = _0020_SAU_SMRMN_INITIALVALUE | _0000_SAU_CLOCK_SELECT_CK00 | _0000_SAU_TRIGGER_SOFTWARE
 245                             		.loc 1 87 0
 246 0169 C9 F4 14 01             		movw	r12, #276
 247 016d AD F4                   		movw	ax, r12
 248 016f BD F2                   		movw	r10, ax
 249 0171 DA F2                   		movw	bc, r10
 250 0173 30 22 00                		movw	ax, #34
 251 0176 78 00 00                		movw	[bc], ax
  88:../src/r_cg_serial.c ****             _0002_SAU_MODE_UART | _0000_SAU_TRANSFER_END;
  89:../src/r_cg_serial.c ****     SCR02 = _8000_SAU_TRANSMISSION | _0000_SAU_INTSRE_MASK | _0000_SAU_PARITY_NONE | _0080_SAU_LSB 
 252                             		.loc 1 89 0
 253 0179 C9 F4 1C 01             		movw	r12, #284
 254 017d AD F4                   		movw	ax, r12
 255 017f BD F0                   		movw	r8, ax
 256 0181 DA F0                   		movw	bc, r8
 257 0183 30 97 80                		movw	ax, #-32617
 258 0186 78 00 00                		movw	[bc], ax
  90:../src/r_cg_serial.c ****             _0007_SAU_LENGTH_8;
  91:../src/r_cg_serial.c ****     SDR02 = _CE00_UART1_TRANSMIT_DIVISOR;
 259                             		.loc 1 91 0
 260 0189 C9 F4 44 FF             		movw	r12, #-188
 261 018d AD F4                   		movw	ax, r12
 262 018f BD F2                   		movw	r10, ax
 263 0191 DA F2                   		movw	bc, r10
 264 0193 30 00 CE                		movw	ax, #-12800
 265 0196 78 00 00                		movw	[bc], ax
  92:../src/r_cg_serial.c ****     NFEN0 |= _04_SAU_RXD1_FILTER_ON;
 266                             		.loc 1 92 0
 267 0199 C9 F6 70 00             		movw	r14, #112
 268 019d C9 F4 70 00             		movw	r12, #112
 269 01a1 AD F4                   		movw	ax, r12
 270 01a3 BD F0                   		movw	r8, ax
 271 01a5 FA F0                   		movw	hl, r8
 272 01a7 8B                      		mov	a, [hl]
 273 01a8 9D F4                   		mov	r12, a
 274 01aa 6A F4 04                		or	r12, #4
 275 01ad AD F6                   		movw	ax, r14
 276 01af BD F2                   		movw	r10, ax
 277 01b1 DA F2                   		movw	bc, r10
 278 01b3 8D F4                   		mov	a, r12
 279 01b5 48 00 00                		mov	[bc], a
  93:../src/r_cg_serial.c ****     SIR03 = _0004_SAU_SIRMN_FECTMN | _0002_SAU_SIRMN_PECTMN | _0001_SAU_SIRMN_OVCTMN;    /* clear e
 280                             		.loc 1 93 0
 281 01b8 C9 F4 0E 01             		movw	r12, #270
 282 01bc AD F4                   		movw	ax, r12
 283 01be BD F0                   		movw	r8, ax
 284 01c0 DA F0                   		movw	bc, r8
 285 01c2 30 07 00                		movw	ax, #7
 286 01c5 78 00 00                		movw	[bc], ax
  94:../src/r_cg_serial.c ****     SMR03 = _0020_SAU_SMRMN_INITIALVALUE | _0000_SAU_CLOCK_SELECT_CK00 | _0100_SAU_TRIGGER_RXD | _0
 287                             		.loc 1 94 0
 288 01c8 C9 F4 16 01             		movw	r12, #278
 289 01cc AD F4                   		movw	ax, r12
 290 01ce BD F2                   		movw	r10, ax
 291 01d0 DA F2                   		movw	bc, r10
 292 01d2 30 22 01                		movw	ax, #290
 293 01d5 78 00 00                		movw	[bc], ax
  95:../src/r_cg_serial.c ****             _0002_SAU_MODE_UART | _0000_SAU_TRANSFER_END;
  96:../src/r_cg_serial.c ****     SCR03 = _4000_SAU_RECEPTION | _0000_SAU_INTSRE_MASK | _0000_SAU_PARITY_NONE | _0080_SAU_LSB | _
 294                             		.loc 1 96 0
 295 01d8 C9 F4 1E 01             		movw	r12, #286
 296 01dc AD F4                   		movw	ax, r12
 297 01de BD F0                   		movw	r8, ax
 298 01e0 DA F0                   		movw	bc, r8
 299 01e2 30 97 40                		movw	ax, #16535
 300 01e5 78 00 00                		movw	[bc], ax
  97:../src/r_cg_serial.c ****             _0007_SAU_LENGTH_8;
  98:../src/r_cg_serial.c ****     SDR03 = _CE00_UART1_RECEIVE_DIVISOR;
 301                             		.loc 1 98 0
 302 01e8 C9 F4 46 FF             		movw	r12, #-186
 303 01ec AD F4                   		movw	ax, r12
 304 01ee BD F2                   		movw	r10, ax
 305 01f0 DA F2                   		movw	bc, r10
 306 01f2 30 00 CE                		movw	ax, #-12800
 307 01f5 78 00 00                		movw	[bc], ax
  99:../src/r_cg_serial.c ****     SO0 |= _0004_SAU_CH2_DATA_OUTPUT_1;
 308                             		.loc 1 99 0
 309 01f8 C9 F6 28 01             		movw	r14, #296
 310 01fc C9 F4 28 01             		movw	r12, #296
 311 0200 AD F4                   		movw	ax, r12
 312 0202 BD F0                   		movw	r8, ax
 313 0204 FA F0                   		movw	hl, r8
 314 0206 AB                      		movw	ax, [hl]
 315 0207 BD F4                   		movw	r12, ax
 316 0209 8D F4                   		mov	a, r12
 317 020b 6C 04                   		or	a, #4
 318 020d 9D F2                   		mov	r10, a
 319 020f 8D F5                   		mov	a, r13
 320 0211 6C 00                   		or	a, #0
 321 0213 9D F3                   		mov	r11, a
 322 0215 AD F6                   		movw	ax, r14
 323 0217 BD F4                   		movw	r12, ax
 324 0219 DA F4                   		movw	bc, r12
 325 021b AD F2                   		movw	ax, r10
 326 021d 78 00 00                		movw	[bc], ax
 100:../src/r_cg_serial.c ****     SOL0 |= _0000_SAU_CHANNEL2_NORMAL;    /* output level normal */
 327                             		.loc 1 100 0
 328 0220 C9 F4 34 01             		movw	r12, #308
 329 0224 C9 F2 34 01             		movw	r10, #308
 330 0228 AD F2                   		movw	ax, r10
 331 022a BD F0                   		movw	r8, ax
 332 022c FA F0                   		movw	hl, r8
 333 022e AB                      		movw	ax, [hl]
 334 022f BD F2                   		movw	r10, ax
 335 0231 AD F4                   		movw	ax, r12
 336 0233 BD F0                   		movw	r8, ax
 337 0235 DA F0                   		movw	bc, r8
 338 0237 AD F2                   		movw	ax, r10
 339 0239 78 00 00                		movw	[bc], ax
 101:../src/r_cg_serial.c ****     SOE0 |= _0004_SAU_CH2_OUTPUT_ENABLE;    /* enable UART1 output */
 340                             		.loc 1 101 0
 341 023c C9 F4 2A 01             		movw	r12, #298
 342 0240 C9 F2 2A 01             		movw	r10, #298
 343 0244 AD F2                   		movw	ax, r10
 344 0246 BD F0                   		movw	r8, ax
 345 0248 FA F0                   		movw	hl, r8
 346 024a AB                      		movw	ax, [hl]
 347 024b BD F2                   		movw	r10, ax
 348 024d 8D F2                   		mov	a, r10
 349 024f 6C 04                   		or	a, #4
 350 0251 9D F0                   		mov	r8, a
 351 0253 8D F3                   		mov	a, r11
 352 0255 6C 00                   		or	a, #0
 353 0257 9D F1                   		mov	r9, a
 354 0259 AD F4                   		movw	ax, r12
 355 025b BD F2                   		movw	r10, ax
 356 025d DA F2                   		movw	bc, r10
 357 025f AD F0                   		movw	ax, r8
 358 0261 78 00 00                		movw	[bc], ax
 102:../src/r_cg_serial.c ****     /* Set RxD1 pin */
 103:../src/r_cg_serial.c ****     PMC0 &= 0xF7U;
 359                             		.loc 1 103 0
 360 0264 C9 F2 60 00             		movw	r10, #96
 361 0268 C9 F0 60 00             		movw	r8, #96
 362 026c AD F0                   		movw	ax, r8
 363 026e BD F4                   		movw	r12, ax
 364 0270 FA F4                   		movw	hl, r12
 365 0272 8B                      		mov	a, [hl]
 366 0273 9D F0                   		mov	r8, a
 367 0275 5A F0 F7                		and	r8, #-9
 368 0278 AD F2                   		movw	ax, r10
 369 027a BD F4                   		movw	r12, ax
 370 027c DA F4                   		movw	bc, r12
 371 027e 8D F0                   		mov	a, r8
 372 0280 48 00 00                		mov	[bc], a
 104:../src/r_cg_serial.c ****     PM0 |= 0x08U;
 373                             		.loc 1 104 0
 374 0283 C9 F2 20 FF             		movw	r10, #-224
 375 0287 C9 F0 20 FF             		movw	r8, #-224
 376 028b AD F0                   		movw	ax, r8
 377 028d BD F4                   		movw	r12, ax
 378 028f FA F4                   		movw	hl, r12
 379 0291 8B                      		mov	a, [hl]
 380 0292 9D F0                   		mov	r8, a
 381 0294 6A F0 08                		or	r8, #8
 382 0297 AD F2                   		movw	ax, r10
 383 0299 BD F4                   		movw	r12, ax
 384 029b DA F4                   		movw	bc, r12
 385 029d 8D F0                   		mov	a, r8
 386 029f 48 00 00                		mov	[bc], a
 105:../src/r_cg_serial.c ****     /* Set TxD1 pin */
 106:../src/r_cg_serial.c ****     PMC0 &= 0xFBU;
 387                             		.loc 1 106 0
 388 02a2 C9 F2 60 00             		movw	r10, #96
 389 02a6 C9 F0 60 00             		movw	r8, #96
 390 02aa AD F0                   		movw	ax, r8
 391 02ac BD F4                   		movw	r12, ax
 392 02ae FA F4                   		movw	hl, r12
 393 02b0 8B                      		mov	a, [hl]
 394 02b1 9D F0                   		mov	r8, a
 395 02b3 5A F0 FB                		and	r8, #-5
 396 02b6 AD F2                   		movw	ax, r10
 397 02b8 BD F4                   		movw	r12, ax
 398 02ba DA F4                   		movw	bc, r12
 399 02bc 8D F0                   		mov	a, r8
 400 02be 48 00 00                		mov	[bc], a
 107:../src/r_cg_serial.c ****     P0 |= 0x04U;
 401                             		.loc 1 107 0
 402 02c1 C9 F2 00 FF             		movw	r10, #-256
 403 02c5 C9 F0 00 FF             		movw	r8, #-256
 404 02c9 AD F0                   		movw	ax, r8
 405 02cb BD F4                   		movw	r12, ax
 406 02cd FA F4                   		movw	hl, r12
 407 02cf 8B                      		mov	a, [hl]
 408 02d0 9D F0                   		mov	r8, a
 409 02d2 6A F0 04                		or	r8, #4
 410 02d5 AD F2                   		movw	ax, r10
 411 02d7 BD F4                   		movw	r12, ax
 412 02d9 DA F4                   		movw	bc, r12
 413 02db 8D F0                   		mov	a, r8
 414 02dd 48 00 00                		mov	[bc], a
 108:../src/r_cg_serial.c ****     PM0 &= 0xFBU;
 415                             		.loc 1 108 0
 416 02e0 C9 F2 20 FF             		movw	r10, #-224
 417 02e4 C9 F0 20 FF             		movw	r8, #-224
 418 02e8 AD F0                   		movw	ax, r8
 419 02ea BD F4                   		movw	r12, ax
 420 02ec FA F4                   		movw	hl, r12
 421 02ee 8B                      		mov	a, [hl]
 422 02ef 9D F0                   		mov	r8, a
 423 02f1 5A F0 FB                		and	r8, #-5
 424 02f4 AD F2                   		movw	ax, r10
 425 02f6 BD F4                   		movw	r12, ax
 426 02f8 DA F4                   		movw	bc, r12
 427 02fa 8D F0                   		mov	a, r8
 428 02fc 48 00 00                		mov	[bc], a
 109:../src/r_cg_serial.c **** }
 429                             		.loc 1 109 0
 430 02ff 61 EF                   		sel	rb2
 431 0301 C0                      		pop	ax ; r16
 432 0302 61 CF                   		sel	rb0
 433 0304 D7                      		ret
 434                             	.LFE1:
 436                             		.global	_R_UART1_Start
 438                             	_R_UART1_Start:
 439                             	.LFB2:
 110:../src/r_cg_serial.c **** 
 111:../src/r_cg_serial.c **** /**************************************************************************************************
 112:../src/r_cg_serial.c **** * Function Name: R_UART1_Start
 113:../src/r_cg_serial.c **** * Description  : This function starts the UART1 module operation.
 114:../src/r_cg_serial.c **** * Arguments    : None
 115:../src/r_cg_serial.c **** * Return Value : None
 116:../src/r_cg_serial.c **** ***************************************************************************************************
 117:../src/r_cg_serial.c **** void R_UART1_Start(void)
 118:../src/r_cg_serial.c **** {
 440                             		.loc 1 118 0
 441                             		; start of function
 442                             		; push 2: r16
 443 0305 61 EF                   		sel	rb2
 444 0307 C1                      		push	ax ; r16
 445                             	.LCFI1:
 446 0308 61 CF                   		sel	rb0
 119:../src/r_cg_serial.c ****     SO0 |= _0004_SAU_CH2_DATA_OUTPUT_1;    /* output level normal */
 447                             		.loc 1 119 0
 448 030a C9 E8 28 01             		movw	r16, #296
 449 030e C9 F6 28 01             		movw	r14, #296
 450 0312 AD F6                   		movw	ax, r14
 451 0314 BD F0                   		movw	r8, ax
 452 0316 FA F0                   		movw	hl, r8
 453 0318 AB                      		movw	ax, [hl]
 454 0319 BD F6                   		movw	r14, ax
 455 031b 8D F6                   		mov	a, r14
 456 031d 6C 04                   		or	a, #4
 457 031f 9D F4                   		mov	r12, a
 458 0321 8D F7                   		mov	a, r15
 459 0323 6C 00                   		or	a, #0
 460 0325 9D F5                   		mov	r13, a
 461 0327 DA E8                   		movw	bc, r16
 462 0329 AD F4                   		movw	ax, r12
 463 032b 78 00 00                		movw	[bc], ax
 120:../src/r_cg_serial.c ****     SOE0 |= _0004_SAU_CH2_OUTPUT_ENABLE;    /* enable UART1 output */
 464                             		.loc 1 120 0
 465 032e C9 F6 2A 01             		movw	r14, #298
 466 0332 C9 F4 2A 01             		movw	r12, #298
 467 0336 AD F4                   		movw	ax, r12
 468 0338 BD F2                   		movw	r10, ax
 469 033a FA F2                   		movw	hl, r10
 470 033c AB                      		movw	ax, [hl]
 471 033d BD F4                   		movw	r12, ax
 472 033f 8D F4                   		mov	a, r12
 473 0341 6C 04                   		or	a, #4
 474 0343 9D F2                   		mov	r10, a
 475 0345 8D F5                   		mov	a, r13
 476 0347 6C 00                   		or	a, #0
 477 0349 9D F3                   		mov	r11, a
 478 034b AD F6                   		movw	ax, r14
 479 034d BD F4                   		movw	r12, ax
 480 034f DA F4                   		movw	bc, r12
 481 0351 AD F2                   		movw	ax, r10
 482 0353 78 00 00                		movw	[bc], ax
 121:../src/r_cg_serial.c ****     SS0 |= _0008_SAU_CH3_START_TRG_ON | _0004_SAU_CH2_START_TRG_ON;    /* enable UART1 receive and 
 483                             		.loc 1 121 0
 484 0356 C9 F4 22 01             		movw	r12, #290
 485 035a C9 F2 22 01             		movw	r10, #290
 486 035e AD F2                   		movw	ax, r10
 487 0360 BD F0                   		movw	r8, ax
 488 0362 FA F0                   		movw	hl, r8
 489 0364 AB                      		movw	ax, [hl]
 490 0365 BD F2                   		movw	r10, ax
 491 0367 8D F2                   		mov	a, r10
 492 0369 6C 0C                   		or	a, #12
 493 036b 9D F0                   		mov	r8, a
 494 036d 8D F3                   		mov	a, r11
 495 036f 6C 00                   		or	a, #0
 496 0371 9D F1                   		mov	r9, a
 497 0373 AD F4                   		movw	ax, r12
 498 0375 BD F2                   		movw	r10, ax
 499 0377 DA F2                   		movw	bc, r10
 500 0379 AD F0                   		movw	ax, r8
 501 037b 78 00 00                		movw	[bc], ax
 122:../src/r_cg_serial.c ****     STIF1 = 0U;    /* clear INTST1 interrupt flag */
 502                             		.loc 1 122 0
 503 037e C9 F0 E2 FF             		movw	r8, #-30
 504 0382 AD F0                   		movw	ax, r8
 505 0384 BD F4                   		movw	r12, ax
 506 0386 FA F4                   		movw	hl, r12
 507 0388 8B                      		mov	a, [hl]
 508 0389 9D F2                   		mov	r10, a
 509 038b 5A F2 FE                		and	r10, #-2
 510 038e AD F0                   		movw	ax, r8
 511 0390 DA F4                   		movw	bc, r12
 512 0392 8D F2                   		mov	a, r10
 513 0394 48 00 00                		mov	[bc], a
 123:../src/r_cg_serial.c ****     SRIF1 = 0U;    /* clear INTSR1 interrupt flag */
 514                             		.loc 1 123 0
 515 0397 C9 F0 E2 FF             		movw	r8, #-30
 516 039b AD F0                   		movw	ax, r8
 517 039d BD F4                   		movw	r12, ax
 518 039f FA F4                   		movw	hl, r12
 519 03a1 8B                      		mov	a, [hl]
 520 03a2 9D F2                   		mov	r10, a
 521 03a4 5A F2 FD                		and	r10, #-3
 522 03a7 AD F0                   		movw	ax, r8
 523 03a9 DA F4                   		movw	bc, r12
 524 03ab 8D F2                   		mov	a, r10
 525 03ad 48 00 00                		mov	[bc], a
 124:../src/r_cg_serial.c ****     STMK1 = 0U;    /* enable INTST1 interrupt */
 526                             		.loc 1 124 0
 527 03b0 C9 F0 E6 FF             		movw	r8, #-26
 528 03b4 AD F0                   		movw	ax, r8
 529 03b6 BD F4                   		movw	r12, ax
 530 03b8 FA F4                   		movw	hl, r12
 531 03ba 8B                      		mov	a, [hl]
 532 03bb 9D F2                   		mov	r10, a
 533 03bd 5A F2 FE                		and	r10, #-2
 534 03c0 AD F0                   		movw	ax, r8
 535 03c2 DA F4                   		movw	bc, r12
 536 03c4 8D F2                   		mov	a, r10
 537 03c6 48 00 00                		mov	[bc], a
 125:../src/r_cg_serial.c ****     SRMK1 = 0U;    /* enable INTSR1 interrupt */
 538                             		.loc 1 125 0
 539 03c9 C9 F0 E6 FF             		movw	r8, #-26
 540 03cd AD F0                   		movw	ax, r8
 541 03cf BD F4                   		movw	r12, ax
 542 03d1 FA F4                   		movw	hl, r12
 543 03d3 8B                      		mov	a, [hl]
 544 03d4 9D F2                   		mov	r10, a
 545 03d6 5A F2 FD                		and	r10, #-3
 546 03d9 AD F0                   		movw	ax, r8
 547 03db DA F4                   		movw	bc, r12
 548 03dd 8D F2                   		mov	a, r10
 549 03df 48 00 00                		mov	[bc], a
 126:../src/r_cg_serial.c **** }
 550                             		.loc 1 126 0
 551 03e2 61 EF                   		sel	rb2
 552 03e4 C0                      		pop	ax ; r16
 553 03e5 61 CF                   		sel	rb0
 554 03e7 D7                      		ret
 555                             	.LFE2:
 557                             		.global	_R_UART1_Stop
 559                             	_R_UART1_Stop:
 560                             	.LFB3:
 127:../src/r_cg_serial.c **** 
 128:../src/r_cg_serial.c **** /**************************************************************************************************
 129:../src/r_cg_serial.c **** * Function Name: R_UART1_Stop
 130:../src/r_cg_serial.c **** * Description  : This function stops the UART1 module operation.
 131:../src/r_cg_serial.c **** * Arguments    : None
 132:../src/r_cg_serial.c **** * Return Value : None
 133:../src/r_cg_serial.c **** ***************************************************************************************************
 134:../src/r_cg_serial.c **** void R_UART1_Stop(void)
 135:../src/r_cg_serial.c **** {
 561                             		.loc 1 135 0
 136:../src/r_cg_serial.c ****     STMK1 = 1U;    /* disable INTST1 interrupt */
 562                             		.loc 1 136 0
 563 03e8 C9 F4 E6 FF             		movw	r12, #-26
 564 03ec AD F4                   		movw	ax, r12
 565 03ee BD F0                   		movw	r8, ax
 566 03f0 FA F0                   		movw	hl, r8
 567 03f2 8B                      		mov	a, [hl]
 568 03f3 9D F6                   		mov	r14, a
 569 03f5 6A F6 01                		or	r14, #1
 570 03f8 AD F4                   		movw	ax, r12
 571 03fa BD F2                   		movw	r10, ax
 572 03fc DA F2                   		movw	bc, r10
 573 03fe 8D F6                   		mov	a, r14
 574 0400 48 00 00                		mov	[bc], a
 137:../src/r_cg_serial.c ****     SRMK1 = 1U;    /* disable INTSR1 interrupt */
 575                             		.loc 1 137 0
 576 0403 C9 F4 E6 FF             		movw	r12, #-26
 577 0407 AD F4                   		movw	ax, r12
 578 0409 BD F0                   		movw	r8, ax
 579 040b FA F0                   		movw	hl, r8
 580 040d 8B                      		mov	a, [hl]
 581 040e 9D F6                   		mov	r14, a
 582 0410 6A F6 02                		or	r14, #2
 583 0413 AD F4                   		movw	ax, r12
 584 0415 BD F2                   		movw	r10, ax
 585 0417 DA F2                   		movw	bc, r10
 586 0419 8D F6                   		mov	a, r14
 587 041b 48 00 00                		mov	[bc], a
 138:../src/r_cg_serial.c ****     ST0 |= _0008_SAU_CH3_STOP_TRG_ON | _0004_SAU_CH2_STOP_TRG_ON;    /* disable UART1 receive and t
 588                             		.loc 1 138 0
 589 041e C9 F6 24 01             		movw	r14, #292
 590 0422 C9 F4 24 01             		movw	r12, #292
 591 0426 AD F4                   		movw	ax, r12
 592 0428 BD F0                   		movw	r8, ax
 593 042a FA F0                   		movw	hl, r8
 594 042c AB                      		movw	ax, [hl]
 595 042d BD F4                   		movw	r12, ax
 596 042f 8D F4                   		mov	a, r12
 597 0431 6C 0C                   		or	a, #12
 598 0433 9D F2                   		mov	r10, a
 599 0435 8D F5                   		mov	a, r13
 600 0437 6C 00                   		or	a, #0
 601 0439 9D F3                   		mov	r11, a
 602 043b AD F6                   		movw	ax, r14
 603 043d BD F4                   		movw	r12, ax
 604 043f DA F4                   		movw	bc, r12
 605 0441 AD F2                   		movw	ax, r10
 606 0443 78 00 00                		movw	[bc], ax
 139:../src/r_cg_serial.c ****     SOE0 &= ~_0004_SAU_CH2_OUTPUT_ENABLE;    /* disable UART1 output */
 607                             		.loc 1 139 0
 608 0446 C9 F4 2A 01             		movw	r12, #298
 609 044a C9 F2 2A 01             		movw	r10, #298
 610 044e AD F2                   		movw	ax, r10
 611 0450 BD F0                   		movw	r8, ax
 612 0452 FA F0                   		movw	hl, r8
 613 0454 AB                      		movw	ax, [hl]
 614 0455 BD F2                   		movw	r10, ax
 615 0457 8D F2                   		mov	a, r10
 616 0459 5C FB                   		and	a, #-5
 617 045b 9D F0                   		mov	r8, a
 618 045d 8D F3                   		mov	a, r11
 619 045f 5C FF                   		and	a, #-1
 620 0461 9D F1                   		mov	r9, a
 621 0463 AD F4                   		movw	ax, r12
 622 0465 BD F2                   		movw	r10, ax
 623 0467 DA F2                   		movw	bc, r10
 624 0469 AD F0                   		movw	ax, r8
 625 046b 78 00 00                		movw	[bc], ax
 140:../src/r_cg_serial.c ****     STIF1 = 0U;    /* clear INTST1 interrupt flag */
 626                             		.loc 1 140 0
 627 046e C9 F0 E2 FF             		movw	r8, #-30
 628 0472 AD F0                   		movw	ax, r8
 629 0474 BD F4                   		movw	r12, ax
 630 0476 FA F4                   		movw	hl, r12
 631 0478 8B                      		mov	a, [hl]
 632 0479 9D F2                   		mov	r10, a
 633 047b 5A F2 FE                		and	r10, #-2
 634 047e AD F0                   		movw	ax, r8
 635 0480 DA F4                   		movw	bc, r12
 636 0482 8D F2                   		mov	a, r10
 637 0484 48 00 00                		mov	[bc], a
 141:../src/r_cg_serial.c ****     SRIF1 = 0U;    /* clear INTSR1 interrupt flag */
 638                             		.loc 1 141 0
 639 0487 C9 F0 E2 FF             		movw	r8, #-30
 640 048b AD F0                   		movw	ax, r8
 641 048d BD F4                   		movw	r12, ax
 642 048f FA F4                   		movw	hl, r12
 643 0491 8B                      		mov	a, [hl]
 644 0492 9D F2                   		mov	r10, a
 645 0494 5A F2 FD                		and	r10, #-3
 646 0497 AD F0                   		movw	ax, r8
 647 0499 DA F4                   		movw	bc, r12
 648 049b 8D F2                   		mov	a, r10
 649 049d 48 00 00                		mov	[bc], a
 142:../src/r_cg_serial.c ****    
 143:../src/r_cg_serial.c **** }
 650                             		.loc 1 143 0
 651 04a0 D7                      		ret
 652                             	.LFE3:
 654                             		.global	_R_UART1_Receive
 656                             	_R_UART1_Receive:
 657                             	.LFB4:
 144:../src/r_cg_serial.c **** 
 145:../src/r_cg_serial.c **** /**************************************************************************************************
 146:../src/r_cg_serial.c **** * Function Name: R_UART1_Receive
 147:../src/r_cg_serial.c **** * Description  : This function receives UART1 data.
 148:../src/r_cg_serial.c **** * Arguments    : rx_buf -
 149:../src/r_cg_serial.c **** *                    receive buffer pointer
 150:../src/r_cg_serial.c **** *                rx_num -
 151:../src/r_cg_serial.c **** *                    buffer size
 152:../src/r_cg_serial.c **** * Return Value : status -
 153:../src/r_cg_serial.c **** *                    MD_OK or MD_ARGERROR
 154:../src/r_cg_serial.c **** ***************************************************************************************************
 155:../src/r_cg_serial.c **** MD_STATUS R_UART1_Receive(uint8_t * const rx_buf, uint16_t rx_num)
 156:../src/r_cg_serial.c **** {
 658                             		.loc 1 156 0
 659                             		; start of function
 660                             		; locals: 2 bytes
 661 04a1 20 02                   		subw	sp, #2
 662                             	.LCFI2:
 157:../src/r_cg_serial.c ****     MD_STATUS status = MD_OK;
 663                             		.loc 1 157 0
 664 04a3 F6                      		clrw	ax
 665 04a4 B8 00                   		movw	[sp], ax
 158:../src/r_cg_serial.c **** 
 159:../src/r_cg_serial.c ****     if (rx_num < 1U)
 666                             		.loc 1 159 0
 667 04a6 A8 08                   		movw	ax, [sp+8]
 668 04a8 44 00 00                		cmpw	ax, #0
 669 04ab 61 E8                   		 skz
 670 04ad EC BA 04 00             		 br	!!.L6
 160:../src/r_cg_serial.c ****     {
 161:../src/r_cg_serial.c ****         status = MD_ARGERROR;
 671                             		.loc 1 161 0
 672 04b1 30 81 00                		movw	ax, #129
 673 04b4 B8 00                   		movw	[sp], ax
 674 04b6 EC CC 04 00             		br	!!.L7
 675                             	.L6:
 162:../src/r_cg_serial.c ****     }
 163:../src/r_cg_serial.c ****     else
 164:../src/r_cg_serial.c ****     {
 165:../src/r_cg_serial.c ****         g_uart1_rx_count = 0U;
 676                             		.loc 1 165 0
 677 04ba F6                      		clrw	ax
 678 04bb BF 00 00                		movw	!_g_uart1_rx_count, ax
 166:../src/r_cg_serial.c ****         g_uart1_rx_length = rx_num;
 679                             		.loc 1 166 0
 680 04be A8 08                   		movw	ax, [sp+8]
 681 04c0 BD F0                   		movw	r8, ax
 682 04c2 BF 00 00                		movw	!_g_uart1_rx_length, ax
 167:../src/r_cg_serial.c ****         gp_uart1_rx_address = rx_buf;
 683                             		.loc 1 167 0
 684 04c5 A8 06                   		movw	ax, [sp+6]
 685 04c7 BD F0                   		movw	r8, ax
 686 04c9 BF 00 00                		movw	!_gp_uart1_rx_address, ax
 687                             	.L7:
 168:../src/r_cg_serial.c ****     }
 169:../src/r_cg_serial.c **** 
 170:../src/r_cg_serial.c ****     return (status);
 688                             		.loc 1 170 0
 689 04cc A8 00                   		movw	ax, [sp]
 690 04ce BD F0                   		movw	r8, ax
 171:../src/r_cg_serial.c **** }
 691                             		.loc 1 171 0
 692 04d0 10 02                   		addw	sp, #2
 693 04d2 D7                      		ret
 694                             	.LFE4:
 696                             		.global	_R_UART1_Send
 698                             	_R_UART1_Send:
 699                             	.LFB5:
 172:../src/r_cg_serial.c **** 
 173:../src/r_cg_serial.c **** /**************************************************************************************************
 174:../src/r_cg_serial.c **** * Function Name: R_UART1_Send
 175:../src/r_cg_serial.c **** * Description  : This function sends UART1 data.
 176:../src/r_cg_serial.c **** * Arguments    : tx_buf -
 177:../src/r_cg_serial.c **** *                    transfer buffer pointer
 178:../src/r_cg_serial.c **** *                tx_num -
 179:../src/r_cg_serial.c **** *                    buffer size
 180:../src/r_cg_serial.c **** * Return Value : status -
 181:../src/r_cg_serial.c **** *                    MD_OK or MD_ARGERROR
 182:../src/r_cg_serial.c **** ***************************************************************************************************
 183:../src/r_cg_serial.c **** MD_STATUS R_UART1_Send(uint8_t * const tx_buf, uint16_t tx_num)
 184:../src/r_cg_serial.c **** {
 700                             		.loc 1 184 0
 701                             		; start of function
 702                             		; locals: 2 bytes
 703 04d3 20 02                   		subw	sp, #2
 704                             	.LCFI3:
 185:../src/r_cg_serial.c ****     MD_STATUS status = MD_OK;
 705                             		.loc 1 185 0
 706 04d5 F6                      		clrw	ax
 707 04d6 B8 00                   		movw	[sp], ax
 186:../src/r_cg_serial.c **** 
 187:../src/r_cg_serial.c ****     if (tx_num < 1U)
 708                             		.loc 1 187 0
 709 04d8 A8 08                   		movw	ax, [sp+8]
 710 04da 44 00 00                		cmpw	ax, #0
 711 04dd 61 E8                   		 skz
 712 04df EC EC 04 00             		 br	!!.L10
 188:../src/r_cg_serial.c ****     {
 189:../src/r_cg_serial.c ****         status = MD_ARGERROR;
 713                             		.loc 1 189 0
 714 04e3 30 81 00                		movw	ax, #129
 715 04e6 B8 00                   		movw	[sp], ax
 716 04e8 EC 5F 05 00             		br	!!.L11
 717                             	.L10:
 190:../src/r_cg_serial.c ****     }
 191:../src/r_cg_serial.c ****     else
 192:../src/r_cg_serial.c ****     {
 193:../src/r_cg_serial.c ****         gp_uart1_tx_address = tx_buf;
 718                             		.loc 1 193 0
 719 04ec A8 06                   		movw	ax, [sp+6]
 720 04ee BD F0                   		movw	r8, ax
 721 04f0 BF 00 00                		movw	!_gp_uart1_tx_address, ax
 194:../src/r_cg_serial.c ****         g_uart1_tx_count = tx_num;
 722                             		.loc 1 194 0
 723 04f3 A8 08                   		movw	ax, [sp+8]
 724 04f5 BD F0                   		movw	r8, ax
 725 04f7 BF 00 00                		movw	!_g_uart1_tx_count, ax
 195:../src/r_cg_serial.c ****         STMK1 = 1U;    /* disable INTST1 interrupt */
 726                             		.loc 1 195 0
 727 04fa C9 F0 E6 FF             		movw	r8, #-26
 728 04fe AD F0                   		movw	ax, r8
 729 0500 BD F4                   		movw	r12, ax
 730 0502 FA F4                   		movw	hl, r12
 731 0504 8B                      		mov	a, [hl]
 732 0505 9D F2                   		mov	r10, a
 733 0507 6A F2 01                		or	r10, #1
 734 050a AD F0                   		movw	ax, r8
 735 050c DA F4                   		movw	bc, r12
 736 050e 8D F2                   		mov	a, r10
 737 0510 48 00 00                		mov	[bc], a
 196:../src/r_cg_serial.c ****         TXD1 = *gp_uart1_tx_address;
 738                             		.loc 1 196 0
 739 0513 C9 F2 44 FF             		movw	r10, #-188
 740 0517 AF 00 00                		movw	ax, !_gp_uart1_tx_address
 741 051a BD F0                   		movw	r8, ax
 742 051c BD F4                   		movw	r12, ax
 743 051e FA F4                   		movw	hl, r12
 744 0520 8B                      		mov	a, [hl]
 745 0521 9D F0                   		mov	r8, a
 746 0523 AD F2                   		movw	ax, r10
 747 0525 BD F4                   		movw	r12, ax
 748 0527 DA F4                   		movw	bc, r12
 749 0529 8D F0                   		mov	a, r8
 750 052b 48 00 00                		mov	[bc], a
 197:../src/r_cg_serial.c ****         gp_uart1_tx_address++;
 751                             		.loc 1 197 0
 752 052e AF 00 00                		movw	ax, !_gp_uart1_tx_address
 753 0531 BD F0                   		movw	r8, ax
 754 0533 A6 F0                   		incw	r8
 755 0535 AD F0                   		movw	ax, r8
 756 0537 BF 00 00                		movw	!_gp_uart1_tx_address, ax
 198:../src/r_cg_serial.c ****         g_uart1_tx_count--;
 757                             		.loc 1 198 0
 758 053a AF 00 00                		movw	ax, !_g_uart1_tx_count
 759 053d BD F0                   		movw	r8, ax
 760 053f B6 F0                   		decw	r8
 761 0541 AD F0                   		movw	ax, r8
 762 0543 BF 00 00                		movw	!_g_uart1_tx_count, ax
 199:../src/r_cg_serial.c ****         STMK1 = 0U;    /* enable INTST1 interrupt */
 763                             		.loc 1 199 0
 764 0546 C9 F0 E6 FF             		movw	r8, #-26
 765 054a AD F0                   		movw	ax, r8
 766 054c BD F4                   		movw	r12, ax
 767 054e FA F4                   		movw	hl, r12
 768 0550 8B                      		mov	a, [hl]
 769 0551 9D F2                   		mov	r10, a
 770 0553 5A F2 FE                		and	r10, #-2
 771 0556 AD F0                   		movw	ax, r8
 772 0558 DA F4                   		movw	bc, r12
 773 055a 8D F2                   		mov	a, r10
 774 055c 48 00 00                		mov	[bc], a
 775                             	.L11:
 200:../src/r_cg_serial.c ****     }
 201:../src/r_cg_serial.c **** 
 202:../src/r_cg_serial.c ****     return (status);
 776                             		.loc 1 202 0
 777 055f A8 00                   		movw	ax, [sp]
 778 0561 BD F0                   		movw	r8, ax
 203:../src/r_cg_serial.c **** }
 779                             		.loc 1 203 0
 780 0563 10 02                   		addw	sp, #2
 781 0565 D7                      		ret
 782                             	.LFE5:
 866                             	.Letext0:
 867                             		.file 2 "../src/iodefine.h"
 868                             		.file 3 "../src/iodefine_ext.h"
 869                             		.file 4 "../src/r_cg_macrodriver.h"
 870                             		.file 5 "../src/globals.h"
